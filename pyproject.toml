[tool.poetry]
name = "tap-belvo"
version = "0.0.0"
description = "`tap-belvo` is a Singer tap for Belvo, built with the Meltano SDK for Singer Taps."
authors = ["Edgar Ramírez-Mondragón <edgarrm358@gmail.com>"]
keywords = [
  "ELT",
  "singer.io",
  "Belvo",
]
license = "Apache 2.0"
readme = "README.md"
homepage = "https://github.com/edgarrmondragon/tap-belvo"
repository = "https://github.com/edgarrmondragon/tap-belvo"
documentation = "https://github.com/edgarrmondragon/tap-belvo#readme"

[tool.poetry.dependencies]
python = "<3.12,>=3.7.1"
singer-sdk = "0.19.0"
belvo-python = ">=0.35,<0.37"
requests-cache = "^0.9.7"

[tool.poetry.dev-dependencies]
mypy = ">=0.991"
pytest = "^7.2.1"
types-requests = ">=2.28.11"

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
use_parentheses = true
include_trailing_comma = true
src_paths = "tap_belvo"
known_first_party = "tap_belvo"
add_imports = [
  "from __future__ import annotations",
]

[tool.pytest.ini_options]
addopts = "-vvv"

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["backoff.*"]

[build-system]
requires = ["poetry-core>=1,<2"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
"tap-belvo" = "tap_belvo.tap:TapBelvo.cli"

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
extend-ignore = [
  # equivalent to `--docstring-convention=google`
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
ignore = [
  "ANN101",
]
line-length = 88
select = [
  "F", # Pyflakes
  "E", # pycodestyle (error)
  "W", # pycodestyle (warning)
  "C9", # mccabe
  "I0", # isort
  "D", # pydocstyle (with google style docstring convention)
  "UP", # pyupgrade
  "N8", # pep8-naming
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "S", # flake8-bandit
  "BLE", # flake8-blind-except
  "FBT", # flake8-boolean-trap
  "B0", # flake8-bugbear
  "A0", # flake8-builtins
  "C4", # flake8-comprehensions
  "T1", # flake8-debugger
  "ICN", # flake8-import-conventions
  "T2", # flake8-print
  "Q", # flake8-quotes
  "RET", # flake8-return
  "TID", # flake8-tidy-imports
  "ARG", # flake8-unused-arguments
  "ERA", # eradicate
  "PGH", # pygrep-hooks
  "PLC", # Pylint
  "PLE", # Pylint
  "PLR", # Pylint
  "PLW", # Pylint
  "RUF", # Ruff-specific rules
]
src = ["tap_belvo", "tests"]
target-version = "py37"

[tool.ruff.per-file-ignores]
"noxfile.py" = ["ANN"]
"tests/*" = [
  "ANN201",
  "S101",
]

[tool.ruff.isort]
known-first-party = ["tap_belvo"]
