{
  "openapi": "3.0.2",
  "info": {
    "title": "Belvo API Docs",
    "version": "1.20.1",
    "description": "# Introduction\n\nBelvo is an open banking API for Latin America that allows companies to access banking and fiscal information in a secure as well as agile way.\n\nThrough our API, you can access:\n\n\n- **Bank information** such as account information, real-time\nbalance, historical transactions, and account owner identification.\n\n- **Fiscal information** such as received and sent invoices and tax returns.\n\n\n<img src=\"https://files.readme.io/acf27d3-belvo_pipes.png\"\nalt=\"fiscal-endpoints\">\n\n\nIn this API reference you'll find all the information you need about each\n\nendpoint and resource.\n\n\n<div style=\"background-color:#f4f6f8; border-left: 6px solid\n#4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right:\n25px\">\n\n<strong>Tip: </strong> Make sure that you also check out our Developer\nPortal for guides on <a\nhref=\"https://developers.belvo.com/docs/get-started-in-5-minutes\"\ntarget=\"_blank\">how to get started</a>, using our <a\nhref=\"https://developers.belvo.com/docs/test-in-sandbox\"\ntarget=\"_blank\">Sandbox environment</a>, as well as how to <a\nhref=\"https://developers.belvo.com/docs/connect-widget\"\ntarget=\"_blank\">integrate the widget</a> or use our <a\nhref=\"https://developers.belvo.com/docs/quickstart-application\"\ntarget=\"_blank\">quickstart application</a>.\n\n</div>\n\n\n## Environment\n\nWe currently offer three environments: sandbox, development, and\nproduction.\n\n\nWhen using our SDKs, make sure to use the **Alias** (and not the Base URL).\n\n\n| Environment | Purpose | Access |\n|-----------|-------|-------|\n| **Sandbox** | The [Sandbox environment](https://developers.belvo.com/docs/test-in-sandbox) is dedicated for your testing and development phases. In this environment, you can create links without real credentials and you can pull test data from all endpoints. **‚ö†Ô∏èThe sandbox environment is refreshed frequently and your test data can be updated or deleted.** | Base URL (cURL): https://sandbox.belvo.com/ <br><br>Alias (SDKs): sandbox|\n|**Development**|The Development environment is dedicated for testing with real credentials and institutions with real-world institutions. You can create up to 25 links for free in this environment.| Base URL (cURL): https://development.belvo.com/ <br><br>Alias (SDKs): development |\n| **Production** | The Production environment is dedicated for live applications with real connections to institutions. In this environment, you\nwill need real credentials to create links and you will pull real data from the institutions.| Base URL (cURL): https://api.belvo.com/ <br><br>Alias\n(SDKs): production|\n\n\nFor each environment, you'll need to [generate separate API\nkeys](https://developers.belvo.com/docs/get-your-belvo-api-keys).\n\n\n## Response codes\n\n\nWe use the following HTTP status code in the response depending on the\nsuccess or failure:\n\n\n| Status Code | Description |\n|-----------|-------|\n| `200` | ‚úÖ **Success** - The content is available in the response body. |\n| `201` | ‚úÖ **Success** - The content was created successfully on Belvo. |\n| `204` | ‚úÖ **Success** - No content to return. |\n| `400` | ‚ùå **Bad Request Error** - Request returned an error, detail in content.|\n| `401` | ‚ùå **Unauthorized** - The Belvo credentials provided are not valid.|\n| `404` | ‚ùå **Not Found** - The resource you try to access cannot be found.|\n| `405` | ‚ùå **Method Not Allowed** - The HTTP method you are using is not accepted for this resource.|\n| `408` | ‚ùå **Request Timeout** - The request timed out and was terminated by the server.|\n| `428` | ‚ùå **MFA Token Required** - MFA token was required by the institution to connect. |\n| `500` | ‚ùå **Internal Server Error** - The detail of the error is available in the response body.|\n\n\n## Error handling\n\n\n### Error messages\n\n\nBelvo API errors are returned in JSON format. For example, an error might\nlook like this:\n\n\n```json\n\n[\n    {\n      \"request_id\": \"a6e1c493d7a29d91aed4338e6fcf077d\",\n      \"message\": \"This field is required.\",\n      \"code\": \"required\",\n      \"field\": \"link\"\n    }\n]\n\n```\n\n\nTypically, an error response will have the following parameters:\n\n- `request_id`: a unique ID for the request, you should share it with the\nBelvo support team for investigations.\n\n- `message`: human-readable description of the error.\n\n- `code`: a unique code for the error. Check the table below to see how to\nhandle each error code.\n\n- `field` *(optional)*: The specific field in the request body that has an\nissue.\n\n\n\n### Request identifier\n\nWhen you need help with a specific error, add the request identifier\n(`request_id`) in your message to the Belvo support team. This will speed up\ninvestigations and get you back up and running in no time at all.\n\n\n### Error codes and troubleshooting\n\n\nFor a full list of errors and how to troubleshoot them, please see our\ndedicated [Error handling\narticles](https://developers.belvo.com/docs/integration-overview#error-handling)\nin our DevPortal.\n\n\n\n### Retry policy\n\n\nPlease see our recommended [retry\npolicies](https://developers.belvo.com/docs/integration-overview#error-retry-policy)\nin the DevPortal.\n",
    "contact": {
      "name": "Need help?",
      "url": "https://developers.belvo.com",
      "email": "support@belvo.com"
    },
    "x-logo": {
      "url": "https://files.readme.io/5111448-belvo-for-developers.svg",
      "altText": "Belvo logo"
    }
  },
  "servers": [
    {
      "url": "https://sandbox.belvo.com",
      "description": "Sandbox"
    },
    {
      "url": "https://development.belvo.com",
      "description": "Development"
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Belvo employs **basic authentication** using your secret keys. Just use your secretId as the `username` and secretPassword as the `password`. For example:\n\n```text Authentication example\ncurl \\\n    -u =BASE64-SECRET_ID=:=BASE64-SECRET_PASSWORD=\n    https://sandbox.belvo.com/api/\n```\n\nFor information on how to get your API keys, check out our [Get Started in 5 Minutes](https://developers.belvo.com/docs/get-started-in-5-minutes) DevPortal article."
      }
    },
    "schemas": {
      "Link": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID used to reference the current Link.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "institution": {
            "type": "string",
            "description": "Belvo's name for the institution.\n",
            "example": "erebor_mx_retail"
          },
          "access_mode": {
            "type": "string",
            "enum": [
              "single",
              "recurrent"
            ],
            "description": "The link type.\nFor more information, see our [Links](https://developers.belvo.com/docs/links-and-institutions#links) article.\nWe return one of the following enum values:\n  - `single`\n  - `recurrent`\n",
            "example": "recurrent"
          },
          "last_accessed_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "The ISO-8601 timestamp of Belvo's most recent successful access to the institution for the given link.",
            "example": "2019-09-27T13:02:03.584Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "external_id": {
            "type": "string",
            "nullable": true,
            "description": "The `external_id` you provided as an additional identifier for the link. For more information, see our [Link creation article](https://developers.belvo.com/docs/link-creation-best-practices#adding-your-own-identifier).",
            "example": "56ab5706-6e00-48a4-91c9-ca55968678d9"
          },
          "institution_user_id": {
            "type": "string",
            "pattern": "[A-Za-z0-9\\-=_]{44}",
            "description": "<div style=\"background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\"> <strong>Info:</strong> Only applicable for links created <b>after 08-02-2022</b>. </div>\n\nA unique 44-character string that can be used to identify a user at a given institution.\n\nüìö Check out our [Avoiding duplicated links](https://developers.belvo.com/docs/link-creation-best-practices#avoiding-duplicated-links) DevPortal article for more information and tips on how to use it.",
            "example": "sooE7XJWEKypZJR603ecaWYk-8Ap0oD8Nr1pBQ4eG9c="
          },
          "status": {
            "type": "string",
            "enum": [
              "valid",
              "invalid",
              "unconfirmed",
              "token_required"
            ],
            "description": "The current status of the link. For more information, see our [Link](https://developers.belvo.com/docs/links-and-institutions#links) article in the devportal.\nWe return one of the following enum values:\n  - `valid`\n  - `invalid`\n  - `unconfirmed`\n  - `token_required`\n"
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "description": "The unique ID for the user that created this link.",
            "example": "bcef7f35-67f2-4b19-b009-cb38795faf09"
          },
          "refresh_rate": {
            "type": "string",
            "default": "7d",
            "enum": [
              "6h",
              "12h",
              "24h",
              "7d",
              "30d"
            ],
            "description": "The update refresh rate for the recurrent link. For more information, check out our [recurrent link documentation](https://developers.belvo.com/docs/links-and-institutions#recurrent-links) in our DevPortal.\nWe return one of the following enum values:\n  - `6h`\n  - `12h`\n  - `24h`\n  - `7d` (default)\n  - `30d` (once a month)\n",
            "example": "7d"
          }
        }
      },
      "PaginatedResponseLink": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "title": "Unauthorized Error",
        "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`authentication_failed`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#401-authentication_failed\" target=\"_blank\">401 authentication_failed errors</a>.",
            "example": "authentication_failed"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `authentication_failed` errors, the description is:\n\n  - `Invalid Secret Keys`.",
            "example": "Invalid Secret Keys"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "LinksRequest": {
        "type": "object",
        "required": [
          "institution",
          "username",
          "password"
        ],
        "properties": {
          "institution": {
            "type": "string",
            "pattern": "[a-z]+_[a-z]{2}_[a-z]+",
            "description": "The Belvo name for the institution.",
            "example": "erebor_mx_retail"
          },
          "username": {
            "type": "string",
            "description": "The end-user's username used to log in to the institution.",
            "example": "username"
          },
          "password": {
            "type": "string",
            "description": "The end-user's password used to log in to the institution.",
            "example": "password"
          },
          "external_id": {
            "type": "string",
            "description": "An additional identifier for the link, provided by you, to store in the Belvo database. **Cannot** include any Personal Identifiable Information (PII).\n\nIf we identify that the identifier contains PII, we will force a `null` value. For more information, see our [Link creation article](https://developers.belvo.com/docs/link-creation-best-practices#adding-your-own-identifier).",
            "example": "56ab5706-6e00-48a4-91c9-ca55968678d9"
          },
          "username2": {
            "type": "string",
            "description": "The end-user's second username used to log in to the institution.\n\n‚ÑπÔ∏è This is only required by some institutions. To know which institutions require a second username, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the `form_fields` array in the response.\n",
            "example": "secondusername"
          },
          "username3": {
            "type": "string",
            "description": "The end-user's third username used to log in to the institution.\n\n‚ÑπÔ∏è This is only required by some institutions. To know which institutions require a third username, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the `form_fields` array in the response.\n",
            "example": "thirdusername"
          },
          "password2": {
            "type": "string",
            "description": "The end-user's second password used to log in to the institution.\n\n‚ÑπÔ∏è This is only required by some institutions. To know which institutions require a second password, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the `form_fields` array in the response.\n",
            "example": "pin"
          },
          "token": {
            "type": "string",
            "description": "The MFA token required by the bank to log in.\n\nWe do not recommend sending the authentication token in the same request as registering the user. See our [Handling multi-factor authentication](https://developers.belvo.com/docs/handling-2-factor-authentication) article for more information and best practices.\n",
            "example": "1234ab"
          },
          "access_mode": {
            "description": "The type of link to create.\n\n- Use `single` to do ad hoc one-time POST requests for accounts, owners, and transactions.\n- Use `recurrent` to have Belvo access information on a recurrent basis so you always have fresh account, owner, balance, and transaction data.\n\nFor more information, see our [Links](https://developers.belvo.com/docs/links-and-institutions#links) article.\n",
            "enum": [
              "single",
              "recurrent"
            ],
            "default": "recurrent"
          },
          "username_type": {
            "type": "string",
            "description": "Type of document to be used as a username.\n\nSome banking institutions accept different documents to be used as the `username` to login. For example, the *C√©dula de Ciudadan√≠a*, *C√©dula de Extranjer√≠a*, *Pasaporte'*, and so on.\n\nFor banks that require a document to log in, you **must** provide the `username_type` parameter to specify which document is used when creating the link.\n\n‚ÑπÔ∏è To know which institutions require the `username_type` parameter, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the `form_fields` array in the response.\n\nFor a list of standards codes, see the table below.\n\n| Code | Description |\n|-----------|-------|\n| `001` | C√©dula de Ciudadan√≠a |\n| `002` | C√©dula de Extranjer√≠a |\n| `003` | Pasaporte |\n| `004` | Tarjeta de Identidad |\n| `005` | Registro Civil |\n| `006` | N√∫mero Identificaci√≥n Personal |\n| `020` | NIT |\n| `021` | NIT Persona Natural |\n| `022` | NIT Persona Extranjera |\n| `023` | NIT Persona Jur√≠dica |\n| `024` | NIT Menores |\n| `025` | NIT Desasociado |\n| `030` | Trj. Seguro Social Extranjero |\n| `031` | Sociedad Extranjera sin NIT en Colombia |\n| `032` | Fideicomiso |\n| `033` | RIF Venezuela |\n| `034` | CIF |\n| `035` | N√∫mero de Identidad |\n| `036` | RTN |\n| `037` | C√©dula de Identidad |\n| `038` | DIMEX |\n| `039` | CED |\n| `040` | PAS |\n| `041` | Documento √önico de Identidad |\n| `042` | NIT Salvadore√±o |\n| `100` | Ag√™ncia e conta |\n| `101` | C√≥digo do operador |\n| `102` | Cart√£o de cr√©dito |\n| `103` | CPF |\n",
            "example": "001"
          },
          "certificate": {
            "type": "string",
            "description": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.\n\nBelvo supports a base64 encoded `certificate`. If the `certificate` parameter is used, you *must* also provide the `private_key` parameter.\n",
            "example": "1234567890abcd="
          },
          "private_key": {
            "type": "string",
            "description": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.\n\nBelvo supports a base64 encoded `private_key`. If the `private_key` parameter is used, you *must* also provide the `certificate` parameter.\n",
            "example": "1234567890abcd="
          }
        }
      },
      "TooManySessionsError": {
        "type": "object",
        "title": "Too Many Sessions",
        "description": "This error occurs when:\n\n  - a user is attempting to log in to their institution via Belvo while also already being logged in to their institution on a web browser or mobile app.\n  - you make a request for information while Belvo is scraping data from the institution for that user.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`too_many_sessions`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-too_many_sessions\" target=\"_blank\">400 too_many_sessions errors</a>.",
            "example": "too_many_sessions"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `too_many_sessions` errors, the description is:\n  \n  - `Impossible to login, a session is already opened with the institution for these credentials`.",
            "example": "Impossible to login, a session is already opened with the institution for these credentials"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "SessionExpiredError": {
        "type": "object",
        "title": "Session Expired",
        "description": "This error occurs when you try to resume a request session that has already expired. This is usually because the user took too long to provide their authentication token.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`session_expired`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-session_expired\" target=\"_blank\">400 session_expired errors</a>.",
            "example": "session_expired"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `session_expired` errors, the description is:\n  \n  - `The session you are trying to resume has expired, please start again from register/retrieve endpoint`.",
            "example": "The session you are trying to resume has expired, please start again from register/retrieve endpoint"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "title": "Validation Error",
        "description": "This error occurs when you try to resume a request session that has already expired. This is usually because the user took too long to provide their authentication token.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`null`, `does_not_exist`, `required`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle:\n  - <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-blank\" target=\"_blank\">400 blank errors</a>\n  - <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-null\" target=\"_blank\">400 null errors</a>\n  - <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-does_not_exist\" target=\"_blank\">400 does_not_exist errors</a>\n  - <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-required\" target=\"_blank\">400 required errors</a>",
            "example": "required"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `session_expired` errors, the description can be (among others):\n  \n  - `This field is required.`\n  - `Object with name=narnia does not exist.`\n  - `This field may not be null.`\n  - `This field may not be blank.`",
            "example": "This field is required."
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          },
          "field": {
            "type": "string",
            "nullable": true,
            "description": "Name of the field where the error was encountered.",
            "example": "link"
          }
        }
      },
      "InstitutionDownError": {
        "type": "object",
        "title": "Institution Down",
        "description": "This error occurs when the institution's website that you're trying to access is down due to maintenance or other issues, which means Belvo is unable to create new links or retrieve new data.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`institution_down`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-institution_down\" target=\"_blank\">400 institution_down errors</a>.",
            "example": "institution_down"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `institution_down` errors, the description is:\n  \n  - `The financial institution is down, try again later`.",
            "example": "The financial institution is down, try again later"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "InstitutionUnavailableError": {
        "type": "object",
        "title": "Institution Unavailable",
        "description": "This error occurs when the institution's website that you're trying to access is down due to maintenance or other issues, which means Belvo is unable to create new links or retrieve new data.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`institution_unavailable`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-institution_unavailable\" target=\"_blank\">400 institution_unavailable errors</a>.",
            "example": "institution_unavailable"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error.\n\nFor `institution_unavailable` errors, the description is:\n  \n  - `The financial institution is unavailable`.",
            "example": "The financial institution is unavailable"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "InstitutionInactiveError": {
        "type": "object",
        "title": "Institution Inactive",
        "description": "This error occurs when we (Belvo) have deactivated the institution in our API.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`institution_inactive`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-institution_inactive\" target=\"_blank\">400 institution_inactive errors</a>.",
            "example": "institution_inactive"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `institution_inactive` errors, the description is:\n  \n  - `The institution has been temporarily deactivated`.",
            "example": "The institution has been temporarily deactivated"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "UnsupportedOperationError": {
        "type": "object",
        "title": "Unsupported Operation",
        "description": "This error occurs when you try to access some data operation that Belvo does not support for an institution. For example, trying to access the Balances resource for fiscal institutions.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`unsupported_operation`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-unsupported_operation\" target=\"_blank\">400 unsupported_operation errors</a>.",
            "example": "unsupported_operation"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `unsupported_operation` errors, the description is:\n  \n  - `The resource you are trying to access is not supported by this institution`.",
            "example": "The resource you are trying to access is not supported by this institution"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "InvalidLinkError": {
        "type": "object",
        "title": "Invalid Link",
        "description": "This error occurs when you try to access an account but the user credentials are no longer valid, prompting an error from the institution.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`invalid_link`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-invalid_link\" target=\"_blank\">400 invalid_link errors</a>.",
            "example": "invalid_link"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `invalid_link` errors, the description is:\n  \n  - `The link has been invalidated. You may need to update link credentials`.",
            "example": "The link has been invalidated. You may need to update link credentials"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "UnconfirmedLinkError": {
        "type": "object",
        "title": "Unconfirmed Link",
        "description": "This error occurs when you try to access a link that was paused previously (and as such is not active now).\nA Link's status is set to `unconfirmed_link` when your user has not completed the Link creation process successfully (for example, they might not provide a valid MFA token).",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`unconfirmed_link`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-unconfirmed_link\" target=\"_blank\">400 unconfirmed_link errors</a>.",
            "example": "unconfirmed_link"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `unconfirmed_link` errors, the description is:\n  \n  - `The link creation has not been completed yet`.",
            "example": "The link creation has not been completed yet"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "TokenRequiredResponseTokenGenerationData": {
        "type": "object",
        "description": "Details on how to generate the token.",
        "properties": {
          "instructions": {
            "type": "string",
            "description": "Instructions for token generation.",
            "example": "Use this code to generate the token"
          },
          "type": {
            "type": "string",
            "description": "Type of the data to generate the token (QR code, numeric challenge).",
            "example": "numeric"
          },
          "value": {
            "type": "string",
            "description": "Value to use to generate the token.",
            "example": "12345"
          },
          "expects_user_input": {
            "type": "boolean",
            "description": "Indicates whether the user needs to provide input in order to complete the authentication.\nWhen set to `false`, your user may need to:\n- confirm the login on another device - scan a QR code\nYou will still need to make a PATCH call to complete the request.",
            "example": true,
            "default": true
          }
        }
      },
      "TokenRequiredResponse": {
        "type": "object",
        "description": "MFA Token Required",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`token_required`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#428-token_required\" target=\"_blank\">428 token_required errors</a>.",
            "example": "token_required"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `token_required` errors, the description is:\n  \n  - `A MFA token is required by the institution to login`.",
            "example": "A MFA token is required by the institution to login"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "8c7b283c6efa449c9c028a16b5c249fa"
          },
          "session": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the login session (matching a regex pattern of: `[a-f0-9]{32}`).",
            "example": "2675b703b9d4451f8d4861a3eee54449"
          },
          "expiry": {
            "type": "integer",
            "format": "int32",
            "description": "Session duration time in seconds.",
            "example": 9600
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier created by Belvo, used to reference the current Link.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "token_generation_data": {
            "$ref": "#/components/schemas/TokenRequiredResponseTokenGenerationData"
          }
        }
      },
      "UnexpectedError": {
        "type": "object",
        "title": "Unexpected Error",
        "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`unexpected_error`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#500-unexpected_error\" target=\"_blank\">500 unexpected_error errors</a>.",
            "example": "unexpected_error"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `unexpected_error` errors, the description is:\n  \n  - `Belvo is unable to process the request due to an internal system issue or to an unsupported response from an institution`.",
            "example": "Belvo is unable to process the request due to an internal system issue or to an unsupported response from an institution"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "PatchBodyWithoutSaveData": {
        "type": "object",
        "description": "A JSON object containing a session UUID and a MFA token",
        "required": [
          "session",
          "link"
        ],
        "properties": {
          "session": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "The session you want to resume. You need to use the `session` value that is provided in the 428 Token Required response that you receive after you make your POST request.",
            "example": "6e7b283c6efa449c9c028a16b5c249fa"
          },
          "token": {
            "type": "string",
            "description": "The MFA token generated by the institution and required to continue a session.",
            "example": "1234ab"
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` you want to resume. Must be the same `link.id` as the one you receive in the 428 Token Required response that contains the `session` ID.",
            "example": "683005d6-f45c-4adb-b289-f1a12f50f80c"
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "title": "Not Found",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`not_found`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#404-not_found\" target=\"_blank\">404 not_found errors</a>.",
            "example": "not_found"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `not_found` errors, the description is:\n  \n  - `Not found`",
            "example": "Not found"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "LinksPutRequest": {
        "type": "object",
        "required": [
          "institution",
          "username",
          "password"
        ],
        "properties": {
          "password": {
            "type": "string",
            "description": "The end-user's password used to log in to the institution.",
            "example": "password"
          },
          "password2": {
            "type": "string",
            "description": "The end-user's second password used to log in to the institution.\n\n‚ÑπÔ∏è This is only required by some institutions. To know which institutions require a second password, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the `form_fields` array in the response.\n",
            "example": "pin"
          },
          "token": {
            "type": "string",
            "description": "The MFA token required by the bank to log in.\n",
            "example": "1234ab"
          },
          "username_type": {
            "type": "string",
            "description": "Type of document to be used as a username.\n\n  Some banking institutions accept different documents to be used as the `username` to login. For example, the *C√©dula de Ciudadan√≠a*, *C√©dula de Extranjer√≠a*, *Pasaporte'*, and so on.\n\n  For banks that require a document to log in, you **must** provide the `username_type` parameter to specify which document is used when creating the link.\n\n  ‚ÑπÔ∏è To know which institutions require the `username_type` parameter, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the `form_fields` array in the response.\n\n  For a list of standards codes, see the table below.\n\n| Code | Description |\n|-----------|-------|\n| `001` | C√©dula de Ciudadan√≠a |\n| `002` | C√©dula de Extranjer√≠a |\n| `003` | Pasaporte |\n| `004` | Tarjeta de Identidad |\n| `005` | Registro Civil |\n| `006` | N√∫mero Identificaci√≥n Personal |\n| `020` | NIT |\n| `021` | NIT Persona Natural |\n| `022` | NIT Persona Extranjera |\n| `023` | NIT Persona Jur√≠dica |\n| `024` | NIT Menores |\n| `025` | NIT Desasociado |\n| `030` | Trj. Seguro Social Extranjero |\n| `031` | Sociedad Extranjera sin NIT en Colombia |\n| `032` | Fideicomiso |\n| `033` | RIF Venezuela |\n| `034` | CIF |\n| `035` | N√∫mero de Identidad |\n| `036` | RTN |\n| `037` | C√©dula de Identidad |\n| `038` | DIMEX |\n| `039` | CED |\n| `040` | PAS |\n| `041` | Documento √önico de Identidad |\n| `042` | NIT Salvadore√±o |\n| `100` | Ag√™ncia e conta |\n| `101` | C√≥digo do operador |\n| `102` | Cart√£o de cr√©dito |\n| `103` | CPF |\n",
            "example": "001"
          },
          "certificate": {
            "type": "string",
            "description": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.\n\nBelvo supports a base64 encoded `certificate`. If the `certificate` parameter is used, you *must* also provide the `private_key` parameter.\n",
            "example": "1234567890abcd="
          },
          "private_key": {
            "type": "string",
            "description": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.\n\nBelvo supports a base64 encoded `private_key`. If the `private_key` parameter is used, you *must* also provide the `certificate` parameter.\n",
            "example": "1234567890abcd="
          }
        }
      },
      "InstitutionAccount": {
        "type": "object",
        "description": "Details regarding the institution.",
        "properties": {
          "name": {
            "type": "string",
            "example": "erebor_mx_retail",
            "description": "The name of the institution, as designated by Belvo.\nPlease see our [Institutions](https://developers.belvo.com/docs/institution) DevPortal article for a detailed list of institution names."
          },
          "type": {
            "type": "string",
            "enum": [
              "bank",
              "fiscal",
              "gig"
            ],
            "description": "The type of institution.\n\nCan be either:\n\n  - `bank`\n  - `fiscal`\n  - `gig` *This field has been deprecated.*\n"
          }
        }
      },
      "AccountsBalance": {
        "type": "object",
        "required": [
          "current"
        ],
        "description": "Details regarding the current and available balances for the account.\n",
        "properties": {
          "current": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The current balance is calculated differently according to the type of account.\n\n- **üí∞ Checking and saving accounts**:\n\nThe user's account balance at the `collected_at` timestamp.\n- **üí≥ Credit cards**:\n\nThe amount the user has spent in the current card billing period (see `credit_data.cutting_date` for information on when the current billing period finishes).\n- **üè° Loan accounts**:\n\nThe amount remaining to pay on the users's loan (same as `loan_data.outstanding_balance`).",
            "example": 5874.13
          },
          "available": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The balance that the account owner can use.\n- **üí∞ Checking and saving accounts**:\n\nThe available balance may be different to the `current` balance due to pending transactions.\n- **üí≥ Credit cards**:\n\nThe credit amount the user still has available for the current period. The amount is calculated as `credit_data.credit_limit` minus `balance.current`.\n- **üè° Loan accounts**:\n\nThe present value required to pay off the loan, as provided by the institution.\n\n**Note:** If the institution does not provide this value, we return `null`.",
            "example": 5621.12
          }
        }
      },
      "AccountsCreditData": {
        "type": ["object", "null"],
        "required": [
          "credit_limit",
          "cutting_date",
          "next_payment_date",
          "minimum_payment",
          "no_interest_payment",
          "interest_rate",
          "collected_at"
        ],
        "nullable": true,
        "description": "The credit options associated with this account.",
        "properties": {
          "credit_limit": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 192000,
            "description": "The maximum amount of credit the owner can receive."
          },
          "collected_at": {
            "type": "string",
            "nullable": true,
            "example": "2019-09-27T13:01:41.941Z",
            "format": "date-time",
            "description": "The ISO-8601 timestamp when the data point was collected."
          },
          "cutting_date": {
            "type": "string",
            "nullable": true,
            "example": "2019-12-11",
            "description": "The closing date of the credit period."
          },
          "next_payment_date": {
            "type": "string",
            "description": "The due date for the next payment.",
            "example": "2019-12-13",
            "nullable": true
          },
          "minimum_payment": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 2400.3,
            "description": "The minimum amount to be paid on the `next_payment_date`."
          },
          "no_interest_payment": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 2690.83,
            "description": "The minimum amount required to pay to avoid generating interest."
          },
          "interest_rate": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The annualized interest rate of the credit.",
            "example": 4
          },
          "end_date": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n",
            "example": null
          },
          "monthly_payment": {
            "type": "number",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n*The recurrent monthly payment, if applicable.*\n",
            "example": null
          },
          "last_payment_date": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n\n*The date when the last credit payment was made.*\n",
            "example": null
          }
        }
      },
      "AccountsLoanDataInterestRate": {
        "type": "object",
        "required": [
          "name",
          "type",
          "value"
        ],
        "description": "Breakdown of the interest applied to the loan.",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the type of interest rate applied to the loan.",
            "example": "jurosEfetivo"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "MONTHLY",
              "YEARLY"
            ],
            "description": "The period that the interest is applied to the loan.",
            "example": "MONTHLY"
          },
          "value": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The interest rate (in percent or currency value).",
            "example": 7.85
          }
        }
      },
      "AccountsLoanDataFees": {
        "type": "object",
        "nullable": true,
        "required": [
          "type",
          "value"
        ],
        "description": "Breakdown of the fees applied to the loan.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OPERATION_FEE",
              "INSURANCE_FEE",
              "OTHERS"
            ],
            "description": "The type of fee.",
            "example": "OPERATION_FEE"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "The total value of the fee. Same currency of the Loan.\n",
            "example": 5.6
          }
        }
      },
      "AccountsLoanData": {
        "type": ["object", "null"],
        "nullable": true,
        "required": [
          "principal",
          "monthly_payment",
          "outstanding_balance",
          "interest_rates",
          "collected_at"
        ],
        "description": "The loan options associated with this account.",
        "properties": {
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "contract_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The initial total loan amount, calculated by the institution, when the contract was signed. This amount includes the principal + interest + taxes + fees.",
            "example": 202000
          },
          "principal": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Total amount of the loan (the amount the user receives).",
            "example": 192000
          },
          "loan_type": {
            "type": "string",
            "nullable": true,
            "description": "The type of the loan, according to the institution.",
            "example": "Consignado"
          },
          "payment_day": {
            "type": "string",
            "nullable": true,
            "description": "The day of the month by which the owner needs to pay the loan.",
            "example": "27"
          },
          "outstanding_principal": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Outstanding loan amount, that is, how much remains to pay on the principal (not including interest).\n",
            "example": 142023
          },
          "outstanding_balance": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The amount remaining to pay in total, including interest.",
            "example": 182000
          },
          "monthly_payment": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The recurrent monthly payment, if applicable.",
            "example": 1000
          },
          "interest_rates": {
            "type": "array",
            "nullable": true,
            "description": "Breakdown of the interest applied to the loan.",
            "items": {
              "$ref": "#/components/schemas/AccountsLoanDataInterestRate"
            }
          },
          "fees": {
            "type": "array",
            "nullable": true,
            "description": "Breakdown of the fees applied to the loan.",
            "items": {
              "$ref": "#/components/schemas/AccountsLoanDataFees"
            }
          },
          "number_of_installments_total": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The total number of installments required to pay the loan.",
            "example": 60
          },
          "number_of_installments_outstanding": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The number of installments left to pay.",
            "example": 48
          },
          "contract_start_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The date when the loan contract was signed.",
            "example": "2020-03-01"
          },
          "contract_end_date": {
            "type": "string",
            "format": "date",
            "description": "The date when the loan is expected to be completed.",
            "example": "2027-10-01"
          },
          "contract_number": {
            "type": "string",
            "nullable": true,
            "description": "The contract number of the loan, as given by the institution.",
            "example": "890ASLDJF87SD00"
          },
          "credit_limit": {
            "type": "number",
            "nullable": true,
            "deprecated": true,
            "description": "This field has been deprecated.\n\nPlease see `principal` instead.\n",
            "example": null
          },
          "last_period_balance": {
            "type": "number",
            "deprecated": true,
            "nullable": true,
            "description": "This field has been deprecated.\n\nPlease see `outstanding_balance` instead.\n",
            "example": null
          },
          "interest_rate": {
            "type": "number",
            "nullable": true,
            "deprecated": true,
            "description": "This field has been deprecated.\n\nPlease see the `interest_rates` object instead.\n",
            "example": null
          },
          "limit_day": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "This field has been deprecated.\n\nPlease see `payment_day` instead.\n",
            "example": null
          },
          "cutting_day": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "This field has been deprecated.\n\nThe closing day of the month for the loan.\n",
            "example": null
          },
          "cutting_date": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "This field has been deprecated.\n\nThe closing date of the loan period.\n",
            "example": null
          },
          "last_payment_date": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "This field has been deprecated.\n\nThe date when the last loan payment was made.\n",
            "example": null
          },
          "no_interest_payment": {
            "type": "number",
            "deprecated": true,
            "nullable": true,
            "description": "This field has been deprecated.\n\nThe minimum amount required to pay to avoid generating interest.\n",
            "example": null
          }
        }
      },
      "AccountsFundsDataPublicIdentifications": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The type of identification number for the fund.",
            "example": "CNPJ"
          },
          "value": {
            "type": "string",
            "nullable": true,
            "description": "The fund's identification number.",
            "example": "05.954.445/0221-68"
          }
        }
      },
      "AccountsFundsData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "example": "FIX X",
            "description": "The pension fund name."
          },
          "type": {
            "type": "string",
            "nullable": true,
            "example": "CNPJ",
            "description": "Type of pension fund."
          },
          "public_identifications": {
            "type": "array",
            "nullable": true,
            "description": "The fund's public IDs.",
            "items": {
              "$ref": "#/components/schemas/AccountsFundsDataPublicIdentifications"
            }
          },
          "balance": {
            "type": "string",
            "nullable": true,
            "example": "88427.94",
            "description": "The amount in the fund."
          },
          "percentage": {
            "type": "string",
            "nullable": true,
            "example": "100",
            "description": "How much this fund, as a percentage, contributes to the pension account's total."
          }
        }
      },
      "AccountsGigPaymentData": {
        "type": "object",
        "deprecated": true,
        "description": "*This field has been deprecated.*\n\n*Additional data provided by the institution on the payment methods configured in the user profiles. This data is **only** provided by gig economy institutions.*",
        "nullable": true,
        "properties": {
          "method": {
            "type": "string",
            "nullable": true,
            "deprecated": true,
            "description": "*This field has been deprecated.*\n\n*The payment method type set up by the user (`BANK_ACCOUNT`, `CARD`, or `CASH`).*",
            "example": "BANK_ACCOUNT"
          },
          "issuer": {
            "type": "string",
            "nullable": true,
            "deprecated": true,
            "description": "*This field has been deprecated.*\n\n*The payment `method` issuer set up by the user (bank institution or card issuer).*",
            "example": "AZTECA - BANCO AZTECA SA"
          },
          "number": {
            "type": "string",
            "nullable": true,
            "deprecated": true,
            "description": "*This field has been deprecated.*\n\n*The bank account or card number used for the payment.*",
            "example": "123184016786312246"
          },
          "holder_name": {
            "type": "string",
            "nullable": true,
            "deprecated": true,
            "description": "*This field has been deprecated.*\n\n*The name of the payment `method` holder.*",
            "example": "Elisa Rojas Rivas"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true,
            "description": "*This field has been deprecated.*\n\n*The ISO-8601 timestamp when the data point was collected.*",
            "example": "2019-09-27T13:01:41.941Z"
          }
        }
      },
      "AccountsReceivablesData": {
        "type": "object",
        "required": [
          "current",
          "available",
          "anticipated",
          "collected_at"
        ],
        "nullable": true,
        "description": "Additional details regarding the receivables account, if applicable.",
        "properties": {
          "current": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 2193.83,
            "description": "The total sum of all receivables (`available` + `anticipated`)"
          },
          "available": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 800.37,
            "description": "The amount that the owner of the account will receive according to an established date."
          },
          "anticipated": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 1393.46,
            "description": "The amount that the owner of the account received earlier than contracted."
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2022-02-09T08:45:50.406032Z"
          }
        }
      },
      "Account": {
        "type": "object",
        "nullable": true,
        "description": "Details regarding the account.\n\n**Note**: For our recurring expenses resource, this account relates to the account that was analyzed to generate the recurring expenses report.\n",
        "required": [
          "name",
          "number",
          "type",
          "category",
          "public_identification_name",
          "public_identification_value",
          "currency",
          "balance",
          "credit_data",
          "loan_data",
          "collected_at",
          "last_accessed_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier created by Belvo used to reference the current account.",
            "example": "0d3ffb69-f83b-456e-ad8e-208d0998d71d"
          },
          "link": {
            "type": "string",
            "nullable": true,
            "description": "The `link.id` the account belongs to.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "institution": {
            "$ref": "#/components/schemas/InstitutionAccount"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "category": {
            "type": "string",
            "nullable": true,
            "enum": [
              "CHECKING_ACCOUNT",
              "CREDIT_CARD",
              "DELIVERY_ACCOUNT",
              "DRIVER_ACCOUNT",
              "INVESTMENT_ACCOUNT",
              "LOAN_ACCOUNT",
              "PENSION_FUND_ACCOUNT",
              "RECEIVABLES_ACCOUNT",
              "SAVINGS_ACCOUNT",
              "UNCATEGORIZED"
            ],
            "description": "The type of account.\nWe return one of the following enum values:\n  - `CHECKING_ACCOUNT`\n  - `CREDIT_CARD`\n  - `DELIVERY_ACCOUNT` *This field has been deprecated.*\n  - `DRIVER_ACCOUNT` *This field has been deprecated.*\n  - `INVESTMENT_ACCOUNT`\n  - `LOAN_ACCOUNT`\n  - `PENSION_FUND_ACCOUNT`\n  - `RECEIVABLES_ACCOUNT`\n  - `SAVINGS_ACCOUNT`\n  - `UNCATEGORIZED`\n",
            "example": "CHECKING_ACCOUNT"
          },
          "balance_type": {
            "type": "string",
            "nullable": true,
            "description": "Indicates whether this account is either an `ASSET` or a `LIABILITY`. You can consider the balance of an `ASSET` as being positive, while the balance of a `LIABILITY` as negative.\n",
            "example": "ASSET"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "The account type, as designated by the institution.",
            "example": "Cuentas de efectivo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The account name, as given by the institution.",
            "example": "Cuenta Perfiles- M.N. - MXN-666"
          },
          "number": {
            "type": "string",
            "nullable": true,
            "description": "The account number, as designated by the institution.",
            "example": "4057068115181"
          },
          "balance": {
            "$ref": "#/components/schemas/AccountsBalance"
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "The currency of the account. For example:\n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n\n Please note that other currencies other than in the list above may be returned.",
            "example": "MXN"
          },
          "public_identification_name": {
            "type": "string",
            "nullable": true,
            "description": "The public name for the type of identification. For example: `\"CLABE\"`.\n\n‚ÑπÔ∏è For üáßüá∑ Brazilian savings and checking accounts, this field will be `AGENCY/ACCOUNT`.\n",
            "example": "CLABE"
          },
          "public_identification_value": {
            "type": "string",
            "nullable": true,
            "description": "The value for the `public_identification_name`.\n\n‚ÑπÔ∏è For üáßüá∑ Brazilian savings and checking accounts, this field will be the agency and bank account number, separated by a slash.\nFor example: `0444/45722-0`.\n",
            "example": "150194683119900273"
          },
          "last_accessed_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp of Belvo's most recent successful access to the institution for the given link.",
            "example": "2021-03-09T10:28:40.000Z"
          },
          "credit_data": {
            "$ref": "#/components/schemas/AccountsCreditData"
          },
          "loan_data": {
            "$ref": "#/components/schemas/AccountsLoanData"
          },
          "funds_data": {
            "type": "array",
            "description": "One or more funds that contribute to the the pension account.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AccountsFundsData"
            }
          },
          "gig_payment_data": {
            "$ref": "#/components/schemas/AccountsGigPaymentData"
          },
          "receivables_data": {
            "$ref": "#/components/schemas/AccountsReceivablesData"
          },
          "bank_product_id": {
            "deprecated": true,
            "type": "string",
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n*The institution's product ID for the account type.*\n",
            "example": null
          },
          "internal_identification": {
            "deprecated": true,
            "type": "string",
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n*The institution's internal identification for the account.*\n",
            "example": null
          }
        }
      },
      "AccountsPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "An array of Account objects.",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "StandardRequest": {
        "type": "object",
        "required": [
          "link"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` that you want to get information for.",
            "example": "2ccd5e15-194a-4a19-a45a-e7223c7e6717"
          },
          "token": {
            "type": "string",
            "description": "The OTP token generated by the bank.",
            "example": "1234ab"
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response."
          }
        }
      },
      "RequestTimeoutError": {
        "type": "object",
        "title": "Request Timeout",
        "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`request_timeout`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#408-request_timeout\" target=\"_blank\">408 request_timeout errors</a>.",
            "example": "request_timeout"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `request_timeout` errors, the description is:\n  \n  - `The request timed out, you can retry asking for less data by changing your query parameters`.",
            "example": "The request timed out, you can retry asking for less data by changing your query parameters"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "PatchBody": {
        "type": "object",
        "description": "A JSON object containing a session UUID and a MFA token",
        "required": [
          "session",
          "link"
        ],
        "properties": {
          "session": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "The session you want to resume. You need to use the `session` value that is provided in the 428 Token Required response that you receive after you make your POST request.",
            "example": "6e7b283c6efa449c9c028a16b5c249fa"
          },
          "token": {
            "type": "string",
            "description": "The MFA token generated by the institution and required to continue a session.",
            "example": "1234ab"
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` you want to resume. Must be the same `link.id` as the one you receive in the 428 Token Required response that contains the `session` ID.",
            "example": "683005d6-f45c-4adb-b289-f1a12f50f80c"
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response.",
            "example": true
          }
        }
      },
      "TransactionMerchantData": {
        "type": "object",
        "nullable": true,
        "description": "Additional data regarding the merchant involved in the transaction.\nWe only return merchant information for new transactions made from *checking* or *credit card* accounts.\n> **Get merchant information**\n We can retrieve the merchant information for a transaction as part of our [Transaction categorization](https://developers.belvo.com/docs/banking#transaction-categorization) product, turning raw data into actionable insights. To enable this product, just email our sales team at sales@belvo.com, and they'll get right to it.\n",
        "properties": {
          "logo": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the merchant's logo.",
            "example": "https://logo.clearbit.com/asesor-contable.es"
          },
          "website": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the merchant's website.",
            "example": "https://merchants-r-us.com"
          },
          "merchant_name": {
            "type": "string",
            "description": "The name of the merchant.",
            "example": "Merchants R Us Global"
          }
        }
      },
      "TransactionBreakdown": {
        "type": "object",
        "deprecated": true,
        "description": "*This field has been deprecated.*\n*List of items representing the breakdown of the total amount in a transactions.*",
        "nullable": true,
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*The price of the transaction (trip or delivery order).*",
            "example": 10
          },
          "reference": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n*Additional information from the gig institution regarding the breakdown.*",
            "example": "base_fare"
          },
          "description": {
            "type": "string",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*The description of the breakdown. In some cases this field may provide information on how the `breakdown.amount` was calculated.*",
            "example": "Trip"
          }
        }
      },
      "TransactionGigData": {
        "type": "object",
        "nullable": true,
        "deprecated": true,
        "description": "*This field has been deprecated.*\n\n\n*Additional data provided by the institution on the transaction. This data is provided only by gig economy institutions.*",
        "properties": {
          "pickup_at": {
            "type": "string",
            "format": "date-time",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*Pickup ISO-8601 timestamp for one trip transaction or delivery.*",
            "nullable": true,
            "example": "2019-11-28T10:27:44.813Z"
          },
          "dropoff_at": {
            "type": "string",
            "format": "date-time",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*Dropoff ISO-8601 timestamp for one trip transaction or delivery.*",
            "nullable": true,
            "example": "2019-11-28T10:27:44.813Z"
          },
          "request_at": {
            "type": "string",
            "format": "date-time",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*ISO-8601 timestamp when one trip transaction or delivery was requested.*",
            "nullable": true,
            "example": "2019-11-28T10:27:44.813Z"
          },
          "pickup_address": {
            "type": "string",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*Pickup address for the trip or delivery.*",
            "nullable": true,
            "example": "Carrer de la Llacuna, 162, 08018 Barcelona"
          },
          "dropoff_address": {
            "type": "string",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*Dropoff address for the trip or delivery.*",
            "nullable": true,
            "example": "Carrer de la Llacuna, 162, 08018 Barcelona"
          },
          "pickup_latitude": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n*Latitude of the `pickup_address`.*\n",
            "example": null
          },
          "pickup_longitude": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n*Longitude of the `pickup_address`.*\n",
            "example": null
          },
          "dropoff_latitude": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n*Latitude of the `dropoff_address`.*\n",
            "example": null
          },
          "dropoff_longitude": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n*Longitude of the `dropoff_address`.*\n",
            "example": null
          },
          "distance": {
            "type": "number",
            "format": "float",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*Distance in kilometers for the trip or delivery.*",
            "nullable": true,
            "example": 12
          },
          "payment_method": {
            "type": "string",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*Payment method for the transaction. For example, `CASH` or `IN_APP`.*",
            "nullable": true,
            "example": "CASH"
          },
          "vehicle_type": {
            "type": "string",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*Vehicle type used.*",
            "nullable": true,
            "example": "CAR"
          },
          "merchant_type": {
            "type": "string",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*Merchant type for the delivery.*",
            "nullable": true,
            "example": "Restaurant"
          },
          "breakdown": {
            "type": "array",
            "deprecated": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TransactionBreakdown"
            }
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "deprecated": true,
            "nullable": true,
            "description": "*This field has been deprecated.*\n*The ISO-8601 timestamp when the data point was collected.*",
            "example": "2019-09-27T13:01:41.941Z"
          }
        }
      },
      "TransactionCreditCardData": {
        "type": "object",
        "nullable": true,
        "description": "Additional data provided by the institution for credit card transactions.",
        "properties": {
          "collected_at": {
            "type": "string",
            "nullable": true,
            "example": "2019-09-27T13:01:41.941Z",
            "format": "date-time",
            "description": "The ISO-8601 timestamp when the data point was collected."
          },
          "bill_name": {
            "type": "string",
            "nullable": true,
            "description": "The title of the monthly credit card bill the transaction belongs to. The format of the returned value is institution specific, however, some common examples are:\n\n- diciembre-2021\n- dec-2021\n- dec-21\n",
            "example": "apr-2020"
          },
          "bill_status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "PAID",
              "CLOSED",
              "OPEN",
              "FUTURE",
              null
            ],
            "description": "The status of the bill that the transaction appears on. Can be one of:\n\n  - `PAID`: The bill has been paid in full.\n  - `CLOSED`: The bill has been closed by the institution.\n  - `OPEN`: The bill is currently open. (Note: This is the main bill that Belvo retrieves balance data from).\n  - `FUTURE`: The bill is pending.\n  \n‚ÑπÔ∏è Note: Some banks consider CLOSED as PAID. ",
            "example": "PAID"
          },
          "bill_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The aggregate bill amount, as of `collected_at`.",
            "example": 300
          },
          "previous_bill_total": {
            "type": "string",
            "nullable": true,
            "description": "The total amount of the previous month's bill, if available.",
            "example": "9614.30"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "required": [
          "value_date",
          "accounting_date",
          "amount",
          "currency",
          "description",
          "reference",
          "observations",
          "balance",
          "status",
          "account",
          "type",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID for the transaction.",
            "example": "076c66e5-90f5-4e01-99c7-50e32f65ae42"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-11-28T10:27:44.813Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "value_date": {
            "nullable": true,
            "type": "string",
            "format": "date",
            "description": "The date when the transaction occurred, in `YYYY-MM-DD` format.",
            "example": "2019-10-23"
          },
          "accounting_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO timestamp when the transaction was processed and accounted for by the institution.",
            "example": "2019-10-23T13:01:41.941Z"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "The transaction amount.\n‚ÑπÔ∏è The amount displayed is always positive as we indicate the direction of the transaction in the `type` parameter.\n",
            "example": 2145.45
          },
          "balance": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The balance at the end of the transaction.",
            "example": 16907.96
          },
          "currency": {
            "type": "string",
            "description": "The currency of the transaction. For example:\n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n\n Please note that other currencies other than in the list above may be returned.",
            "example": "MXN"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of transaction provided by the institution. Usually this is the text that the end user sees in the online platform.",
            "example": "SEVEN BUDDHAS RFC:XXXXXXXXXX"
          },
          "observations": {
            "type": "string",
            "nullable": true,
            "description": "Additional observations provided by the institution on the transaction.",
            "example": "OPTIONAL OBSERVATIONS"
          },
          "merchant": {
            "$ref": "#/components/schemas/TransactionMerchantData"
          },
          "category": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Deposits",
              "Home & Life",
              "Food & Groceries",
              "Online Platforms & Leisure",
              "Transport & Travel",
              "Personal Shopping",
              "Taxes",
              "Withdrawal & ATM",
              "Credits & Loans",
              "Bills & Utilities",
              "Investments & Savings",
              "Fees & Charges",
              "Income & Payments",
              "Transfers",
              null,
              "Unknown"
            ],
            "description": "The name of the category to which this transaction belongs.\n\n> **Get transaction categorization**\nWe can clean and categorize transactions for you as part of our [Transaction categorization](https://developers.belvo.com/docs/banking#transaction-categorization) product, turning raw data into actionable insights. To enable this product, just email our sales team at sales@belvo.com, and they'll get right to it.\n\nWe return one of the following enum values:\n\n  - `Deposits`\n  - `Home & Life`\n  - `Food & Groceries`\n  - `Online Platforms & Leisure`\n  - `Transport & Travel`\n  - `Personal Shopping`\n  - `Taxes`\n  - `Withdrawal & ATM`\n  - `Credits & Loans`\n  - `Bills & Utilities`\n  - `Investments & Savings`\n  - `Fees & Charges`\n  - `Income & Payments`\n  - `Transfers`\n  - `Unknown`*\n\n  *For clients not using our Transaction Categorization product, we return `null` instead.\n",
            "example": "Food & Groceries"
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "maxLength": 128,
            "description": "The reference number of the transaction, provided by the bank.",
            "example": "8703"
          },
          "type": {
            "type": "string",
            "enum": [
              "OUTFLOW",
              "INFLOW",
              null
            ],
            "nullable": true,
            "description": "The direction of the transaction:\n- `INFLOW` indicates money coming into the account.\n- `OUTFLOW` indicates money going out of the account.\n"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PROCESSED",
              "UNCATEGORIZED",
              null
            ],
            "nullable": true,
            "description": "The status of the transaction.\n\nWe return one of the following enum values:\n\n  - `PENDING`\n  - `PROCESSED`\n  - `UNCATEGORIZED`\n"
          },
          "gig_data": {
            "$ref": "#/components/schemas/TransactionGigData"
          },
          "credit_card_data": {
            "$ref": "#/components/schemas/TransactionCreditCardData"
          }
        }
      },
      "TransactionsPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of transaction objects.",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "TransactionsRequest": {
        "type": "object",
        "required": [
          "link",
          "date_from",
          "date_to"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` that you want to get information for.",
            "example": "2ccd5e15-194a-4a19-a45a-e7223c7e6717"
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "description": "If provided, we return transactions only from this account.",
            "example": "d4617561-1c01-4b2f-83b6-a594f7b3bc57"
          },
          "date_from": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date from which you want to start getting transactions for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_from` cannot be greater than `date_to`.",
            "example": "2020-08-05"
          },
          "date_to": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date you want to stop getting transactions for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_to` cannot be greater than today's date (in other words, no future dates).",
            "example": "2020-10-05"
          },
          "token": {
            "type": "string",
            "description": "The OTP token generated by the bank.",
            "example": "1234ab"
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response."
          }
        }
      },
      "Balance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID for the balance request.",
            "example": "076c66e5-90f5-4e01-99c7-50e32f65ae42"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "value_date": {
            "type": "string",
            "format": "date",
            "description": "The date when the `balance` was available, in `YYYY-MM-DD` format.",
            "example": "2019-10-23"
          },
          "balance": {
            "type": "number",
            "format": "float",
            "description": "The funds available in the account by the end of the `value_date`.",
            "example": 50000
          },
          "current_balance": {
            "deprecated": true,
            "type": "number",
            "nullable": true,
            "description": "*This field has been deprecated. Please use the `balance` field instead.*\n",
            "example": null
          },
          "statement": {
            "deprecated": true,
            "type": "string",
            "nullable": true,
            "description": "*This field has been deprecated.*\n\n*The ID of the banking statement used to extract the `balance`.*\n",
            "example": null
          },
          "collected_at": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "format": "date-time",
            "description": "This field has been deprecated.\n\nThe ISO-8601 timestamp when the data point was collected.\n",
            "example": null
          }
        }
      },
      "BalancesPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of balance objects.",
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          }
        }
      },
      "BalancesRequest": {
        "type": "object",
        "required": [
          "link",
          "date_from",
          "date_to"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` that you want to get information for.",
            "example": "2ccd5e15-194a-4a19-a45a-e7223c7e6717"
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "description": "If provided, only balances matching this `account.id` are returned.",
            "example": "d4617561-1c01-4b2f-83b6-a594f7b3bc57"
          },
          "date_from": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "Date from which you want to start receiving balances, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_from` cannot be greater than `date_to`.",
            "example": "2021-01-18"
          },
          "date_to": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "Date that you want to stop receiving balances, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_to` cannot be greater than today's date (in other words, no future dates).",
            "example": "2021-02-15"
          },
          "token": {
            "type": "string",
            "description": "The OTP token generated by the bank.",
            "example": "1234ab"
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response."
          }
        }
      },
      "InstitutionsFormFieldValues": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code of the document.",
            "example": "001"
          },
          "label": {
            "type": "string",
            "description": "The label for the field. For example:\n- C√©dula de Ciudadan√≠a\n- C√©dula de Extranjer√≠a\n- Pasaporte\n",
            "example": "C√©dula de Ciudadan√≠a"
          },
          "validation": {
            "type": "string",
            "description": "The type of input validation used for the field.",
            "example": "^.{1,}$"
          },
          "validation_message": {
            "type": "string",
            "description": "The message displayed when an invalid input is provided in the form field.",
            "example": "Invalid document number"
          },
          "placeholder": {
            "type": "string",
            "description": "The placeholder text in the form field.",
            "example": "DEF4444908M22"
          }
        }
      },
      "InstitutionsFormField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The username, password, or username type field.",
            "example": "username"
          },
          "type": {
            "type": "string",
            "description": "The input type for the form field. For example, string.",
            "example": "text"
          },
          "label": {
            "type": "string",
            "description": "The label of the form field. For example:\n- Client number\n- Key Bancanet\n- Document\n",
            "example": "Client number"
          },
          "validation": {
            "type": "string",
            "description": "The type of input validation used for the field.",
            "example": "^.{1,}$"
          },
          "placeholder": {
            "type": "string",
            "description": "The placeholder text in the form field.",
            "example": "ABC333333A33"
          },
          "validation_message": {
            "type": "string",
            "description": "The message displayed when an invalid input is provided in the form field.",
            "example": "Invalid client number"
          },
          "values": {
            "type": "array",
            "description": "If the form field is for documents, the institution may require additional input regarding the document type.",
            "items": {
              "$ref": "#/components/schemas/InstitutionsFormFieldValues"
            }
          }
        }
      },
      "InstitutionsFeature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the feature.",
            "example": "token_required"
          },
          "description": {
            "type": "string",
            "description": "The description of the feature.",
            "example": "The institution may require a token during link creation or login"
          }
        }
      },
      "Institution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The ID of the institution as designated by Belvo.",
            "example": 1003
          },
          "name": {
            "type": "string",
            "example": "erebor_mx_retail",
            "description": "The name of the institution, as designated by Belvo.\nPlease see our [Institutions](https://developers.belvo.com/docs/institution) DevPortal article for a detailed list of institution names."
          },
          "type": {
            "type": "string",
            "enum": [
              "bank",
              "fiscal",
              "gig"
            ],
            "description": "The type of institution.\n\nCan be either:\n\n  - `bank`\n  - `fiscal`\n  - `gig` *This field has been deprecated.*\n",
            "example": "bank"
          },
          "website": {
            "type": ["string", "null"],
            "nullable": true,
            "example": "https://www.erebor.com/",
            "description": "The URL of the institution's website."
          },
          "display_name": {
            "type": "string",
            "example": "Erebor Mexico",
            "description": "The customer-facing name of the institution."
          },
          "country_codes": {
            "type": "array",
            "description": "The country codes where the institution is available, for example:\n- üáßüá∑ BR (Brazil)\n- üá®üá¥ CO (Colombia)\n- üá≤üáΩ MX (Mexico)  \n",
            "items": {
              "type": "string",
              "example": "MX"
            }
          },
          "primary_color": {
            "type": "string",
            "example": "#056dae",
            "description": "The primary color on the institution's website."
          },
          "logo": {
            "type": ["string", "null"],
            "nullable": true,
            "example": "https://belvo-api-media.s3.amazonaws.com/logos/erebor_logo.png",
            "description": "The URL of the institution's logo."
          },
          "icon_logo": {
            "type": ["string", "null"],
            "nullable": true,
            "example": "https://statics.belvo.io/widget/images/institutions/erebor.svg",
            "description": "The URL of the institution's icon logo."
          },
          "text_logo": {
            "type": ["string", "null"],
            "nullable": true,
            "example": "https://statics.belvo.io/widget/images/institutions/erebor.svg",
            "description": "The URL of the institution's text logo."
          },
          "form_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstitutionsFormField"
            }
          },
          "features": {
            "type": "array",
            "description": "The features that the institution supports. If the institution has no special features, then Belvo returns an empty array.\n\nHere is a list of the available features:\n- `token_required` indicates that the institution may require a token during link creation or when making any other requests.\n",
            "items": {
              "$ref": "#/components/schemas/InstitutionsFeature"
            }
          },
          "resources": {
            "type": "array",
            "description": "A list of Belvo resources that you can use with the institution. This list includes one or more of the following resources:\n\n  - `ACCOUNTS`\n  - `BALANCES`\n  - `INCOMES`\n  - `INVESTMENTS_PORTFOLIOS`\n  - `INVESTMENTS_TRANSACTIONS`\n  - `INVOICES`\n  - `OWNERS`\n  - `RECURRING_EXPENSES`\n  - `RISK_INSIGHTS`\n  - `TRANSACTIONS`\n  - `TAX_COMPLIANCE_STATUS`\n  - `TAX_STATUS`\n  - `TAX_RETURNS`\n",
            "items": {
              "type": "string",
              "description": "A Belvo resource that the institution supports.",
              "example": "ACCOUNTS"
            },
            "example": [
              "ACCOUNTS",
              "BALANCES",
              "INCOMES",
              "OWNERS",
              "RECURRING_EXPENSES",
              "RISK_INSIGHTS",
              "TRANSACTIONS"
            ]
          },
          "integration_type": {
            "type": "string",
            "enum": [
              "credentials",
              "openbanking"
            ],
            "description": "The type of technology used to access the institution.\n\n- `credentials`: Uses Belvo's scraping technology, combined with user credentials, to perform requests.\n- `openbanking`: Uses the bank's openbanking API to perform requests.\n",
            "example": "credentials"
          },
          "status": {
            "type": "string",
            "enum": [
              "healthy",
              "down"
            ],
            "description": "Indicates whether Belvo's integration with the institution is currently active (`healthy`) or undergoing maintenance (`down`).\n",
            "example": "healthy"
          }
        }
      },
      "InstitutionsPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of institution objects.",
            "items": {
              "$ref": "#/components/schemas/Institution"
            }
          }
        }
      },
      "OwnerDocumentId": {
        "type": "object",
        "required": [
          "document_type",
          "document_number"
        ],
        "description": "Information regarding the identification document the owner provided to the bank.",
        "nullable": true,
        "properties": {
          "document_type": {
            "type": "string",
            "nullable": true,
            "description": "The type of document the owner provided to the institution to open the account. For example: \n\n- üáßüá∑ `CPF` or `CNPJ`\n- üá®üá¥ `Cedula de Ciudadania`\n- üá≤üáΩ `CURP`\n",
            "example": "CPF"
          },
          "document_number": {
            "type": "string",
            "nullable": true,
            "description": "The document's identification number.",
            "example": "235578435-S"
          }
        }
      },
      "OwnersGigData": {
        "type": "object",
        "nullable": true,
        "deprecated": true,
        "description": "*This field has been deprecated.*\n\n*Additional information from the gig institution regarding the owner.*\n\n> **Note**: This field is only valid for gig institutions.\n",
        "properties": {
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*The ISO timestamp when the data point was collected.*",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*The current status of the gig account's owner, according to the institution.*",
            "example": "INACTIVE"
          },
          "acceptance_rate": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "deprecated": true,
            "description": "*This field has been deprecated.*\n*The percentage rate of how often the owner accepts a delivery or trip request.*",
            "example": 97
          }
        }
      },
      "Owner": {
        "type": "object",
        "required": [
          "internal_identification",
          "display_name",
          "email",
          "phone_number",
          "address",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique identifier used to reference the current owner.",
            "example": "c749315b-eec2-435d-a458-06912878564f"
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID used to reference the current Link.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "internal_identification": {
            "type": ["string", "null"],
            "nullable": true,
            "description": "The institution's internal identifier for the owner.",
            "example": "7e5838e4"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 128,
            "description": "The full name of the owner, as provided by the bank.",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "The account owner's registered email address.",
            "nullable": true,
            "format": "email",
            "maxLength": 256,
            "example": "johndoe@belvo.com"
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "description": "The account owner's registered phone number.",
            "example": "+52-XXX-XXX-XXXX"
          },
          "address": {
            "type": ["string", "null"],
            "description": "The accounts owners registered address.",
            "nullable": true,
            "example": "Carrer de la Llacuna, 162, 08018 Barcelona"
          },
          "document_id": {
            "$ref": "#/components/schemas/OwnerDocumentId"
          },
          "gig_data": {
            "$ref": "#/components/schemas/OwnersGigData"
          },
          "first_name": {
            "deprecated": true,
            "nullable": true,
            "type": ["string", "null"],
            "description": "*This field has been deprecated.*\n\n*The first name of the account owner.*\n",
            "example": null
          },
          "last_name": {
            "deprecated": true,
            "nullable": true,
            "type": ["string", "null"],
            "description": "*This field has been deprecated.*\n\n*The last name of the account owner.*\n",
            "example": null
          },
          "second_last_name": {
            "deprecated": true,
            "nullable": true,
            "type": ["string", "null"],
            "description": "*This field has been deprecated.*\n\n*The second last name of the account owner.*\n",
            "example": null
          }
        }
      },
      "OwnersPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of owner objects.",
            "items": {
              "$ref": "#/components/schemas/Owner"
            }
          }
        }
      },
      "InvoiceDetailRetainedTax": {
        "type": "object",
        "required": [
          "tax",
          "tax_percentage",
          "retained_tax_amount"
        ],
        "properties": {
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "tax": {
            "type": "string",
            "nullable": true,
            "description": "The type of retained tax (for example, ISR, IVA or IEPS).",
            "example": "ISR"
          },
          "tax_percentage": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The percentage of tax retained.",
            "example": 10
          },
          "retained_tax_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The amount of retained tax.",
            "example": 209.79
          }
        }
      },
      "InvoiceDetail": {
        "type": "object",
        "required": [
          "description",
          "product_identification",
          "quantity",
          "unit_amount",
          "unit_description",
          "unit_code",
          "pre_tax_amount",
          "tax_percentage",
          "tax_amount",
          "total_amount"
        ],
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the invoice item (an invoice can have one or more items).",
            "example": "December 2019 accounting fees"
          },
          "product_identification": {
            "type": "string",
            "nullable": true,
            "description": "The identification code of the product or the service, as defined by the legal entity in the country.\n- üá≤üáΩ [Mexico](http://200.57.3.89/Pys/catPyS.aspx)\n",
            "example": "84101600"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The quantity of this invoice item.",
            "example": 10
          },
          "unit_code": {
            "type": "string",
            "nullable": true,
            "description": "The unit of measure, as defined by the legal entity in the country. \n- üá≤üáΩ Mexico [SAT catalog reference](https://developers.belvo.com/docs/sat-catalogs#unit-code)\n",
            "example": "E48"
          },
          "unit_description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the item, as defined by the legal entity in the country.\n- üá≤üáΩ Mexico [SAT catalog reference](https://developers.belvo.com/docs/sat-catalogs#unit-code)\n",
            "example": "Unidad de servicio"
          },
          "unit_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The price of one a singular item.",
            "example": 200
          },
          "pre_tax_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total price for this item before tax is applied (`quantity` x `unit_amount`).",
            "example": 400
          },
          "tax_percentage": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The tax percentage to apply.",
            "example": 16
          },
          "tax_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The amount of tax for this invoice item (`pre_tax_amount` x `tax_percentage`).",
            "example": 64
          },
          "total_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total price for this invoice item (`pre_tax_amount` + `tax_amount`).",
            "example": 464
          },
          "retained_taxes": {
            "type": "array",
            "description": "The retained tax on the invoice item.",
            "items": {
              "$ref": "#/components/schemas/InvoiceDetailRetainedTax"
            }
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-09-27T13:01:41.941Z"
          }
        }
      },
      "InvoicesPaymentsRelatedDocuments": {
        "type": "object",
        "required": [
          "invoice_identification",
          "currency",
          "payment_method",
          "previous_balance",
          "amount_paid",
          "outstanding_balance"
        ],
        "description": "List of all the related deferred invoices affected by the payment.",
        "properties": {
          "invoice_identification": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal institution's unique ID for the related deferred invoice.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "7EE015F3-6311-11EA-B02A-00155D014007"
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "The currency of the related invoice. For example:\n    \n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n  \n  Please note that other currencies other than in the list above may be returned.\n\n  **Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "MXN"
          },
          "payment_method": {
            "type": "string",
            "nullable": true,
            "description": "The payment method of the related invoice.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "PPD"
          },
          "partiality_number": {
            "type": "integer",
            "format": "int32",
            "description": "The payment installment number.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 1
          },
          "previous_balance": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The invoice amount before the payment.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 18877.84
          },
          "amount_paid": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The amount paid in this installment.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 8000
          },
          "outstanding_balance": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The amount remaining to be paid.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 10877.84
          }
        }
      },
      "InvoicesPayments": {
        "type": "object",
        "required": [
          "date",
          "payment_type",
          "currency",
          "exchange_rate",
          "amount",
          "operation_number",
          "beneficiary_account_number",
          "payer_rfc",
          "payer_account_number",
          "payer_bank_name",
          "related_documents"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "ISO-8601 timestamp when the payment was made.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2020-03-17T12:00:00.000Z"
          },
          "payment_type": {
            "type": "string",
            "nullable": true,
            "description": "Payment type code used for this invoice, as defined by the country's legal entity.\n\n- üá≤üáΩ Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-type)\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "03"
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "The currency of the payment. For example:\n\n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n\nPlease note that other currencies other than in the list above may be returned.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "BRL"
          },
          "exchange_rate": {
            "type": "string",
            "nullable": true,
            "description": "The `currency` to MXN currency exchange rate when the payment was made.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "3.75"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The invoice amount, in the currency of the original invoice.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 8000.5
          },
          "operation_number": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal institution's internal identifier for the operation.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "831840"
          },
          "beneficiary_rfc": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal ID of the payment beneficiary.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "BNM840515VB1"
          },
          "beneficiary_account_number": {
            "type": "string",
            "nullable": true,
            "description": "The bank account number of the payment beneficiary.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "12343453245633"
          },
          "payer_rfc": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal ID of the payment issuer.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "BKJM840515VB1"
          },
          "payer_account_number": {
            "type": "string",
            "nullable": true,
            "description": "The bank account number of the payment issuer.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "13343663245699"
          },
          "payer_bank_name": {
            "type": "string",
            "nullable": true,
            "description": "The banking institution that was used by the payment issuer.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "CITI BANAMEX"
          },
          "related_documents": {
            "type": "array",
            "description": "A list of all the related deferred invoices affected by the payment.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "items": {
              "$ref": "#/components/schemas/InvoicesPaymentsRelatedDocuments"
            }
          }
        }
      },
      "InvoicesPayroll": {
        "type": "object",
        "nullable": true,
        "required": [
          "version",
          "type",
          "payment_date",
          "date_from",
          "date_to",
          "days",
          "amount"
        ],
        "description": "Details regarding the payroll payment. Only applicable for payroll invoices.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
        "properties": {
          "days": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The number of days covered by the payment.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 30
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "The payroll type, as defined by the legal entity of the country.\n\n- üá≤üáΩ Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payroll-type)\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "O"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "The total amount of the payroll payment.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 20400.1
          },
          "version": {
            "type": "string",
            "description": "The version of the payroll object.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "1.2"
          },
          "date_from": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The start date of the payment period.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2018-07-01"
          },
          "date_to": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The end date of the payment period.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2018-07-31"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.\n**Note**: This field is not applicable for DIAN Colombia.",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "payment_date": {
            "type": "string",
            "format": "date",
            "description": "The payment date.\n\n**Note**: This field is not applicable for DIAN Colombia.\n"
          }
        }
      },
      "InvoiceWarnings": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "description": "Object containing information about any warnings related to this invoice.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
        "nullable": true,
        "properties": {
          "code": {
            "type": "string",
            "nullable": true,
            "description": "The warning code.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "sat_xml_limit_reached"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "The description of the warning.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "The daily limit for XML downloads set by SAT was reached so this invoice might be missing data. Please check https://tinyurl.com/yydzhy5d for more information on this error."
          }
        }
      },
      "InvoiceWithId": {
        "type": "object",
        "required": [
          "type",
          "invoice_identification",
          "invoice_date",
          "invoice_type",
          "subtotal_amount",
          "tax_amount",
          "discount_amount",
          "total_amount",
          "currency",
          "exchange_rate",
          "status",
          "sender_name",
          "sender_id",
          "receiver_name",
          "receiver_id",
          "certification_authority",
          "certification_date",
          "cancelation_status",
          "cancelation_update_date",
          "payment_type",
          "payment_type_description",
          "invoice_details",
          "payroll",
          "payments",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique identifier used to reference the current invoice.",
            "example": "c749315b-eec2-435d-a458-06912878564f"
          },
          "link": {
            "type": "string",
            "description": "The `link.id` the invoice belongs to.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "invoice_identification": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal institution's unique ID for the invoice.",
            "example": "A1A1A1A1-2B2B-3C33-D44D-555555E55EE"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The date of the invoice.",
            "example": "2019-12-01"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "The status of the invoice. Can be either *Vigente* (valid) or *Cancelado* (cancelled).",
            "example": "Vigente"
          },
          "invoice_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Egreso",
              "Ingreso",
              "N√≥mina",
              "Pago",
              "Traslado"
            ],
            "description": "The fiscal institution's classification of the invoice.\n\nFor Mexico's SAT, we return one of the following enum values:\n\n  - `Egreso`\n  - `Ingreso`\n  - `N√≥mina`\n  - `Pago`\n  - `Traslado`\n",
            "example": "Ingreso"
          },
          "type": {
            "type": "string",
            "enum": [
              "OUTFLOW",
              "INFLOW"
            ],
            "nullable": true,
            "description": "The type of the invoice (from the perspective of the invoice sender). Can be either `INFLOW` or `OUTFLOW`.\n",
            "example": "OUTFLOW"
          },
          "sender_id": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal ID of the invoice sender",
            "example": "AAA111111AA11"
          },
          "sender_name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the invoice sender.",
            "example": "ACME CORP"
          },
          "sender_tax_fraud_status": {
            "type": "string",
            "nullable": true,
            "description": "Indicates whether or not the sender is on SAT's tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.<br><br>\nSAT updates the tax fraud list every three months. <br><br>\nFor more information regarding the reason's a taxpayer can be put on the tax fraud list, please see [Article 69](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69.html) and [Article 69-B](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69B.html) of Mexico's C√≥digo Fiscal de la Federaci√≥n. <br><br>\nPossible statuses are:\n- `INVESTIGATING` <br> The fiscal institution has identified irregularities and open an investigation regarding the taxpayer. <br> - `DISMISSED` <br> The fiscal institution has investigated the taxpayer and declared them innocent. <br> - `CONFIRMED` <br> The fiscal institution has confirmed that the taxpayer is guilty. <br> - `OVERTURNED` <br> The fiscal institution has reassessed a previously confirmed taxpayer and, based on new evidence, has taken the taxpayer off the tax fraud list. <br> - `NO_TAX_FRAUD_STATUS` <br> The receiver or sender is not found in the list (in other words, they are complying with the fiscal institution's regulations).\n\n**Note**: This field is not applicable for DIAN Colombia.",
            "example": "NO_TAX_FRAUD_STATUS"
          },
          "receiver_id": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal ID of the invoice receiver.",
            "example": "BBB222222BB22"
          },
          "receiver_name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the invoice receiver.",
            "example": "BELVO CORP"
          },
          "receiver_tax_fraud_status": {
            "type": "string",
            "nullable": true,
            "description": "Indicates whether or not the receiver is on SAT's tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.<br><br>\nSAT updates the tax fraud list every three months. <br><br>\nFor more information regarding the reason's a taxpayer can be put on the tax fraud list, please see [Article 69](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69.html) and [Article 69-B](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69B.html) of Mexico's C√≥digo Fiscal de la Federaci√≥n. <br><br>\nPossible statuses are:\n- `INVESTIGATING` <br> The fiscal institution has identified irregularities and open an investigation regarding the taxpayer. <br> - `DISMISSED` <br> The fiscal institution has investigated the taxpayer and declared them innocent. <br> - `CONFIRMED` <br> The fiscal institution has confirmed that the taxpayer is guilty. <br> - `OVERTURNED` <br> The fiscal institution has reassessed a previously confirmed taxpayer and, based on new evidence, has taken the taxpayer off the tax fraud list. <br> - `NO_TAX_FRAUD_STATUS` <br> The receiver or sender is not found in the list (in other words, they are complying with the fiscal institution's regulations).\n**Note**: This field is not applicable for DIAN Colombia.",
            "example": "NO_TAX_FRAUD_STATUS"
          },
          "cancelation_status": {
            "type": "string",
            "nullable": true,
            "description": "If the invoice is cancelled, this field indicates the status of the cancellation.\n\n**Note**: This field is not applicable for DIAN Colombia."
          },
          "cancelation_update_date": {
            "type": "string",
            "format": "date",
            "description": "The date of the invoice cancelation.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2019-12-02",
            "nullable": true
          },
          "certification_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The date of the fiscal certification.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2019-12-01"
          },
          "certification_authority": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal ID of the certification provider.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "CCC333333CC33"
          },
          "payment_type": {
            "type": "string",
            "nullable": true,
            "description": "The payment type code used for this invoice, as defined by the country legal entity.\n\n- üá≤üáΩ Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-type)\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "99"
          },
          "payment_type_description": {
            "deprecated": true,
            "nullable": true,
            "type": "string",
            "description": "*This field has been deprecated.*\n\n*The description of the payment method used for this invoice.*\n",
            "example": null
          },
          "payment_method": {
            "type": "string",
            "nullable": true,
            "enum": [
              "PUE",
              "PIP",
              "PPD",
              null
            ],
            "description": "The payment method code used for this invoice, as defined by the legal entity of the country.\n\n- üá≤üáΩ Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-method). For Mexico, we return `PUE`, `PIP`, OR `PPD`.\n\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "PUE"
          },
          "payment_method_description": {
            "deprecated": true,
            "nullable": true,
            "type": "string",
            "description": "*This field has been deprecated.*\n\n*The description of the payment method used for this invoice.*\n",
            "example": null
          },
          "usage": {
            "type": "string",
            "description": "The invoice's usage code, as defined by the legal entity of the country. \n\n- üá≤üáΩ Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#usage)\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "nullable": true,
            "example": "P01"
          },
          "version": {
            "type": "string",
            "description": "The CFDI version of the invoice.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "nullable": true,
            "example": "3.3"
          },
          "place_of_issue": {
            "type": "string",
            "description": "The postcode of where the invoice was issued.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "nullable": true,
            "example": "01165"
          },
          "invoice_details": {
            "type": "array",
            "description": "A list of descriptions for each item (purchased product or service provided) in the invoice.\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "items": {
              "$ref": "#/components/schemas/InvoiceDetail"
            }
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "The currency of the invoice. For example:\n \n - üáßüá∑ BRL (Brazilian Real)\n - üá®üá¥ COP (Colombian Peso)\n - üá≤üáΩ MXN (Mexican Peso)\n - üá∫üá∏ USD (United States Dollar)\n\n **Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "MXN"
          },
          "subtotal_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The pretax amount of this invoice (sum of each item's `pre_tax_amount`).\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 400
          },
          "exchange_rate": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The exchange rate used in this invoice for the currency.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 0.052
          },
          "tax_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The amount of tax for this invoice (sum of each item's `tax_amount`).\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 64
          },
          "discount_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total amount discounted in this invoice.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": 10
          },
          "total_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total amount of the invoice (`subtotal_amount` + `tax_amount` - `discount_amount`)",
            "example": 454
          },
          "payments": {
            "type": "array",
            "description": "A list detailing all the invoice payments.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "items": {
              "$ref": "#/components/schemas/InvoicesPayments"
            }
          },
          "payroll": {
            "$ref": "#/components/schemas/InvoicesPayroll"
          },
          "folio": {
            "type": "string",
            "nullable": true,
            "description": "The internal control number that the taxpayer assigns to the invoice.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "26"
          },
          "xml": {
            "type": "string",
            "description": "XML of the invoice document.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "nullable": true
          },
          "warnings": {
            "$ref": "#/components/schemas/InvoiceWarnings"
          },
          "sender_blacklist_status": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "This field has been deprecated. Please use `sender_tax_fraud_status` instead.\n",
            "example": null
          },
          "receiver_blacklist_status": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "description": "This field has been deprecated. Please use `receiver_tax_fraud_status` instead.\n",
            "example": null
          }
        }
      },
      "InvoicesResponsePaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of invoice objects.",
            "items": {
              "$ref": "#/components/schemas/InvoiceWithId"
            }
          }
        }
      },
      "InvoicesRequest": {
        "type": "object",
        "required": [
          "date_from",
          "date_to",
          "link",
          "type"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The fiscal `link.id` to use.",
            "example": "d4617561-1c01-4b2f-83b6-a594f7b3bc57"
          },
          "date_from": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date from which you want to start getting invoices for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_from` cannot be greater than `date_to`.\n",
            "example": "2020-01-01"
          },
          "date_to": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date you want to stop getting invoices for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The number of days between `date_from` and `date_to` cannot be over 365.\n\n‚ö†Ô∏è The value of `date_to` cannot be greater than today's date (in other words, no future dates).\n",
            "example": "2020-02-01"
          },
          "type": {
            "type": "string",
            "description": "The direction of the invoice (from the perspective of the Link owner).\n\n- `OUTFLOW` indicates a sent invoice.\n- `INFLOW` indicates a received invoice.\n",
            "enum": [
              "OUTFLOW",
              "INFLOW"
            ]
          },
          "attach_xml": {
            "type": "boolean",
            "default": false,
            "description": "When set to `true`, you will receive the XML invoice in the response."
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response.",
            "example": true
          }
        }
      },
      "TaxReturnPersonal": {
        "type": "object",
        "additionalProperties": true,
        "title": "Tax Return Personal",
        "required": [
          "informacion_general",
          "sueldos_salarios",
          "servicios_profesionales",
          "dividendos",
          "deducciones_personales",
          "retenciones",
          "determinacion_impuesto",
          "pdf",
          "receipt_pdf",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier created by Belvo used to reference the current Tax Return.",
            "example": "0d3ffb69-f83b-456e-ad8e-208d0998d71d"
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` the statement belongs to",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "informacion_general": {
            "type": "object",
            "nullable": true,
            "description": "General information on the tax return (year, RFC, return type, person/company name, and so on)."
          },
          "sueldos_salarios": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding the income information together combined with withheld taxes."
          },
          "servicios_profesionales": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding the income and tax information from professional services provided."
          },
          "deducciones_personales": {
            "type": "object",
            "nullable": true,
            "description": "List of all personal tax deductions."
          },
          "determinacion_impuesto": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding the final tax return."
          },
          "retenciones": {
            "type": "object",
            "nullable": true,
            "description": "Details on the already withheld taxes."
          },
          "dividendos": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding dividends."
          },
          "datos_informativos": {
            "type": "object",
            "nullable": true,
            "description": "Extra informative data on the tax return."
          },
          "pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "Tax return PDF as a binary.",
            "example": "=PDF-STRING="
          },
          "receipt_pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
            "example": "=PDF-STRING="
          }
        }
      },
      "TaxReturnsPersonalPaginated": {
        "type": "object",
        "title": "Tax Return Personal",
        "additionalProperties": true,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of Personal Tax Return objects.",
            "items": {
              "$ref": "#/components/schemas/TaxReturnPersonal"
            }
          }
        }
      },
      "TaxReturnPersonalMonthly": {
        "type": "object",
        "additionalProperties": true,
        "title": "Tax Return Personal Monthly",
        "required": [
          "informacion_general",
          "pdf",
          "type",
          "isr",
          "iva",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier created by Belvo used to reference the current Tax Return.",
            "example": "0d3ffb69-f83b-456e-ad8e-208d0998d71d"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "informacion_general": {
            "type": "object",
            "nullable": true,
            "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on)."
          },
          "isr": {
            "type": "object",
            "nullable": true,
            "description": "Information used to calculate the monthly provisional payments of the income tax."
          },
          "iva": {
            "type": "object",
            "nullable": true,
            "description": "Information used to calculate the monthly provisional payments of the VAT tax."
          },
          "pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "Tax return PDF as a binary.",
            "example": "=PDF-STRING="
          },
          "receipt_pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
            "example": "=PDF-STRING="
          },
          "type": {
            "type": "string",
            "description": "The type of tax return. Can be either monthly or annual.",
            "example": "monthly"
          }
        }
      },
      "TaxReturnsPersonalMonthlyPaginated": {
        "type": "object",
        "title": "Tax Return Personal Monthly",
        "additionalProperties": true,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of Monthly Personal Tax Return objects.",
            "items": {
              "$ref": "#/components/schemas/TaxReturnPersonalMonthly"
            }
          }
        }
      },
      "TaxReturnBusiness": {
        "type": "object",
        "additionalProperties": true,
        "title": "Tax Return Business",
        "required": [
          "informacion_general",
          "estado_resultados",
          "pdf",
          "receipt_pdf",
          "collected_at",
          "estado_posicion_financiera_balance",
          "conciliacion_entre_resultado_contable_fiscal",
          "cifras_cierre_ejercicio",
          "determinacion_del_impuesto_sobre_la_renta",
          "detalle_pago_r1_isr_personas_morales"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier created by Belvo used to reference the current Tax Return.",
            "example": "0d3ffb69-f83b-456e-ad8e-208d0998d71d"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "informacion_general": {
            "type": "object",
            "nullable": true,
            "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on)."
          },
          "datos_adicionales": {
            "type": "object",
            "nullable": true,
            "description": "Additional data regarding the tax return."
          },
          "estado_resultados": {
            "type": "object",
            "nullable": true,
            "description": "Detailed information about the legal entity's yearly profit and loss."
          },
          "estado_posicion_financiera_balance": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding balance sheet of the legal entity."
          },
          "conciliacion_entre_resultado_contable_fiscal": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding the accounting reconciliation."
          },
          "deducciones_autorizadas": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding the legal entity's deductions."
          },
          "cifras_cierre_ejercicio": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding key numbers at the end of the fiscal exercise."
          },
          "determinacion_del_impuesto_sobre_la_renta": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding the final tax return."
          },
          "dividendos_o_utilidades_distribuidos": {
            "type": "object",
            "nullable": true,
            "description": "Details regarding distributed dividends."
          },
          "detalle_pago_r1_isr_personas_morales": {
            "type": "object",
            "nullable": true,
            "description": "Details of the tax payment."
          },
          "pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "Tax return PDF as a binary.",
            "example": "=PDF-STRING="
          },
          "receipt_pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
            "example": "=PDF-STRING="
          }
        }
      },
      "TaxReturnsBusinessPaginated": {
        "type": "object",
        "title": "Tax Return Personal Business",
        "additionalProperties": true,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of Business Tax Return objects.",
            "items": {
              "$ref": "#/components/schemas/TaxReturnBusiness"
            }
          }
        }
      },
      "TaxReturnBusinessMonthly": {
        "type": "object",
        "additionalProperties": true,
        "title": "Tax Return Business Monthly",
        "required": [
          "informacion_general",
          "determinacion_isr",
          "pdf",
          "type",
          "collected_at",
          "detalle_pago_isr",
          "determinacion_iva",
          "detalle_pago_iva"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier created by Belvo used to reference the current Tax Return.",
            "example": "0d3ffb69-f83b-456e-ad8e-208d0998d71d"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2019-09-27T13:01:41.941Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "informacion_general": {
            "type": "object",
            "nullable": true,
            "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on)."
          },
          "determinacion_isr": {
            "type": "object",
            "nullable": true,
            "description": "Information used to calculate the provisional income tax for the period."
          },
          "detalle_pago_isr": {
            "type": "object",
            "nullable": true,
            "description": "Information on the monthly provisional payments for the income tax."
          },
          "determinacion_iva": {
            "type": "object",
            "nullable": true,
            "description": "Information used to calculate the provisional VAT tax for the period."
          },
          "detalle_pago_iva": {
            "type": "object",
            "nullable": true,
            "description": "Information on the monthly provisional payments for the VAT tax."
          },
          "pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "Tax return PDF as a binary.",
            "example": "=PDF-STRING="
          },
          "receipt_pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
            "example": "=PDF-STRING="
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "The type of tax return. Can be either monthly or annual.",
            "example": "monthly"
          }
        }
      },
      "TaxReturnsBusinessMonthlyPaginated": {
        "type": "object",
        "title": "Tax Return Personal Business Monthly",
        "additionalProperties": true,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of Monthly Business Tax Return objects.",
            "items": {
              "$ref": "#/components/schemas/TaxReturnBusinessMonthly"
            }
          }
        }
      },
      "TaxReturnsMonthlyRequest": {
        "type": "object",
        "title": "Monthly Tax Returns",
        "description": "Request body for monthly tax returns",
        "required": [
          "link",
          "type",
          "date_from",
          "date_to"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The fiscal `link.id` you want specific tax return information for.",
            "example": "d4617561-1c01-4b2f-83b6-a594f7b3bc57"
          },
          "attach_pdf": {
            "type": "boolean",
            "default": false,
            "description": "When this is set to `true`, you will receive the PDF as a binary string in the response.",
            "example": false
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response.",
            "example": true
          },
          "type": {
            "type": "string",
            "default": "monthly",
            "description": "The type of tax return to return. For monthly tax returns, this field must be set to `monthly`.\n"
          },
          "date_from": {
            "type": "string",
            "description": "The starting date you want to get tax returns for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_from` cannot be greater than `date_to`.",
            "example": "2018-01-01"
          },
          "date_to": {
            "type": "string",
            "description": "The date you want to stop getting tax returns for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_to` cannot be greater than today's date (in other words, no future dates).",
            "example": "2019-01-01"
          }
        }
      },
      "TaxReturnsYearlyRequest": {
        "type": "object",
        "title": "Yearly Tax Returns",
        "description": "Request body for yearly tax returns",
        "required": [
          "link",
          "type",
          "year_to",
          "year_from"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The fiscal `link.id` you want specific tax return information for.",
            "example": "d4617561-1c01-4b2f-83b6-a594f7b3bc57"
          },
          "attach_pdf": {
            "type": "boolean",
            "default": false,
            "description": "When this is set to `true`, you will receive the PDF as a binary string in the response.",
            "example": false
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response.",
            "example": true
          },
          "type": {
            "type": "string",
            "default": "yearly",
            "description": "The type of tax return to return. For yearly tax returns this must be set to `yearly`.\n\nBy default, Belvo returns the yearly (annual) tax returns.\n"
          },
          "year_from": {
            "type": "string",
            "description": "The starting year you want to get tax returns for, in `YYYY` format.\n",
            "example": "2018"
          },
          "year_to": {
            "type": "string",
            "description": "The year you want to stop getting tax returns for, in `YYYY` format.\n",
            "example": "2019"
          }
        }
      },
      "TaxStatusTaxPayerInformation": {
        "type": "object",
        "required": [
          "rfc",
          "start_operations_date",
          "status_padron",
          "last_status_change_date"
        ],
        "nullable": true,
        "description": "Details regarding the taxpayer.",
        "properties": {
          "rfc": {
            "type": "string",
            "nullable": true,
            "description": "The tax payers's identification number.\n\nFor Mexico (SAT), this is the tax payer's RFC number.\n\nFor Colombia (DIAN), this is the tax payer's NIT number. \n",
            "example": "BEMP12345G58"
          },
          "curp": {
            "type": "string",
            "nullable": true,
            "description": "The tax payers's Clave √önica de Registro de Poblaci√≥n (CURP) number.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "BEMP12345HKGLLT00"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The tax payers's first name.",
            "example": "JOHN"
          },
          "first_last_name": {
            "type": "string",
            "nullable": true,
            "description": "The tax payers's first last name.",
            "example": "DOE"
          },
          "second_last_name": {
            "type": "string",
            "nullable": true,
            "description": "The tax payers's second last name.",
            "example": "SCHMOE"
          },
          "start_operations_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Date when the tax payer commenced taxable commercial activities.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2016-02-16"
          },
          "status_padron": {
            "type": "string",
            "nullable": true,
            "description": "Status of the taxpayer in the Federal Register of Taxpayers (RFC). Can be `ACTIVO` or `INACTIVO`.\n**Note**: This field is not applicable for DIAN Colombia.",
            "example": "ACTIVO"
          },
          "last_status_change_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Date when `status_padron` was most recently updated.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2016-02-16"
          },
          "commercial_name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the company designated for consumers and the general public.",
            "example": "JOHNDOE"
          },
          "social_name": {
            "type": "string",
            "nullable": true,
            "description": "The unique and exclusive name within the national territory that companies receive for legal or administrative purposes.",
            "example": "John Doe SA DE CV"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Contact email address for the tax payer.",
            "example": "john_doe@gmail.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "Contact phone number for the tax payer.",
            "example": "1234567890"
          }
        }
      },
      "TaxStatusAddressBetweenStreet": {
        "type": "object",
        "properties": {
          "street_one": {
            "type": "string",
            "nullable": true,
            "description": "The first street that `street` is located between.",
            "example": "CALLE PRINCIPE"
          },
          "street_two": {
            "type": "string",
            "nullable": true,
            "description": "The second street that `street` is located between.",
            "example": "CALLE NUEVA ROMA"
          }
        }
      },
      "TaxStatusAddress": {
        "type": "object",
        "required": [
          "postal_code"
        ],
        "nullable": true,
        "description": "The tax payer's address details.",
        "properties": {
          "postal_code": {
            "type": "string",
            "nullable": true,
            "description": "The postcode of the address.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "12345"
          },
          "street_type": {
            "type": "string",
            "nullable": true,
            "description": "The `street` type.",
            "example": "CALLE"
          },
          "street": {
            "type": "string",
            "nullable": true,
            "description": "The tax payers street.",
            "example": "LA MALINCHE"
          },
          "exterior_number": {
            "type": "string",
            "nullable": true,
            "description": "The street number.",
            "example": "432"
          },
          "interior_number": {
            "type": "string",
            "nullable": true,
            "description": "Additional address information.",
            "example": "PLANTA BAJA"
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "description": "The suburb of the tax payer.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "COLINAS DEL BOSQUE"
          },
          "locality": {
            "type": "string",
            "nullable": true,
            "description": "The locality of the address.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "TLALPAN"
          },
          "municipality": {
            "type": "string",
            "nullable": true,
            "description": "The municipality of the address.",
            "example": "TLALPAN"
          },
          "state": {
            "type": "string",
            "nullable": true,
            "description": "The state that the address is in.",
            "example": "CIUDAD DE MEXICO"
          },
          "between_street": {
            "type": "array",
            "description": "Additional information about where the `street` is located.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaxStatusAddressBetweenStreet"
            }
          }
        }
      },
      "TaxStatusEconomicActivity": {
        "type": "object",
        "properties": {
          "economic_activity": {
            "type": "string",
            "nullable": true,
            "description": "The description of the economic activity.",
            "example": "Asalariado"
          },
          "initial_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The start date of the economic activity.",
            "example": "2020-12-06"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The end date of the economic activity.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": null
          },
          "order": {
            "type": "string",
            "nullable": true,
            "description": "The order of the economic activity.",
            "example": "2"
          },
          "percentage": {
            "type": "string",
            "nullable": true,
            "description": "The percentage of the economic activity.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "1"
          }
        }
      },
      "TaxStatusRegimens": {
        "type": "object",
        "required": [
          "regimen",
          "initial_date",
          "end_date"
        ],
        "properties": {
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The end date of the regimen.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": null
          },
          "initial_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The start date of the regimen.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2020-12-06"
          },
          "regimen": {
            "type": "string",
            "nullable": true,
            "description": "The description of the regimen.",
            "example": "R√©gimen de Ingresos por Dividendos (socios y accionistas)"
          }
        }
      },
      "TaxStatusObligations": {
        "type": "object",
        "description": "Details regarding a business's obligations.\n\n‚ÑπÔ∏è For non-business accounts, this field will return empty.\n",
        "properties": {
          "obligation": {
            "type": "string",
            "nullable": true,
            "description": "The description of the obligation.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "Declaraci√≥n informativa de IVA con la anual de ISR"
          },
          "expiration": {
            "type": "string",
            "nullable": true,
            "description": "The deadline to fulfill the obligation, as imposed by the tax authority.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "Conjuntamente con la declaraci√≥n anual del ejercicio."
          },
          "initial_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The date when obligation started.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "2020-12-06"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The date when obligation ended.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": null
          }
        }
      },
      "TaxStatus": {
        "type": "object",
        "required": [
          "pdf",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier created by Belvo used to reference the current Tax Status.",
            "example": "21e9e25b-10a8-48a5-9e6a-4072b364b53f"
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The Link ID that the tax status is associated with.",
            "example": "c2280c05-cbeb-4a29-ae53-8f837a77995b"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2020-04-23T21:32:55.336Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "place_and_date_of_issuance": {
            "type": "string",
            "nullable": true,
            "description": "The place and date of that the tax status was issued.",
            "example": "TLALPAN , CIUDAD DE MEXICO A 19 DE MARZO DE 2020"
          },
          "official_name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the person or business.",
            "example": "John Doe"
          },
          "id_cif": {
            "type": "string",
            "nullable": true,
            "description": "The taxpayer's *C√©dula de Identificaci√≥n Fiscal* (CIF) ID.\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "12345678901"
          },
          "tax_payer_information": {
            "$ref": "#/components/schemas/TaxStatusTaxPayerInformation"
          },
          "address": {
            "$ref": "#/components/schemas/TaxStatusAddress"
          },
          "economic_activity": {
            "type": "array",
            "nullable": true,
            "description": "A list of economic activity objects.\n",
            "items": {
              "$ref": "#/components/schemas/TaxStatusEconomicActivity"
            }
          },
          "regimens": {
            "type": "array",
            "nullable": true,
            "description": "A list of regimen objects.\n",
            "items": {
              "$ref": "#/components/schemas/TaxStatusRegimens"
            }
          },
          "obligations": {
            "type": "array",
            "nullable": true,
            "description": "Details regarding a business's obligations.\n\n‚ÑπÔ∏è For non-business accounts, this field will return empty.\n",
            "items": {
              "$ref": "#/components/schemas/TaxStatusObligations"
            }
          },
          "digital_stamp": {
            "type": "string",
            "nullable": true,
            "description": "The validation certificate of the document.",
            "example": "||2020/04/26|GHTF980303F7|CONSTANCIA DE SITUACI√ìN FISCAL|2044441088666600000034||"
          },
          "digital_stamp_chain": {
            "type": "string",
            "nullable": true,
            "description": "A data chain containing the basic structure of a fiscal digital check. For Mexico, this is the Comprobante Fiscal Digital por Internet (CFDI).\n\n**Note**: This field is not applicable for DIAN Colombia.\n",
            "example": "EtenSA9t1adG7bn+Jj23kj43JK+XbMPxdOppwabhXD+pXseSqYowWWDna0mpUk3264lkj2345j23faNZB852dCDt9KAjow="
          },
          "pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "Tax status PDF as a binary string.",
            "example": "=PDF-STRING="
          }
        }
      },
      "TaxStatusPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of tax status objects.",
            "items": {
              "$ref": "#/components/schemas/TaxStatus"
            }
          }
        }
      },
      "TaxStatusRequest": {
        "type": "object",
        "required": [
          "link"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The fiscal `link.id` to use.",
            "example": "d4617561-1c01-4b2f-83b6-a594f7b3bc57"
          },
          "attach_pdf": {
            "type": "boolean",
            "default": false,
            "description": "When set to `true`, you will receive the PDF in binary format in the response."
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response.",
            "example": true
          }
        }
      },
      "TaxComplianceStatus": {
        "type": "object",
        "required": [
          "pdf",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier created by Belvo used to reference the current Tax Compliance Status.",
            "example": "91106968-1abd-4d64-85c1-4e73d96fb997"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "internal_identification": {
            "type": "string",
            "nullable": true,
            "description": "The institution‚Äôs internal identification number for the document.",
            "example": "20NE1234567"
          },
          "pdf": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "description": "Tax compliance status PDF as a binary.",
            "example": "=PDF-STRING="
          },
          "rfc": {
            "type": "string",
            "nullable": true,
            "description": "The account holder's RFC (Registro Federal de Contribuyentes) number.",
            "example": "KDFC211118IS0"
          },
          "outcome": {
            "type": "string",
            "nullable": true,
            "enum": [
              "POSITIVE",
              "NEGATIVE",
              "NO_OBLIGATIONS"
            ],
            "description": "Indicates whether the taxpayer is complying to all their tax obligations (`POSITIVE`), if they are not (`NEGATIVE`), or have none to comply to (`NO_OBLIGATIONS`).",
            "example": "NEGATIVE"
          }
        }
      },
      "TaxComplianceStatusPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of tax compliance status objects.",
            "items": {
              "$ref": "#/components/schemas/TaxComplianceStatus"
            }
          }
        }
      },
      "TaxComplianceStatusRequest": {
        "type": "object",
        "required": [
          "link"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The fiscal `link.id` to use.",
            "example": "d4617561-1c01-4b2f-83b6-a594f7b3bc57"
          },
          "attach_pdf": {
            "type": "boolean",
            "default": false,
            "description": "When set to `true`, you will receive the PDF in binary format in the response."
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response.",
            "example": true
          }
        }
      },
      "IncomeSourceTransaction": {
        "type": "object",
        "nullable": true,
        "required": [
          "amount",
          "value_date",
          "description"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "maximum": 10000000000,
            "minimum": 0,
            "description": "The transaction amount.",
            "example": 2145.45
          },
          "value_date": {
            "type": "string",
            "format": "date",
            "description": "The date when the transaction occurred, in `YYYY-MM-DD` format.",
            "example": "2019-10-23"
          },
          "description": {
            "type": "string",
            "description": "The description of the transaction provided by the institution. Usually, this is the text that the end user would see in the bank statement.",
            "example": "NOMINA BUDDHAS RFC:XXXXXXXXXX"
          }
        }
      },
      "IncomeSources": {
        "type": "object",
        "nullable": true,
        "required": [
          "transactions",
          "confidence",
          "type",
          "frequency",
          "std_transaction_amount",
          "average_transaction_amount",
          "median_transaction_amount",
          "minimum_transaction_amount",
          "maximum_transaction_amount",
          "days_since_last_transaction",
          "average_days_between_consecutive_income_transactions",
          "std_days_between_consecutive_income_transactions",
          "median_days_between_consecutive_income_transactions",
          "minimum_days_between_consecutive_income_transactions",
          "maximum_days_between_consecutive_income_transactions"
        ],
        "description": "A list of income sources for the account.\n\nFor each income source, we provide additional insights such as:\n- Frequency of the income transactions.\n- Key metrics about the transaction amounts.\n\n‚ÑπÔ∏è If no income sources are found, we return an empty array.\n",
        "properties": {
          "transactions": {
            "type": "array",
            "description": "A list of supporting transactions for this income source.\n\n\n‚ÑπÔ∏è If no income transactions are found, we return an empty array.\n",
            "items": {
              "$ref": "#/components/schemas/IncomeSourceTransaction"
            }
          },
          "confidence": {
            "type": "string",
            "enum": [
              "HIGH",
              "MEDIUM"
            ],
            "description": "Belvo's level of confidence that the source is actually an income.\n\nWe return one of the following enum values:\n\n  - `HIGH`\n  - `MEDIUM`\n",
            "example": "HIGH"
          },
          "type": {
            "type": "string",
            "enum": [
              "SALARY",
              "CASH_DEPOSIT",
              "PENSION",
              "UNKNOWN"
            ],
            "description": "The type of income.\n\nWe return one of the following enum values:\n\n  - `SALARY`\n  - `CASH_DEPOSIT`\n  - `PENSION`\n  - `UNKNOWN`\n",
            "example": "SALARY"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "FORTNIGHTLY",
              "WEEKLY",
              "IRREGULAR"
            ],
            "description": "How often the income transaction occurs.\n\nWe return one of the following enum values:\n\n  - `MONTHLY`\n  - `FORTNIGHTLY`\n  - `WEEKLY`\n  - `IRREGULAR`\n",
            "example": "MONTHLY"
          },
          "std_transaction_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The standard deviation of the income transaction.",
            "example": 1040.83
          },
          "average_transaction_amount": {
            "type": "number",
            "format": "float",
            "description": "The average income transaction amount.",
            "example": 31166.66
          },
          "median_transaction_amount": {
            "type": "number",
            "format": "float",
            "description": "The median income transaction amount.",
            "example": 31500
          },
          "minimum_transaction_amount": {
            "type": "number",
            "format": "float",
            "description": "The minimum income transaction amount.",
            "example": 30000
          },
          "maximum_transaction_amount": {
            "type": "number",
            "format": "float",
            "description": "The maximum income transaction amount.",
            "example": 32000
          },
          "days_since_last_transaction": {
            "type": "integer",
            "format": "int32",
            "description": "The number of days since the last income transaction.",
            "example": 6
          },
          "average_days_between_consecutive_income_transactions": {
            "type": "number",
            "format": "float",
            "description": "The average number of days between consecutive income transactions.",
            "example": 30.5
          },
          "std_days_between_consecutive_income_transactions": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The standard deviation of days between consecutive income transactions.",
            "example": 2.12
          },
          "median_days_between_consecutive_income_transactions": {
            "type": "number",
            "format": "float",
            "description": "The median number of days between consecutive income transactions.",
            "example": 30.5
          },
          "minimum_days_between_consecutive_income_transactions": {
            "type": "integer",
            "format": "int32",
            "description": "The minimum number of days between consecutive income transactions.",
            "example": 29
          },
          "maximum_days_between_consecutive_income_transactions": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of days between consecutive income transactions.",
            "example": 32
          }
        }
      },
      "IncomesAggregations": {
        "type": "object",
        "nullable": true,
        "required": [
          "period_unit",
          "type",
          "minimum_confidence",
          "lookback_periods",
          "full_periods",
          "periods_with_income",
          "total_number_of_sources",
          "std_income_per_period",
          "average_income_per_period",
          "median_income_per_period",
          "maximum_income_per_period",
          "minimum_income_per_period"
        ],
        "description": "A list of aggregated data for the incomes.\n\n\n‚ÑπÔ∏è If not income information can be found, we return an empty array.\n",
        "properties": {
          "period_unit": {
            "type": "string",
            "description": "Period to be considered. At present all calculations are based on *rolling months*.\n\nNote: A *rolling month* is a period of 30 days. For example, 15-03-2021 to 14-04-2021.\n",
            "example": "MONTH"
          },
          "type": {
            "type": "string",
            "enum": [
              "ALL",
              "CASH_DEPOSIT",
              "PENSION",
              "SALARY",
              "UNKNOWN"
            ],
            "description": "The type of income used in the calculations. At present, Belvo takes into consideration all the income types into the calculation.\nWe return one of the following enum values:\n\n  - `ALL`\n  - `CASH_DEPOSIT`\n  - `PENSION`\n  - `SALARY`\n  - `UNKNOWN`",
            "example": "ALL"
          },
          "minimum_confidence": {
            "type": "string",
            "enum": [
              "MEDIUM",
              "HIGH"
            ],
            "description": "The lowest confidence score of the income transactions used in performing the calculations.\n\nWhen the `minimum_confidence` enum is equal to:\n- `HIGH`, only transactions with high confidence score are used.\n- `MEDIUM`, all transactions with a confidence score of medium or high are used.\n",
            "example": "HIGH"
          },
          "lookback_periods": {
            "type": "integer",
            "format": "int32",
            "description": "Number of `period_unit`s used to generate insights and calculations.",
            "example": 3
          },
          "full_periods": {
            "type": "integer",
            "format": "int32",
            "description": "Number of `period_unit`s with data to perform calculations.",
            "example": 2
          },
          "periods_with_income": {
            "type": "integer",
            "format": "int32",
            "description": "Number of `period_unit`s with at least one income available with a confidence of either `HIGH` or `MEDIUM`.\n",
            "example": 3
          },
          "total_number_of_sources": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of income transactions in the last `period_unit`s.",
            "example": 3
          },
          "std_income_per_period": {
            "type": "number",
            "format": "float",
            "description": "The standard deviation of the income amount calculated per month, given the past three `period_unit`s.\n",
            "example": 1415.12
          },
          "average_income_per_period": {
            "type": "number",
            "format": "float",
            "description": "The average income amount calculated per month, given the past three `period_unit`s.\n",
            "example": 2742.07
          },
          "median_income_per_period": {
            "type": "number",
            "format": "float",
            "description": "The median income amount calculated per month, given the past three `period_unit`s.\n",
            "example": 1990.73
          },
          "maximum_income_per_period": {
            "type": "number",
            "format": "float",
            "description": "The maximum income amount calculated per month, given the past three `period_unit`s.\n",
            "example": 4374.4
          },
          "minimum_income_per_period": {
            "type": "number",
            "format": "float",
            "description": "The minimum income amount calculated per month, given the past three `period_unit`s.\n",
            "example": 1861.08
          }
        }
      },
      "Income": {
        "type": "object",
        "description": "Income insights",
        "required": [
          "id",
          "account",
          "currency",
          "sources",
          "aggregations",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique identifier used to reference the current income.",
            "example": "076c66e5-90f5-4e01-99c7-50e32f65ae42"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the income. For example:\n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n\n Please note that other currencies other than in the list above may be returned.",
            "minLength": 3,
            "maxLength": 3,
            "example": "MXN"
          },
          "sources": {
            "type": "array",
            "description": "A list of income sources for the account.\n\nFor each income source, we provide additional insights such as:\n- Frequency of the income transactions.\n- Key metrics about the transaction amounts.\n",
            "items": {
              "$ref": "#/components/schemas/IncomeSources"
            }
          },
          "aggregations": {
            "type": "array",
            "description": "A list of aggregated metrics for the income.\n",
            "items": {
              "$ref": "#/components/schemas/IncomesAggregations"
            }
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true,
            "description": "This field has been deprecated.\n\nThe ISO-8601 timestamp when the data point was collected.\n",
            "example": null
          }
        }
      },
      "IncomesPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of income objects.",
            "items": {
              "$ref": "#/components/schemas/Income"
            }
          }
        }
      },
      "IncomesRequest": {
        "type": "object",
        "required": [
          "link"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` that you want to get information for.",
            "example": "2ccd5e15-194a-4a19-a45a-e7223c7e6717"
          },
          "date_from": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date from which you want to start getting incomes for, in `YYYY-MM-DD` format, within the last 365 days. When you use this parameter, you must also send `date_to`.\n\n‚ö†Ô∏è You must have at least 90 days between `date_from` and `date_to`.\n\n‚ö†Ô∏è The value of `date_from` cannot be greater than `date_to`.",
            "example": "2020-08-01"
          },
          "date_to": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date you want to stop getting incomes for, in `YYYY-MM-DD` format, within the last 365 days. When you use this parameter, you must also send `date_from`.\n\n‚ö†Ô∏è You must have at least 90 days between `date_from` and `date_to`.\n\n‚ö†Ô∏è The value of `date_to` cannot be greater than today's date (in other words, no future dates).",
            "example": "2020-12-30"
          },
          "token": {
            "type": "string",
            "description": "The OTP token generated by the bank.",
            "example": "1234ab"
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response."
          }
        }
      },
      "InvalidPeriodError": {
        "type": "object",
        "title": "Invalid Period",
        "description": "This error occurs when you request incomes for a link within a given date range, however, the period between `date_from` and `date_to` is less than 90 days.",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique error code (`invalid_period`) that allows you to classify and handle the error programmatically.\n\n‚ÑπÔ∏è Check our DevPortal for more information on how to handle <a href=\"https://developers.belvo.com/docs/belvo-api-errors#400-invalid_period\" target=\"_blank\">400 invalid_period errors</a>.",
            "example": "invalid_period"
          },
          "message": {
            "type": "string",
            "description": "A short description of the error. \n\nFor `invalid_period` errors, the description is:\n  \n  - `The number of days between date_from and date_to must be at least 90 days`.",
            "example": "The number of days between date_from and date_to must be at least 90 days"
          },
          "request_id": {
            "type": "string",
            "pattern": "[a-f0-9]{32}",
            "description": "A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
            "example": "9e7b283c6efa449c9c028a16b5c249fb"
          }
        }
      },
      "RecurringExpenseSourceTransaction": {
        "type": "object",
        "nullable": true,
        "required": [
          "amount",
          "description",
          "value_date"
        ],
        "description": "An array of minified transaction objects used to evaluate the recurring expense. If no transactions were found, we return an empty array.",
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "description": "The transaction amount.",
            "example": 2145.45
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the transaction provided by the institution. Usually, this is the text that the end user would see in the bank statement. The description can be an empty string.",
            "example": "Netflix.com/march"
          },
          "value_date": {
            "type": "string",
            "format": "date",
            "description": "The date when the transaction occurred, in `YYYY-MM-DD` format.",
            "example": "2019-10-23"
          }
        }
      },
      "RecurringExpenses": {
        "type": "object",
        "required": [
          "account",
          "name",
          "transactions",
          "frequency",
          "average_transaction_amount",
          "median_transaction_amount",
          "days_since_last_transaction",
          "category",
          "payment_type"
        ],
        "description": "Recurring expense insights.\n\n\n‚ÑπÔ∏è If no recurring expense insights are found, we return an empty array.\n",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique identifier used to reference the current recurring expense.",
            "example": "076c66e5-90f5-4e01-99c7-50e32f65ae42"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "default": null,
            "description": "The name for the recurring expense.\n\n‚ÑπÔ∏è **Note**: This information is taken from the description section of a transaction and then normalized to provide you with an easy-to-read name. As such, sometimes the name will reflect the merchant the payment is made to (for example, Netflix.com), while for other recurring expenses, this could be something like \"Monthly payment to John\".\n",
            "example": "Netflix"
          },
          "transactions": {
            "type": "array",
            "description": "An array of minified transaction objects used to evaluate the recurring expense. If no transactions were found, we return an empty array.",
            "items": {
              "$ref": "#/components/schemas/RecurringExpenseSourceTransaction"
            }
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY"
            ],
            "default": "MONTHLY",
            "description": "The frequency at which this recurring expense occurs.\n‚ÑπÔ∏è **Note:** As part of the BETA, Belvo only identifies `MONTHLY` frequencies.\n",
            "example": "MONTHLY"
          },
          "average_transaction_amount": {
            "type": "number",
            "format": "float",
            "description": "The average transaction amount of the recurring expense.",
            "example": 32.9
          },
          "median_transaction_amount": {
            "type": "number",
            "format": "float",
            "description": "The median transaction amount of the recurring expense.",
            "example": 32.9
          },
          "days_since_last_transaction": {
            "type": "integer",
            "format": "int32",
            "description": "Number of days since the last recurring expense occurred.\n\nBased on the frequency, you can infer how many days until the next charge will occur.\n",
            "example": 5
          },
          "category": {
            "type": "string",
            "nullable": true,
            "default": null,
            "description": "The transaction category for the recurring expense. For more information on the available categories, please see our [Transaction categorization documentation](https://developers.belvo.com/docs/banking#transaction-categorization).\n‚ÑπÔ∏è **Note:** As part of the BETA - the most common categories that will be returned are:\n- `Online Platforms & Leisure` (Netflix, Spotify, Gym Memberships)\n- `Bills & Utilities` (electricity, telephone, internet)\n- `Credits & Loans` (credit card cash advances, student loan, watercraft lease)\n- `Transport & Travel` (Uber trip, airbnb, parking)\n- `Taxes` (service fee, donation, court taxes)\n",
            "example": "Online Platforms & Leisure"
          },
          "payment_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "SUBSCRIPTION",
              "REGULAR"
            ],
            "description": "The type of recurring expense.\nAs part of the BETA, Belvo returns either `SUBSCRIPTION` or `REGULAR` payment types for a transaction category.\n",
            "example": "SUBSCRIPTION"
          }
        }
      },
      "RecurringExpensesPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of recurring expense objects.",
            "items": {
              "$ref": "#/components/schemas/RecurringExpenses"
            }
          }
        }
      },
      "InvestmentsPortfolioInstrumentPublicId": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "description": "The public identifiers for the instrument.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of public identifier for the instrument.",
            "example": "isin"
          },
          "value": {
            "type": "string",
            "description": "The value of the `public_id.type`.",
            "example": "435-3354.3333"
          }
        }
      },
      "InvestmentsPortfolioInstrumentRedemptionConditions": {
        "type": "object",
        "nullable": true,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The name of the redemption condition.",
            "example": "due_date"
          },
          "value": {
            "type": "string",
            "description": "The value of `redemption_conditions.type`.",
            "example": "12-02-2023"
          }
        }
      },
      "InvestmentsPortfolioInstrumentFees": {
        "type": "object",
        "nullable": true,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The fee type incurred when making the purchase of the instrument.",
            "example": "OPERATION_FEE"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "The value of `fees.type`. The currency of the fee is the same as the currency of the instrument.",
            "example": 123.09
          }
        }
      },
      "InvestmentsPortfolioInstrumentInterestRate": {
        "type": "object",
        "nullable": true,
        "required": [
          "type",
          "value",
          "index"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "How often the interest rate is calculated on the instrument.",
            "example": "yearly"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "The interest rate for the instrument, in percent.\n\n\n‚ÑπÔ∏è  **Note:** If the `interest_rate.index` is present, this value is a percentage of the index. For example, if `interest_rate.index` = `CDI` and `interest_rate.value` = `90`, then the total interest rate applied is 90% of the CDI.\n",
            "example": 11.31
          },
          "index": {
            "type": "string",
            "nullable": true,
            "description": "If applicable, the index type that the `interest_rates.value` is calculated against.",
            "example": "CDI"
          }
        }
      },
      "InvestmentsPortfolioInstrument": {
        "type": "object",
        "nullable": true,
        "required": [
          "public_id",
          "type",
          "subtype",
          "name",
          "currency",
          "price",
          "quantity",
          "balance_gross",
          "balance_net",
          "average_acquisition_price",
          "profit",
          "open_date",
          "redemption_conditions",
          "fees",
          "interest_rates"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID used to reference the current instrument.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "public_id": {
            "type": "array",
            "nullable": true,
            "description": "The public identifiers for the instrument.",
            "items": {
              "$ref": "#/components/schemas/InvestmentsPortfolioInstrumentPublicId"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "BOND",
              "DEPOSIT",
              "ETF",
              "FUND",
              "OTHER",
              "PENSION",
              "STOCK"
            ],
            "description": "The instrument type. For more information about instruments, please see our [Investments DevPortal article](https://developers.belvo.com/docs/investments#instruments).\n\nWe return one of the following enum values:\n\n  - `BOND`\n  - `DEPOSIT`\n  - `ETF`\n  - `FUND`\n  - `OTHER`\n  - `PENSION`\n  - `STOCK`\n",
            "example": "DEPOSIT"
          },
          "subtype": {
            "type": "string",
            "nullable": true,
            "description": "The subtype for the instrument, as given by the institution.",
            "example": "CBD"
          },
          "name": {
            "type": "string",
            "description": "The name of the instrument, as given by the institution.",
            "example": "CBD DIGITAL ESPECIAL"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the instrument. For example:\n\n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n- üá∫üá∏ USD (US Dollar)\n\n\nPlease note that other currencies other than in the list above may be returned.\n",
            "example": "USD"
          },
          "price": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The current price of one share in the instrument.",
            "example": 10.41
          },
          "quantity": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total amount of shares owned in the instrument.",
            "example": 27.46
          },
          "balance_gross": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total gross value of the instrument (including taxes).",
            "example": 100.09
          },
          "balance_net": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total net value of the instrument (excluding taxes).",
            "example": 99.09
          },
          "average_acquisition_price": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The average price of each share acquired in the instrument.",
            "example": 10.01
          },
          "profit": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The current profit earned in the instrument.",
            "example": 3.08
          },
          "open_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "The start date of the instrument. Only applicable for instruments of type `bond` or `savings`.",
            "example": "2021-08-10"
          },
          "redemption_conditions": {
            "type": "array",
            "nullable": true,
            "description": "An array of conditions that apply to the instrument in order to retrieve the final value.\n\nFor example, the due date, the liquidity date, the previdencia type, and so on.\n",
            "items": {
              "$ref": "#/components/schemas/InvestmentsPortfolioInstrumentRedemptionConditions"
            }
          },
          "fees": {
            "type": "array",
            "nullable": true,
            "description": "An array of fees that apply to the instrument.",
            "items": {
              "$ref": "#/components/schemas/InvestmentsPortfolioInstrumentFees"
            }
          },
          "interest_rates": {
            "type": "array",
            "nullable": true,
            "description": "An array of interest rates that apply to the instrument.",
            "items": {
              "$ref": "#/components/schemas/InvestmentsPortfolioInstrumentInterestRate"
            }
          }
        }
      },
      "InvestmentsPortfolio": {
        "type": "object",
        "required": [
          "name",
          "type",
          "balance_gross",
          "balance_net",
          "currency"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID used to reference the current portfolio.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "name": {
            "type": "string",
            "description": "The name of the portfolio, as given in the institution.\n",
            "example": "Investimento"
          },
          "type": {
            "type": "string",
            "enum": [
              "FIXED_INCOME",
              "OTHER",
              "PENSION",
              "VARIABLE_INCOME"
            ],
            "description": "The portfolio type.\n\nWe return one of the following enum values:\n\n  - `FIXED_INCOME`\n  - `OTHER`\n  - `PENSION`\n  - `VARIABLE_INCOME`\n",
            "example": "FIXED_INCOME"
          },
          "balance_type": {
            "type": "string",
            "nullable": true,
            "description": "Indicates whether this account is either an `ASSET` or a `LIABILITY`. You can consider the balance of an `ASSET` as being positive, while the balance of a `LIABILITY` as negative.\n",
            "example": "ASSET"
          },
          "balance_gross": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The current gross total value of the entire portfolio and all its underlying instruments, as given by the institution.\n",
            "example": 76000
          },
          "balance_net": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total current value of the entire portfolio and all its underlying instruments, as given by the institution.\n\n‚ÑπÔ∏è **Note:** In Brazil, this is usually calculated based on the net value (that is, not including tax).\n",
            "example": 77370.69
          },
          "currency": {
            "type": "string",
            "description": "The currency of the portfolio. For example:\n\n\n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n\n\nPlease note that other currencies other than in the list above may be returned.\n",
            "example": "BRL"
          },
          "instruments": {
            "type": "array",
            "nullable": true,
            "description": "An array of instruments that fall into the investment portfolio.",
            "items": {
              "$ref": "#/components/schemas/InvestmentsPortfolioInstrument"
            }
          }
        }
      },
      "InvestmentsPortfoliosPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of investment portfolio objects.",
            "items": {
              "$ref": "#/components/schemas/InvestmentsPortfolio"
            }
          }
        }
      },
      "InvestmentsInstrumentTransactionPortfolio": {
        "type": "object",
        "description": "Basic information about the parent portfolio.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID used to reference the current portfolio.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "name": {
            "type": "string",
            "description": "The name of the portfolio, as given in the institution.\n",
            "example": "Fundos de Investimento"
          },
          "type": {
            "type": "string",
            "enum": [
              "FIXED_INCOME",
              "OTHER",
              "PENSION",
              "VARIABLE_INCOME"
            ],
            "description": "The portfolio type.\n\nWe return one of the following enum values:\n\n  - `FIXED_INCOME`\n  - `OTHER`\n  - `PENSION`\n  - `VARIABLE_INCOME`\n",
            "example": "FIXED_INCOME"
          }
        }
      },
      "InvestmentsInstrumentTransactionInstrument": {
        "type": "object",
        "description": "Basic information about the parent instrument.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID used to reference the current instrument.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "name": {
            "type": "string",
            "description": "The name of the instrument, as given by the institution.",
            "example": "Itau A√ßoes Estrategia S&P 500"
          },
          "type": {
            "type": "string",
            "enum": [
              "BOND",
              "DEPOSIT",
              "ETF",
              "FUND",
              "OTHER",
              "PENSION",
              "STOCK"
            ],
            "description": "The instrument type. For more information about instruments, please see our [Investments DevPortal article](https://developers.belvo.com/docs/investments#instruments).\n\nWe return one of the following enum values:\n\n  - `BOND`\n  - `DEPOSIT`\n  - `ETF`\n  - `FUND`\n  - `OTHER`\n  - `PENSION`\n  - `STOCK`\n",
            "example": "FUND"
          }
        }
      },
      "InvestmentsInstrumentTransaction": {
        "type": "object",
        "required": [
          "settlement_date",
          "operation_date",
          "description",
          "quantity",
          "amount",
          "price",
          "fees",
          "currency",
          "portfolio",
          "instrument",
          "type",
          "collected_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique identifier used to reference the current instrument transaction.",
            "example": "f3cd25ba-d109-4ddf-8d29-624c26cbee3f"
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` the transaction belongs to.",
            "example": "f3cd25ba-d109-4ddf-8d29-624c26cbee3f"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp when the data point was collected.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "portfolio": {
            "$ref": "#/components/schemas/InvestmentsInstrumentTransactionPortfolio"
          },
          "instrument": {
            "$ref": "#/components/schemas/InvestmentsInstrumentTransactionInstrument"
          },
          "settlement_date": {
            "type": "string",
            "format": "date",
            "description": "Date when the transaction was processed by the bank.",
            "example": "2021-08-13"
          },
          "operation_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Date when the transaction was initiated by the user.",
            "example": "2021-08-07"
          },
          "description": {
            "type": "string",
            "description": "Additional description for the transaction.",
            "example": "Stock acquisition"
          },
          "type": {
            "type": "string",
            "enum": [
              "BUY",
              "SELL",
              "CANCEL",
              "CASH",
              "FEE",
              "TRANSFER",
              "DIVIDEND"
            ],
            "description": "The type of transaction.\n\nWe return one of the following enum values:\n\n  - `BUY`\n  - `SELL`\n  - `CANCEL`\n  - `CASH`\n  - `FEE`\n  - `TRANSFER`\n  - `DIVIDEND`\n",
            "example": "BUY"
          },
          "quantity": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Number of shares purchased in this transaction.",
            "example": 18.2556
          },
          "amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total amount of the transaction.\n\n‚ÑπÔ∏è **Note:** Does not include the transaction fees.\n",
            "example": 18000.25
          },
          "price": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The market price for one share at the time of the transaction.",
            "example": 1000
          },
          "currency": {
            "type": "string",
            "description": "The currency of the transaction. For example:\n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n\n\nPlease note that other currencies other than in the list above may be returned.\n",
            "example": "BRL"
          },
          "fees": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total fees paid to conduct the transaction.",
            "example": 184.5
          }
        }
      },
      "InvestmentsTransactionsPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of link objects.",
            "items": {
              "$ref": "#/components/schemas/InvestmentsInstrumentTransaction"
            }
          }
        }
      },
      "InstrumentTransactionRequest": {
        "type": "object",
        "required": [
          "link",
          "date_from",
          "date_to"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` that you want to get information for.",
            "example": "2ccd5e15-194a-4a19-a45a-e7223c7e6717"
          },
          "date_from": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date from which you want to start getting transactions for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_from` cannot be greater than `date_to`.",
            "example": "2020-08-05"
          },
          "date_to": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date you want to stop getting transactions for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_to` cannot be greater than today's date (in other words, no future dates).",
            "example": "2020-10-05"
          },
          "token": {
            "type": "string",
            "description": "The OTP token generated by the bank.",
            "example": "1234ab"
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. When set to `false`, the data won't be persisted."
          }
        }
      },
      "ReceivablesTransactionAccount": {
        "type": "object",
        "description": "Basic information about the account associated with the transaction.",
        "required": [
          "id",
          "institution"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID used to reference the account associated with the transaction.",
            "example": "a7a3104c-5a3c-4536-81e1-14523097f645"
          },
          "institution": {
            "$ref": "#/components/schemas/InstitutionAccount"
          }
        }
      },
      "RecevablesTransactionFees": {
        "type": "object",
        "description": "Details regarding the fees applied to the transaction.",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "TRANSACTION_FEE"
            ],
            "description": "The type of fee applied to the transaction. Can be one of the following values:\n\n - `TRANSACTION_FEE`"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "The value of `fees.type`.",
            "example": 2.21
          }
        }
      },
      "ReceivablesTransactionNumberOfInstallments": {
        "type": "object",
        "description": "Details regarding the number of installments for the transaction, if applicable.",
        "required": [
          "paid",
          "total"
        ],
        "nullable": true,
        "properties": {
          "paid": {
            "type": "integer",
            "nullable": true,
            "format": "int32",
            "description": "The number of payments already made to pay the cost of the transaction.",
            "example": 1
          },
          "total": {
            "type": "integer",
            "nullable": true,
            "format": "int32",
            "description": "The number of payments required to pay the cost of the transaction.",
            "example": 2
          }
        }
      },
      "ReceivablesTransaction": {
        "type": "object",
        "required": [
          "id",
          "account",
          "created_at",
          "collected_at",
          "value_hour",
          "value_date",
          "institution_transaction_id",
          "currency",
          "type",
          "gross_amount",
          "net_amount",
          "fees",
          "status",
          "number_of_installments"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "Belvo's unique ID used to reference the current receivable transaction.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "account": {
            "$ref": "#/components/schemas/ReceivablesTransactionAccount"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO timestamp of when the data point was last updated in Belvo's database.",
            "example": "2020-04-23T21:30:20.336854+00:00"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO timestamp when the data point was collected.",
            "example": "2020-04-23T21:32:55.336854+00:00"
          },
          "value_hour": {
            "type": "string",
            "description": "The time that the transaction occurred, according to the institution, in `HH:MM` format.",
            "example": "19:47"
          },
          "value_date": {
            "type": "string",
            "format": "date",
            "description": "The date that the transactions occurred, according to the institution, in `YYYY-MM-DD` format.",
            "example": "2022-01-16"
          },
          "institution_transaction_id": {
            "type": "string",
            "description": "Internal identification number that the acquirer uses to identify the transaction.\n‚ÑπÔ∏è **Note**: For Brazil, this number is the NSU.",
            "example": "134532345"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the transaction. For example:\n- üáßüá∑ BRL (Brazilian Real)\n- üá®üá¥ COP (Colombian Peso)\n- üá≤üáΩ MXN (Mexican Peso)\n\n Please note that currencies other than those listed above may be returned.",
            "example": "BRL"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "VISA_CREDIT",
              "VISA_DEBIT",
              "MASTERCARD_CREDIT",
              "MASTERCARD_DEBIT",
              "ELO_CREDIT",
              "ELO_DEBIT"
            ],
            "description": "The type of transaction. For example, whether the transaction was a `VISA_DEBIT` or a `MASTERCARD_CREDIT`.",
            "example": "MASTERCARD_CREDIT"
          },
          "gross_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total gross amount of the transaction.",
            "example": 106.7
          },
          "net_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The net amount of the transaction.",
            "example": 104.58
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecevablesTransactionFees"
            }
          },
          "status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "APPROVED",
              "CANCELLED",
              "REVERTED",
              "UNCATEGORIZED"
            ],
            "description": "The status of the transaction. Can be either:\n\n  - `APPROVED`\n  - `CANCELLED`\n  - `REVERTED`\n  - `UNCATEGORIZED`",
            "example": "APPROVED"
          },
          "number_of_installments": {
            "$ref": "#/components/schemas/ReceivablesTransactionNumberOfInstallments"
          }
        }
      },
      "ReceivablesTransactionsPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of receivables objects.",
            "items": {
              "$ref": "#/components/schemas/ReceivablesTransaction"
            }
          }
        }
      },
      "ReceivableTransactionRequest": {
        "type": "object",
        "required": [
          "link",
          "date_from",
          "date_to"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` that you want to get information for.",
            "example": "2ccd5e15-194a-4a19-a45a-e7223c7e6717"
          },
          "date_from": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date from which you want to start getting transactions for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_from` cannot be greater than `date_to`.",
            "example": "2020-08-05"
          },
          "date_to": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date you want to stop getting transactions for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_to` cannot be greater than today's date (in other words, no future dates).",
            "example": "2020-10-05"
          },
          "token": {
            "type": "string",
            "description": "The OTP token generated by the bank.",
            "example": "1234ab"
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response."
          }
        }
      },
      "RiskInsightsTransactionMetrics": {
        "type": "object",
        "nullable": true,
        "required": [
          "num_transactions_1w",
          "num_transactions_1m",
          "num_transactions_3m",
          "num_incoming_transactions_1w",
          "num_incoming_transactions_1m",
          "num_incoming_transactions_3m",
          "num_outgoing_transactions_1w",
          "num_outgoing_transactions_1m",
          "num_outgoing_transactions_3m",
          "sum_incoming_amount_1w",
          "sum_incoming_amount_1m",
          "sum_incoming_amount_3m",
          "sum_outgoing_amount_1w",
          "sum_outgoing_amount_1m",
          "sum_outgoing_amount_3m",
          "max_incoming_amount_1w",
          "max_incoming_amount_1m",
          "max_incoming_amount_3m",
          "max_outgoing_amount_1w",
          "max_outgoing_amount_1m",
          "max_outgoing_amount_3m",
          "mean_incoming_amount_1w",
          "mean_incoming_amount_1m",
          "mean_incoming_amount_3m",
          "mean_outgoing_amount_1w",
          "mean_outgoing_amount_1m",
          "mean_outgoing_amount_3m"
        ],
        "description": "Aggregated metrics calculated band on the user's transactions from checking, savings, credit card, and loan accounts.",
        "properties": {
          "num_transactions_1w": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "The total number of transactions analyzed to determine the risk insights for the last week (incoming and outgoing).\n",
            "example": 39
          },
          "num_transactions_1m": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "The total number of transactions analyzed to determine the risk insights for the last month (incoming and outgoing).\n",
            "example": 39
          },
          "num_transactions_3m": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "The total number of transactions analyzed to determine the risk insights for the last three months (incoming and outgoing).\n",
            "example": 39
          },
          "num_incoming_transactions_1w": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "The total number of inflow transactions for the last week.\n\n‚ÑπÔ∏è **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is `0`.\n\nIf the account has not been open long enough to have the transaction data for a given period, we return `null`. For example, if the account has only been open for five days, we return values for `_1w` and `_1m`, however, the value for `_3m` will be `null`.\n",
            "example": 20
          },
          "num_incoming_transactions_1m": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "The total number of inflow transactions for the last month.\n\n‚ÑπÔ∏è **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is `0`.\n\nIf the account has not been open long enough to have the transaction data for a given period, we return `null`. For example, if the account has only been open for five days, we return values for `_1w` and `_1m`, however, the value for `_3m` will be `null`.\n",
            "example": 20
          },
          "num_incoming_transactions_3m": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "The total number of inflow transactions for the last three months.\n\n‚ÑπÔ∏è **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is `0`.\n\nIf the account has not been open long enough to have the transaction data for a given period, we return `null`. For example, if the account has only been open for five days, we return values for `_1w` and `_1m`, however, the value for `_3m` will be `null`.\n",
            "example": 20
          },
          "num_outgoing_transactions_1w": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "To total number of outflow transactions in the last week.\n\n‚ÑπÔ∏è **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is `0`.\n\nIf the account has not been open long enough to have the transaction data for a given period, we return `null`. For example, if the account has only been open for five days, we return values for `_1w` and `_1m`, however, the value for `_3m` will be `null`.\n",
            "example": 19
          },
          "num_outgoing_transactions_1m": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "To total number of outflow transactions in the last month.\n\n‚ÑπÔ∏è **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is `0`.\n\nIf the account has not been open long enough to have the transaction data for a given period, we return `null`. For example, if the account has only been open for five days, we return values for `_1w` and `_1m`, however, the value for `_3m` will be `null`.\n",
            "example": 19
          },
          "num_outgoing_transactions_3m": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "To total number of outflow transactions in the last three months.\n\n‚ÑπÔ∏è **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is `0`.\n\nIf the account has not been open long enough to have the transaction data for a given period, we return `null`. For example, if the account has only been open for five days, we return values for `_1w` and `_1m`, however, the value for `_3m` will be `null`.\n",
            "example": 19
          },
          "sum_incoming_amount_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total sum of all inflow transactions for the last week.\n",
            "example": 10022.01
          },
          "sum_incoming_amount_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total sum of all inflow transactions for the last month.\n",
            "example": 10022.01
          },
          "sum_incoming_amount_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total sum of all inflow transactions for the last three months.\n",
            "example": 10022.01
          },
          "sum_outgoing_amount_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total sum of all outflow transactions for the last week.\n",
            "example": 10237.03
          },
          "sum_outgoing_amount_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total sum of all outflow transactions for the last month.\n",
            "example": 10237.03
          },
          "sum_outgoing_amount_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total sum of all outflow transactions for the last three months.\n",
            "example": 10237.03
          },
          "max_incoming_amount_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The highest value inflow transaction in the last week.\n",
            "example": 3030
          },
          "max_incoming_amount_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The highest value inflow transaction in the last month.\n",
            "example": 3030
          },
          "max_incoming_amount_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The highest value inflow transaction in the last three months.\n",
            "example": 3030
          },
          "max_outgoing_amount_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The highest value outflow transaction in the last week.\n",
            "example": 3027.44
          },
          "max_outgoing_amount_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The highest value outflow transaction in the last month.\n",
            "example": 3027.44
          },
          "max_outgoing_amount_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The highest value outflow transaction in the last three months.\n",
            "example": 3027.44
          },
          "mean_incoming_amount_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The mean incoming value of all transactions in the last week.\n",
            "example": 3030
          },
          "mean_incoming_amount_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The mean incoming value of all transactions in the last month.\n",
            "example": 3030
          },
          "mean_incoming_amount_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The mean incoming value of all transactions in the last three months.\n",
            "example": 3030
          },
          "mean_outgoing_amount_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The mean outgoing value of all transaction in the last week.\n",
            "example": 3027.44
          },
          "mean_outgoing_amount_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The mean outgoing value of all transaction in the last month.\n",
            "example": 3027.44
          },
          "mean_outgoing_amount_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The mean outgoing value of all transaction in the last three months.\n",
            "example": 3027.44
          }
        }
      },
      "RiskInsightsBalanceMetrics": {
        "type": "object",
        "nullable": true,
        "required": [
          "min_balance_1w",
          "min_balance_1m",
          "min_balance_3m",
          "max_balance_1w",
          "max_balance_1m",
          "max_balance_3m",
          "days_balance_below_0_1w",
          "days_balance_below_0_1m",
          "days_balance_below_0_3m",
          "days_balance_below_x_1w",
          "days_balance_below_x_1m",
          "days_balance_below_x_3m",
          "closing_balance",
          "balance_threshold_x"
        ],
        "description": "Balance metrics calculated based on the user's balances from checking and savings accounts.",
        "properties": {
          "min_balance_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The minimum balance in the period (one week).\n",
            "example": 0.51
          },
          "min_balance_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The minimum balance in the period (one month).\n",
            "example": 0.51
          },
          "min_balance_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The minimum balance in the period (three months).\n",
            "example": 0.51
          },
          "max_balance_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The maximum balance in the period (one week).\n",
            "example": 3062.11
          },
          "max_balance_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The maximum balance in the period (one month).\n",
            "example": 3062.11
          },
          "max_balance_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The maximum balance in the period (three months).\n",
            "example": 3062.11
          },
          "closing_balance": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The balance of all the accounts at the `collected_at` time.\n",
            "example": 24.19
          },
          "days_balance_below_0_1w": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The number of days that the total balance of the account is less than or equal to 0 in the last week.\n",
            "example": 0
          },
          "days_balance_below_0_1m": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The number of days that the total balance of the account is less than or equal to 0 in the last month.\n",
            "example": 0
          },
          "days_balance_below_0_3m": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The number of days that the total balance of the account is less than or equal to 0 in the last three months.\n",
            "example": 0
          },
          "days_balance_below_x_1w": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The number of days that the total balance of the account is less than or equal to the amount specified in `balance_threshold_x` in the last week.\n",
            "example": 3
          },
          "days_balance_below_x_1m": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The number of days that the total balance of the account is less than or equal to the amount specified in `balance_threshold_x` in the last month.\n",
            "example": 3
          },
          "days_balance_below_x_3m": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The number of days that the total balance of the account is less than or equal to the amount specified in `balance_threshold_x` in the last three months.\n",
            "example": 3
          },
          "balance_threshold_x": {
            "type": "number",
            "format": "float",
            "description": "The threshold used to compute `days_balance_below_x_period`. Please note, this is value is country specific (both in terms of the amount and the currency).\n",
            "example": 267
          }
        }
      },
      "RiskInsightsCashflowMetrics": {
        "type": "object",
        "nullable": true,
        "required": [
          "sum_positive_1w",
          "sum_positive_1m",
          "sum_positive_3m",
          "sum_negative_1w",
          "sum_negative_1m",
          "sum_negative_3m",
          "positive_to_negative_ratio_1w",
          "positive_to_negative_ratio_1m",
          "positive_to_negative_ratio_3m"
        ],
        "description": "Aggregated metrics calculated based on the user's transactions from checking, savings, credit, and loan accounts.\n\nHowever, internal transfers (transfers between accounts belonging to the same link) are not used in the calculation.\n",
        "properties": {
          "sum_positive_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of all transactions leading to a positive cashflow in the last week (counted from the time of the request).\n",
            "example": 10022.01
          },
          "sum_positive_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of all transactions leading to a positive cashflow in the last month (counted from the time of the request).\n",
            "example": 10022.01
          },
          "sum_positive_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of all transactions leading to a positive cashflow in the last three months (counted from the time of the request).\n",
            "example": 10022.01
          },
          "sum_negative_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of all transactions leading to a negative cashflow in the last week (counted from the time of the request).\n",
            "example": 10237.03
          },
          "sum_negative_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of all transactions leading to a negative cashflow in the last month (counted from the time of the request).\n",
            "example": 10237.03
          },
          "sum_negative_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of all transactions leading to a negative cashflow in the last three months (counted from the time of the request).\n",
            "example": 10237.03
          },
          "positive_to_negative_ratio_1w": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The ratio between sum_positive / sum_negative  in the last week (counted from the time of the request).\n\n‚ÑπÔ∏è¬†If the ratio is greater than `1`, it means that the user has more income than outgoing, indicating that they spend less than they earn.\n\n**Note**: In the case that there have been no outgoing transactions, the value will be `null`.\n",
            "example": 0.98
          },
          "positive_to_negative_ratio_1m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The ratio between sum_positive / sum_negative  in the last month (counted from the time of the request).\n\n‚ÑπÔ∏è¬†If the ratio is greater than `1`, it means that the user has more income than outgoing, indicating that they spend less than they earn.\n",
            "example": 0.98
          },
          "positive_to_negative_ratio_3m": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The ratio between sum_positive / sum_negative  in the last three months (counted from the time of the request).\n\n‚ÑπÔ∏è¬†If the ratio is greater than `1`, it means that the user has more income than outgoing, indicating that they spend less than they earn.\n",
            "example": 0.98
          }
        }
      },
      "RiskInsightsCreditCardMetrics": {
        "type": "object",
        "nullable": true,
        "required": [
          "num_accounts",
          "sum_credit_limit",
          "sum_credit_used"
        ],
        "description": "Aggregated metrics calculated based on the link's credit card accounts.",
        "properties": {
          "num_accounts": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Number of credit cards accounts associated to the link.\n",
            "example": 2
          },
          "sum_credit_limit": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of all credit cards' limits.\n",
            "example": 600.5
          },
          "sum_credit_used": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of all credit used.\n",
            "example": 200.5
          }
        }
      },
      "RiskInsightsLoansMetrics": {
        "type": "object",
        "nullable": true,
        "required": [
          "num_accounts",
          "sum_loans_principal",
          "sum_loans_outstanding_principal",
          "sum_loans_monthly_payment"
        ],
        "description": "Aggregated metrics calculated based on the user's loan accounts.",
        "properties": {
          "num_accounts": {
            "type": "integer",
            "format": "int32",
            "description": "Number of loan accounts associated with the link.\n",
            "example": 5
          },
          "sum_loans_principal": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of the principal for all of the link's loan accounts.\n",
            "example": 5000
          },
          "sum_loans_outstanding_principal": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of the outstanding principal for all the link's loan accounts.\n",
            "example": 2000
          },
          "sum_loans_monthly_payment": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Sum total of the monthly payments for all the link's loan accounts.\n",
            "example": 400
          }
        }
      },
      "RiskInsights": {
        "type": "object",
        "required": [
          "id",
          "link",
          "accounts",
          "created_at",
          "transactions_metrics",
          "balances_metrics",
          "cashflow_metrics",
          "credit_cards_metrics",
          "loans_metrics"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique ID for the risk insights request.",
            "example": "076c66e5-90f5-4e01-99c7-50e32f65ae42"
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` the risk insights analysis belongs to.",
            "example": "30cb4806-6e00-48a4-91c9-ca55968576c8"
          },
          "accounts": {
            "type": "array",
            "nullable": true,
            "description": "An array of Belvo-generated account numbers (UUIDs) that were used during the risk insights analysis. If no accounts were found, we return an empty array.",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "The Belvo-generated ID for the account.",
              "example": "0d3ffb69-f83b-456e-ad8e-208d0998d71d"
            },
            "example": [
              "0d3ffb69-f83b-456e-ad8e-208d0998d71d",
              "00293c8e-1152-440b-9892-3c071fb88672",
              "cf638fba-ef45-4c10-bc6f-adecc4b2bf4e"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
            "example": "2022-02-01T20:25:47.307911Z"
          },
          "transactions_metrics": {
            "$ref": "#/components/schemas/RiskInsightsTransactionMetrics"
          },
          "balances_metrics": {
            "$ref": "#/components/schemas/RiskInsightsBalanceMetrics"
          },
          "cashflow_metrics": {
            "$ref": "#/components/schemas/RiskInsightsCashflowMetrics"
          },
          "credit_cards_metrics": {
            "$ref": "#/components/schemas/RiskInsightsCreditCardMetrics"
          },
          "loans_metrics": {
            "$ref": "#/components/schemas/RiskInsightsLoansMetrics"
          }
        }
      },
      "RiskInsightsPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of risk insights objects.",
            "items": {
              "$ref": "#/components/schemas/RiskInsights"
            }
          }
        }
      },
      "RetentionBreakdown": {
        "type": "object",
        "required": [
          "base_amount",
          "tax_type",
          "retained_amount",
          "payment_status"
        ],
        "description": "A breakdown of the retained taxes",
        "properties": {
          "base_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The base amount that was used to calculate the tax retention.\n",
            "example": 0.03
          },
          "tax_type": {
            "type": "string",
            "nullable": true,
            "description": "Optional attribute to indicate the type of tax withheld for the period or year according to the [SAT catalog](https://developers.belvo.com/docs/sat-catalogs#retention-code).\n",
            "example": "01"
          },
          "retained_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The amount retained.\n",
            "example": 0
          },
          "payment_status": {
            "type": "string",
            "format": "enum",
            "nullable": true,
            "description": "Indicates whether or not the tax has been paid or not. Can be either:\n  - `PAID`\n  - `PROVISIONED`\n",
            "example": "PAID"
          }
        }
      },
      "TaxRetentions": {
        "type": "object",
        "required": [
          "collected_at",
          "invoice_identification",
          "version",
          "code",
          "issued_at",
          "certified_at",
          "cancelled_at",
          "sender_id",
          "sender_name",
          "receiver_nationality",
          "receiver_id",
          "receiver_name",
          "total_invoice_amount",
          "total_taxable_amount",
          "total_exempt_amount",
          "total_retained_amount",
          "retention_breakdown",
          "xml"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Belvo's unique identifier used to reference the current tax retention statement.",
            "example": "c749315b-eec2-435d-a458-06912878564f"
          },
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` the tax retention belongs to.",
            "example": "19697249-01b8-443e-a451-76bfc5fbeebf"
          },
          "collected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp of when the data point was collected.\n",
            "example": "2022-02-09T08:45:50.406032Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.\n",
            "example": "2022-02-09T08:46:20.406032Z"
          },
          "invoice_identification": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "The fiscal institution's unique ID for the invoice that the tax retention relates to.\n",
            "example": "def404af-5eef-4112-aa99-d1ec8493b89a"
          },
          "version": {
            "type": "string",
            "nullable": true,
            "description": "The CFDI version of the tax retentions.\n",
            "example": "1.0"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "description": "The tax retention code. For more information, see our [SAT Catalogs DevPortal article](https://developers.belvo.com/docs/sat-catalogs#retention-code).\n",
            "example": 25
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp of when the tax retention was issued.\n",
            "example": "2019-01-03T21:10:40.000Z"
          },
          "certified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp of when the tax retention was certified.\n",
            "example": "2019-01-03T21:10:41.000Z"
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO-8601 timestamp of when the tax retention was canceled (if applicable).\n",
            "example": null
          },
          "sender_id": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal ID of the invoice sender.\n",
            "example": "JKUF980404P0"
          },
          "sender_name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the invoice sender.\n",
            "example": "Roberto Nunez Batman"
          },
          "receiver_nationality": {
            "type": "string",
            "format": "enum",
            "nullable": true,
            "description": "Whether the invoice receiver is a Mexican national or not. If the receiver is not considered a Mexican national, the retained taxes can be calculated differently. Possible values:\n  - `NATIONAL`\n  - `FOREIGN`\n",
            "example": "NATIONAL"
          },
          "receiver_id": {
            "type": "string",
            "nullable": true,
            "description": "The fiscal ID of the invoice receiver.\n",
            "example": "GYGK3207809L1"
          },
          "receiver_name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the invoice receiver.\n",
            "example": "ACME LTD"
          },
          "total_invoice_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total amount of the invoice that the tax retention relates to.\n",
            "example": 53249.8
          },
          "total_exempt_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Total amount that is exempt from taxation.\n",
            "example": 1000.8
          },
          "total_retained_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Total tax retained.\n",
            "example": 1550.7
          },
          "total_taxable_amount": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "The total amount that can be taxed. Calculated as `total_invoice_amount` - `total_exempt_amount`.\n",
            "example": 43249
          },
          "retention_breakdown": {
            "type": "array",
            "nullable": true,
            "description": "A breakdown of the retained taxes.",
            "items": {
              "$ref": "#/components/schemas/RetentionBreakdown"
            }
          },
          "xml": {
            "type": "string",
            "format": "xml",
            "nullable": true,
            "description": "The tax retention document in XML form.\n",
            "example": "=XML-STRING="
          }
        }
      },
      "TaxRetentionsPaginatedResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of results in your Belvo account.",
            "example": 130
          },
          "next": {
            "type": "string",
            "nullable": true,
            "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.\n\nIn our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).\n",
            "example": "https://sandbox.belvo.com/api/{endpoint}/?page=2"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "description": "The URL to the previous page of results. If there is no previous page, the value is `null`.",
            "example": null
          },
          "results": {
            "type": "array",
            "description": "Array of tax retentions objects.",
            "items": {
              "$ref": "#/components/schemas/TaxRetentions"
            }
          }
        }
      },
      "TaxRetentionsRequest": {
        "type": "object",
        "required": [
          "link",
          "date_from",
          "date_to",
          "type"
        ],
        "properties": {
          "link": {
            "type": "string",
            "format": "uuid",
            "description": "The `link.id` that you want to get information for.\n",
            "example": "9e432f18-36ca-4bd6-a3f3-1971e58dc1e8"
          },
          "date_from": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date from which you want to start getting tax retentions for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The value of `date_from` cannot be greater than `date_to`.\n",
            "example": "2020-01-01"
          },
          "date_to": {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
            "description": "The date you want to stop getting tax retentions for, in `YYYY-MM-DD` format.\n\n‚ö†Ô∏è The number of days between `date_from` and `date_to` cannot be over 365.\n",
            "example": "2020-02-01"
          },
          "type": {
            "type": "string",
            "description": "The type of tax retention in relation to the invoice (from the perspective of the Link owner).\n\n- `OUTFLOW` relates to a tax retention for a sent invoice.\n- `INFLOW` related to a tax retention for a received invoice.\n",
            "enum": [
              "OUTFLOW",
              "INFLOW"
            ]
          },
          "attach_xml": {
            "type": "boolean",
            "default": true,
            "description": "When set to `true`, you will receive the XML tax retention in the response."
          },
          "save_data": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to `true` and we return a 201 Created response.\nWhen set to `false`, the data won't be persisted and we return a 200 OK response."
          }
        }
      }
    },
    "examples": {
      "AccountsBankingChecking": {
        "summary": "Checking Account",
        "description": "Example of a checking account.",
        "value": [
          {
            "id": "c21f3914-bcbe-44c4-a2e8-a5e33f6888d4",
            "link": "57f212dc-1ba4-407f-b7f0-15a5e5ff17ae",
            "institution": {
              "name": "erebor_mx_retail",
              "type": "bank"
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "category": "CHECKING_ACCOUNT",
            "balance_type": "ASSET",
            "type": "Cuentas de efectivo",
            "name": "Cuenta Perfiles- M.N.- - ERB-237",
            "number": "2180700688677950",
            "balance": {
              "available": 4523.48,
              "current": 4523.48
            },
            "currency": "MXN",
            "bank_product_id": null,
            "internal_identification": null,
            "public_identification_name": "CLABE",
            "public_identification_value": "2180700008677950",
            "last_accessed_at": "2022-02-01T20:25:47.307911Z",
            "credit_data": null,
            "loan_data": null,
            "funds_data": null,
            "gig_payment_data": null
          }
        ]
      },
      "AccountsBankingCreditCard": {
        "summary": "Credit Card Account",
        "description": "Example of a credit card account.",
        "value": [
          {
            "id": "0f82c5db-13a2-43c7-a69a-e036160aba3a",
            "link": "57f212dc-1ba4-407f-b7f0-15a5e5ff17ae",
            "institution": {
              "name": "erebor_mx_retail",
              "type": "bank"
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "category": "CREDIT_CARD",
            "balance_type": "LIABILITY",
            "type": "Tarjetas de cr√©dito",
            "name": "Erebor Gold",
            "number": null,
            "balance": {
              "available": 1550.15,
              "current": 4049.85
            },
            "currency": "MXN",
            "bank_product_id": null,
            "internal_identification": null,
            "public_identification_name": null,
            "public_identification_value": null,
            "last_accessed_at": "2022-02-01T20:25:47.307911Z",
            "credit_data": {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "credit_limit": 15600,
              "cutting_date": "2021-04-11",
              "next_payment_date": "2021-03-31",
              "minimum_payment": 690,
              "no_interest_payment": 11550.15,
              "interest_rate": 4,
              "monthly_payment": null,
              "last_payment_date": null,
              "last_period_balance": null
            },
            "loan_data": null,
            "funds_data": null,
            "gig_payment_data": null
          }
        ]
      },
      "AccountsBankingLoan": {
        "summary": "Loan Account",
        "description": "Example of a loan account.",
        "value": [
          {
            "id": "0f82c5db-13a2-43c7-a69a-e036160aba3a",
            "link": "57f212dc-1ba4-407f-b7f0-15a5e5ff17ae",
            "institution": {
              "name": "erebor_mx_retail",
              "type": "bank"
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "category": "LOAN_ACCOUNT",
            "balance_type": "LIABILITY",
            "type": "Cr√©ditos",
            "name": "Cuenta n√≥mina",
            "number": "72964044",
            "balance": {
              "available": 34708.36,
              "current": 34708.36
            },
            "currency": "MXN",
            "bank_product_id": null,
            "internal_identification": null,
            "public_identification_name": "ACCOUNT_NUMBER",
            "public_identification_value": "217035843284091420",
            "last_accessed_at": "2022-02-01T20:25:47.307911Z",
            "credit_data": null,
            "loan_data": {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "loan_type": "SFH",
              "contract_amount": 202000,
              "principal": 192000,
              "outstanding_principal": 142000,
              "outstanding_balance": 164000,
              "payment_day": "17",
              "interest_rates": [
                {
                  "name": "jurosEfetivo",
                  "type": "MONTHLY",
                  "value": 7.85
                }
              ],
              "fees": [
                {
                  "type": "OPERATION_FEE",
                  "value": 5.6
                }
              ],
              "monthly_payment": 1000,
              "number_of_installments_total": 50,
              "number_of_installments_outstanding": 41,
              "contract_start_date": "2018-01-01",
              "contract_end_date": "2027-10-01",
              "contract_number": "ER8072930097"
            },
            "funds_data": null,
            "gig_payment_data": null
          }
        ]
      },
      "AccountsBankingPension": {
        "summary": "Pension Account",
        "description": "Example of a pension account.",
        "value": [
          {
            "id": "3d5b0f90-90df-455d-a647-5b74feb746f6",
            "link": "fbbb5ea7-4605-437f-b5c5-667fd037a303",
            "institution": {
              "name": "erebor_br_retail",
              "type": "bank"
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "category": "PENSION_FUND_ACCOUNT",
            "balance_type": "ASSET",
            "type": "Contas",
            "name": "Conta corrente",
            "number": "37903487",
            "balance": {
              "available": 26305.33,
              "current": 26305.33
            },
            "currency": "BRL",
            "bank_product_id": null,
            "internal_identification": null,
            "public_identification_name": "PENSION_PLAN_ID",
            "public_identification_value": "626249048387247512",
            "last_accessed_at": "2021-03-09T08:19:05.000Z",
            "credit_data": null,
            "loan_data": null,
            "funds_data": [
              {
                "collected_at": "2022-02-09T08:45:50.406032Z",
                "name": "CICLO DE VIDA 2040 I",
                "type": "PGBL",
                "balance": "94793",
                "percentage": "9",
                "public_identifications": [
                  {
                    "name": "CNPJ",
                    "value": "11.233.333/4424-01"
                  },
                  {
                    "name": "SUSEP",
                    "value": "13311.2333222/3333-44"
                  }
                ]
              },
              {
                "collected_at": "2022-02-09T08:45:50.406032Z",
                "name": "CICLO DE VIDA 2020 I",
                "type": "PGBL",
                "balance": "50834",
                "percentage": "91",
                "public_identifications": [
                  {
                    "name": "CNPJ",
                    "value": "11.222.333/4444-02"
                  },
                  {
                    "name": "SUSEP",
                    "value": "11111.222222/3333-44"
                  }
                ]
              }
            ],
            "gig_payment_data": null
          }
        ]
      },
      "AccountsBankingSavings": {
        "summary": "Savings Account",
        "description": "Example of a savings account.",
        "value": [
          {
            "id": "3d5b0f90-90df-455d-a647-5b74feb746f6",
            "link": "fbbb5ea7-4605-437f-b5c5-667fd037a303",
            "institution": {
              "name": "erebor_co_retail",
              "type": "bank"
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "category": "SAVINGS_ACCOUNT",
            "balance_type": "ASSET",
            "type": "Cuenta de Ahorro",
            "name": "Cuenta de Ahorro",
            "number": "13166008",
            "balance": {
              "available": 4978436.05,
              "current": 4978436.05
            },
            "currency": "COP",
            "bank_product_id": null,
            "internal_identification": null,
            "public_identification_name": "ACCOUNT_NUMBER",
            "public_identification_value": "260825906",
            "last_accessed_at": "2021-03-09T10:28:40.000Z",
            "credit_data": null,
            "loan_data": null,
            "funds_data": null,
            "gig_payment_data": null
          }
        ]
      },
      "AccountsBankingCheckingDetail": {
        "summary": "Checking Account",
        "description": "Example of a checking account.",
        "value": {
          "id": "c21f3914-bcbe-44c4-a2e8-a5e33f6888d4",
          "link": "57f212dc-1ba4-407f-b7f0-15a5e5ff17ae",
          "institution": {
            "name": "erebor_mx_retail",
            "type": "bank"
          },
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "category": "CHECKING_ACCOUNT",
          "balance_type": "ASSET",
          "type": "Cuentas de efectivo",
          "name": "Cuenta Perfiles- M.N.- - ERB-237",
          "number": "2180700688677950",
          "balance": {
            "available": 4523.48,
            "current": 4523.48
          },
          "currency": "MXN",
          "bank_product_id": null,
          "internal_identification": null,
          "public_identification_name": "CLABE",
          "public_identification_value": "2180700008677950",
          "last_accessed_at": "2022-02-01T20:25:47.307911Z",
          "credit_data": null,
          "loan_data": null,
          "funds_data": null,
          "gig_payment_data": null
        }
      },
      "AccountsBankingCreditCardDetail": {
        "summary": "Credit Card Account",
        "description": "Example of a credit card account.",
        "value": {
          "id": "0f82c5db-13a2-43c7-a69a-e036160aba3a",
          "link": "57f212dc-1ba4-407f-b7f0-15a5e5ff17ae",
          "institution": {
            "name": "erebor_mx_retail",
            "type": "bank"
          },
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "category": "CREDIT_CARD",
          "balance_type": "LIABILITY",
          "type": "Tarjetas de cr√©dito",
          "name": "Erebor Gold",
          "number": null,
          "balance": {
            "available": 1550.15,
            "current": 4049.85
          },
          "currency": "MXN",
          "bank_product_id": null,
          "internal_identification": null,
          "public_identification_name": null,
          "public_identification_value": null,
          "last_accessed_at": "2022-02-01T20:25:47.307911Z",
          "credit_data": {
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "credit_limit": 15600,
            "cutting_date": "2021-04-11",
            "next_payment_date": "2021-03-31",
            "minimum_payment": 690,
            "no_interest_payment": 11550.15,
            "interest_rate": 4,
            "monthly_payment": null,
            "last_payment_date": null,
            "last_period_balance": null
          },
          "loan_data": null,
          "funds_data": null,
          "gig_payment_data": null
        }
      },
      "AccountsBankingLoanDetail": {
        "summary": "Loan Account",
        "description": "Example of a loan account.",
        "value": {
          "id": "0f82c5db-13a2-43c7-a69a-e036160aba3a",
          "link": "57f212dc-1ba4-407f-b7f0-15a5e5ff17ae",
          "institution": {
            "name": "erebor_mx_retail",
            "type": "bank"
          },
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "category": "LOAN_ACCOUNT",
          "balance_type": "LIABILITY",
          "type": "Cr√©ditos",
          "name": "Cuenta n√≥mina",
          "number": "72964044",
          "balance": {
            "available": 34708.36,
            "current": 34708.36
          },
          "currency": "MXN",
          "bank_product_id": null,
          "internal_identification": null,
          "public_identification_name": "ACCOUNT_NUMBER",
          "public_identification_value": "217035843284091420",
          "last_accessed_at": "2022-02-01T20:25:47.307911Z",
          "credit_data": null,
          "loan_data": {
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "loan_type": "SFH",
            "contract_amount": 202000,
            "principal": 192000,
            "outstanding_principal": 142000,
            "outstanding_balance": 164000,
            "payment_day": "17",
            "interest_rates": [
              {
                "name": "jurosEfetivo",
                "type": "MONTHLY",
                "value": 7.85
              }
            ],
            "fees": [
              {
                "type": "OPERATION_FEE",
                "value": 5.6
              }
            ],
            "monthly_payment": 1000,
            "number_of_installments_total": 50,
            "number_of_installments_outstanding": 41,
            "contract_start_date": "2018-01-01",
            "contract_end_date": "2027-10-01",
            "contract_number": "ER8072930097"
          },
          "funds_data": null,
          "gig_payment_data": null
        }
      },
      "AccountsBankingPensionDetail": {
        "summary": "Pension Account",
        "description": "Example of a pension account.",
        "value": {
          "id": "3d5b0f90-90df-455d-a647-5b74feb746f6",
          "link": "fbbb5ea7-4605-437f-b5c5-667fd037a303",
          "institution": {
            "name": "erebor_br_retail",
            "type": "bank"
          },
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "category": "PENSION_FUND_ACCOUNT",
          "balance_type": "ASSET",
          "type": "Contas",
          "name": "Conta corrente",
          "number": "37903487",
          "balance": {
            "available": 26305.33,
            "current": 26305.33
          },
          "currency": "BRL",
          "bank_product_id": null,
          "internal_identification": null,
          "public_identification_name": "PENSION_PLAN_ID",
          "public_identification_value": "626249048387247512",
          "last_accessed_at": "2021-03-09T08:19:05.000Z",
          "credit_data": null,
          "loan_data": null,
          "funds_data": [
            {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "name": "CICLO DE VIDA 2040 I",
              "type": "PGBL",
              "balance": "94793",
              "percentage": "9",
              "public_identifications": [
                {
                  "name": "CNPJ",
                  "value": "11.233.333/4424-01"
                },
                {
                  "name": "SUSEP",
                  "value": "13311.2333222/3333-44"
                }
              ]
            },
            {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "name": "CICLO DE VIDA 2020 I",
              "type": "PGBL",
              "balance": "50834",
              "percentage": "91",
              "public_identifications": [
                {
                  "name": "CNPJ",
                  "value": "11.222.333/4444-02"
                },
                {
                  "name": "SUSEP",
                  "value": "11111.222222/3333-44"
                }
              ]
            }
          ],
          "gig_payment_data": null
        }
      },
      "AccountsBankingSavingsDetail": {
        "summary": "Savings Account",
        "description": "Example of a savings account.",
        "value": {
          "id": "3d5b0f90-90df-455d-a647-5b74feb746f6",
          "link": "fbbb5ea7-4605-437f-b5c5-667fd037a303",
          "institution": {
            "name": "erebor_co_retail",
            "type": "bank"
          },
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "category": "SAVINGS_ACCOUNT",
          "balance_type": "ASSET",
          "type": "Cuenta de Ahorro",
          "name": "Cuenta de Ahorro",
          "number": "13166008",
          "balance": {
            "available": 4978436.05,
            "current": 4978436.05
          },
          "currency": "COP",
          "bank_product_id": null,
          "internal_identification": null,
          "public_identification_name": "ACCOUNT_NUMBER",
          "public_identification_value": "260825906",
          "last_accessed_at": "2021-03-09T10:28:40.000Z",
          "credit_data": null,
          "loan_data": null,
          "funds_data": null,
          "gig_payment_data": null
        }
      },
      "TransactionsCheckingPaginated": {
        "summary": "Checking Account Transaction",
        "description": "An example of a checking account transaction",
        "value": {
          "count": 198,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "e5588958-48f2-427c-9300-945207532f5d",
              "account": {
                "id": "02589c41-ba22-4d44-8558-8111cc751318",
                "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                "institution": {
                  "name": "erebor_mx_retail",
                  "type": "bank"
                },
                "collected_at": "2022-02-09T08:45:50.406032Z",
                "created_at": "2022-02-09T08:46:20.406032Z",
                "internal_identification": "996685090015",
                "name": "CUENTA NARANJA LITE +",
                "number": "996685090015",
                "type": "CUENTA NARANJA LITE +",
                "category": "CHECKING_ACCOUNT",
                "bank_product_id": "46",
                "public_identification_name": "CLABE",
                "public_identification_value": "058597000010485108",
                "currency": "MXN",
                "balance": {
                  "current": 0,
                  "available": 0
                },
                "loan_data": null,
                "credit_data": null,
                "last_accessed_at": null,
                "balance_type": "ASSET"
              },
              "created_at": "2022-07-20T22:09:35.556519Z",
              "category": null,
              "merchant": null,
              "type": "INFLOW",
              "amount": 932.5,
              "status": "UNCATEGORIZED",
              "balance": null,
              "currency": "MXN",
              "reference": "085904452810319225",
              "value_date": "2022-07-11",
              "description": "Transferencia interbancaria",
              "collected_at": "2022-07-20T22:09:33.767574Z",
              "observations": null,
              "accounting_date": null,
              "internal_identification": "LCzHexIyHi"
            }
          ]
        }
      },
      "TransactionsSavingsPaginated": {
        "summary": "Savings Account Transaction",
        "description": "An example of a savings account transaction",
        "value": {
          "count": 198,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "e5588958-48f2-427c-9300-945207532f5d",
              "account": {
                "id": "02589c41-ba22-4d44-8558-8111cc751318",
                "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                "institution": {
                  "name": "erebor_mx_retail",
                  "type": "bank"
                },
                "collected_at": "2022-02-09T08:45:50.406032Z",
                "created_at": "2022-02-09T08:46:20.406032Z",
                "internal_identification": "996685090015",
                "name": "Mi ahorro Erebor",
                "number": "997468860036",
                "type": null,
                "category": "SAVINGS_ACCOUNT",
                "bank_product_id": null,
                "public_identification_name": "CLABE",
                "public_identification_value": "058597000011543422",
                "currency": "MXN",
                "balance": {
                  "current": 4.09,
                  "available": 4.09
                },
                "loan_data": null,
                "credit_data": null,
                "last_accessed_at": null,
                "balance_type": "ASSET"
              },
              "created_at": "2022-07-20T22:09:35.556519Z",
              "category": null,
              "merchant": null,
              "type": "INFLOW",
              "amount": 4.09,
              "status": "UNCATEGORIZED",
              "balance": null,
              "currency": "MXN",
              "reference": null,
              "value_date": "2022-07-11",
              "description": "Interes",
              "collected_at": "2022-07-20T22:09:33.767574Z",
              "observations": null,
              "accounting_date": null,
              "internal_identification": 89608418
            }
          ]
        }
      },
      "TransactionsCreditCardPaginated": {
        "summary": "Credit Card Transaction",
        "description": "An example of a credit card transaction",
        "value": {
          "count": 198,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "account": {
                "id": "02589c41-ba22-4d44-8558-8111cc751318",
                "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
                "institution": {
                  "name": "erebor_mx_retail",
                  "type": "bank"
                },
                "collected_at": "2022-02-09T08:45:50.406032Z",
                "created_at": "2022-02-09T08:46:20.406032Z",
                "category": "CREDIT_CARD",
                "type": "Tarjetas de cr√©dito",
                "name": "Erebor Gold",
                "number": null,
                "balance": {
                  "current": 5874.13,
                  "available": 5621.12
                },
                "currency": "MXN",
                "bank_product_id": null,
                "internal_identification": null,
                "public_identification_name": null,
                "public_identification_value": null,
                "last_accessed_at": "2021-03-09T10:28:40.000Z",
                "balance_type": "LIABILITY",
                "credit_data": {
                  "credit_limit": 192000,
                  "collected_at": "2022-02-09T08:45:50.406032Z",
                  "cutting_date": "2019-12-11",
                  "next_payment_date": "2019-12-01",
                  "minimum_payment": 2400,
                  "no_interest_payment": 37390.83,
                  "monthly_payment": null,
                  "end_date": null,
                  "last_payment_date": null,
                  "last_period_balance": null,
                  "interest_rate": 4
                },
                "loan_data": null,
                "funds_data": null,
                "gig_payment_data": null
              },
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "value_date": "2019-10-23",
              "accounting_date": "2019-10-23T13:01:41.941Z",
              "amount": 2145.45,
              "balance": 16907.96,
              "currency": "MXN",
              "description": "SEVEN BUDDHAS RFC:XXXXXXXXXX",
              "observations": "OPTIONAL OBSERVATIONS",
              "merchant": {
                "logo": "https://logo.clearbit.com/asesor-contable.es",
                "website": "https://merchants-r-us.com",
                "merchant_name": "Merchants R Us Global"
              },
              "category": "Food & Groceries",
              "reference": "8703",
              "type": "OUTFLOW",
              "status": "PROCESSED",
              "gig_data": null,
              "credit_card_data": {
                "bill_name": "apr-2020",
                "previous_bill_total": "2000.00",
                "collected_at": "2022-02-09T08:45:50.406032Z"
              }
            }
          ]
        }
      },
      "TransactionsChecking": {
        "summary": "Checking Account Transaction",
        "description": "An example of a checking account transaction",
        "value": [
          {
            "id": "e5588958-48f2-427c-9300-945207532f5d",
            "account": {
              "id": "02589c41-ba22-4d44-8558-8111cc751318",
              "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
              "institution": {
                "name": "erebor_mx_retail",
                "type": "bank"
              },
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "internal_identification": "996685090015",
              "name": "CUENTA NARANJA LITE +",
              "number": "996685090015",
              "type": "CUENTA NARANJA LITE +",
              "category": "CHECKING_ACCOUNT",
              "bank_product_id": "46",
              "public_identification_name": "CLABE",
              "public_identification_value": "058597000010485108",
              "currency": "MXN",
              "balance": {
                "current": 0,
                "available": 0
              },
              "loan_data": null,
              "credit_data": null,
              "last_accessed_at": null,
              "balance_type": "ASSET"
            },
            "created_at": "2022-07-20T22:09:35.556519Z",
            "category": null,
            "merchant": null,
            "type": "INFLOW",
            "amount": 932.5,
            "status": "UNCATEGORIZED",
            "balance": null,
            "currency": "MXN",
            "reference": "085904452810319225",
            "value_date": "2022-07-11",
            "description": "Transferencia interbancaria",
            "collected_at": "2022-07-20T22:09:33.767574Z",
            "observations": null,
            "accounting_date": null,
            "internal_identification": "LCzHexIyHi"
          }
        ]
      },
      "TransactionsSavings": {
        "summary": "Savings Account Transaction",
        "description": "An example of a savings account transaction",
        "value": [
          {
            "id": "e5588958-48f2-427c-9300-945207532f5d",
            "account": {
              "id": "02589c41-ba22-4d44-8558-8111cc751318",
              "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
              "institution": {
                "name": "erebor_mx_retail",
                "type": "bank"
              },
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "internal_identification": "996685090015",
              "name": "Mi ahorro Erebor",
              "number": "997468860036",
              "type": null,
              "category": "SAVINGS_ACCOUNT",
              "bank_product_id": null,
              "public_identification_name": "CLABE",
              "public_identification_value": "058597000011543422",
              "currency": "MXN",
              "balance": {
                "current": 4.09,
                "available": 4.09
              },
              "loan_data": null,
              "credit_data": null,
              "last_accessed_at": null,
              "balance_type": "ASSET"
            },
            "created_at": "2022-07-20T22:09:35.556519Z",
            "category": null,
            "merchant": null,
            "type": "INFLOW",
            "amount": 4.09,
            "status": "UNCATEGORIZED",
            "balance": null,
            "currency": "MXN",
            "reference": null,
            "value_date": "2022-07-11",
            "description": "Interes",
            "collected_at": "2022-07-20T22:09:33.767574Z",
            "observations": null,
            "accounting_date": null,
            "internal_identification": 89608418
          }
        ]
      },
      "TransactionsCreditCard": {
        "summary": "Credit Card Transaction",
        "description": "An example of a credit card transaction",
        "value": [
          {
            "id": "9e432f18-36ca-4bd6-a3f3-1971e58dc1e8",
            "account": {
              "id": "02589c41-ba22-4d44-8558-8111cc751318",
              "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
              "institution": {
                "name": "erebor_mx_retail",
                "type": "bank"
              },
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "category": "CREDIT_CARD",
              "type": "Tarjetas de cr√©dito",
              "name": "Erebor Gold",
              "number": null,
              "balance": {
                "current": 5874.13,
                "available": 5621.12
              },
              "currency": "MXN",
              "bank_product_id": null,
              "internal_identification": null,
              "public_identification_name": null,
              "public_identification_value": null,
              "last_accessed_at": "2021-03-09T10:28:40.000Z",
              "balance_type": "LIABILITY",
              "credit_data": {
                "credit_limit": 192000,
                "collected_at": "2022-02-09T08:45:50.406032Z",
                "cutting_date": "2019-12-11",
                "next_payment_date": "2019-12-01",
                "minimum_payment": 2400,
                "no_interest_payment": 37390.83,
                "monthly_payment": null,
                "end_date": null,
                "last_payment_date": null,
                "last_period_balance": null,
                "interest_rate": 4
              },
              "loan_data": null,
              "funds_data": null,
              "gig_payment_data": null
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "value_date": "2019-10-23",
            "accounting_date": "2019-10-23T13:01:41.941Z",
            "amount": 2145.45,
            "balance": 16907.96,
            "currency": "MXN",
            "description": "SEVEN BUDDHAS RFC:XXXXXXXXXX",
            "observations": "OPTIONAL OBSERVATIONS",
            "merchant": {
              "logo": "https://logo.clearbit.com/asesor-contable.es",
              "website": "https://merchants-r-us.com",
              "merchant_name": "Merchants R Us Global"
            },
            "category": "Food & Groceries",
            "reference": "8703",
            "type": "OUTFLOW",
            "status": "PROCESSED",
            "gig_data": null,
            "credit_card_data": {
              "bill_name": "apr-2020",
              "previous_bill_total": "2000.00",
              "collected_at": "2022-02-09T08:45:50.406032Z"
            }
          }
        ]
      },
      "TransactionsCheckingDetail": {
        "summary": "Checking Account Transaction",
        "description": "An example of a checking account transaction",
        "value": {
          "id": "e5588958-48f2-427c-9300-945207532f5d",
          "account": {
            "id": "02589c41-ba22-4d44-8558-8111cc751318",
            "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
            "institution": {
              "name": "erebor_mx_retail",
              "type": "bank"
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "internal_identification": "996685090015",
            "name": "CUENTA NARANJA LITE +",
            "number": "996685090015",
            "type": "CUENTA NARANJA LITE +",
            "category": "CHECKING_ACCOUNT",
            "bank_product_id": "46",
            "public_identification_name": "CLABE",
            "public_identification_value": "058597000010485108",
            "currency": "MXN",
            "balance": {
              "current": 0,
              "available": 0
            },
            "loan_data": null,
            "credit_data": null,
            "last_accessed_at": null,
            "balance_type": "ASSET"
          },
          "created_at": "2022-07-20T22:09:35.556519Z",
          "category": null,
          "merchant": null,
          "type": "INFLOW",
          "amount": 932.5,
          "status": "UNCATEGORIZED",
          "balance": null,
          "currency": "MXN",
          "reference": "085904452810319225",
          "value_date": "2022-07-11",
          "description": "Transferencia interbancaria",
          "collected_at": "2022-07-20T22:09:33.767574Z",
          "observations": null,
          "accounting_date": null,
          "internal_identification": "LCzHexIyHi"
        }
      },
      "TransactionsSavingsDetail": {
        "summary": "Savings Account Transaction",
        "description": "An example of a savings account transaction",
        "value": {
          "id": "e5588958-48f2-427c-9300-945207532f5d",
          "account": {
            "id": "02589c41-ba22-4d44-8558-8111cc751318",
            "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
            "institution": {
              "name": "erebor_mx_retail",
              "type": "bank"
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "internal_identification": "996685090015",
            "name": "Mi ahorro Erebor",
            "number": "997468860036",
            "type": null,
            "category": "SAVINGS_ACCOUNT",
            "bank_product_id": null,
            "public_identification_name": "CLABE",
            "public_identification_value": "058597000011543422",
            "currency": "MXN",
            "balance": {
              "current": 4.09,
              "available": 4.09
            },
            "loan_data": null,
            "credit_data": null,
            "last_accessed_at": null,
            "balance_type": "ASSET"
          },
          "created_at": "2022-07-20T22:09:35.556519Z",
          "category": null,
          "merchant": null,
          "type": "INFLOW",
          "amount": 4.09,
          "status": "UNCATEGORIZED",
          "balance": null,
          "currency": "MXN",
          "reference": null,
          "value_date": "2022-07-11",
          "description": "Interes",
          "collected_at": "2022-07-20T22:09:33.767574Z",
          "observations": null,
          "accounting_date": null,
          "internal_identification": 89608418
        }
      },
      "TransactionsCreditCardDetail": {
        "summary": "Credit Card Transaction",
        "description": "An example of a credit card transaction",
        "value": {
          "id": "9e432f18-36ca-4bd6-a3f3-1971e58dc1e8",
          "account": {
            "id": "02589c41-ba22-4d44-8558-8111cc751318",
            "link": "30cb4806-6e00-48a4-91c9-ca55968576c8",
            "institution": {
              "name": "erebor_mx_retail",
              "type": "bank"
            },
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "category": "CREDIT_CARD",
            "type": "Tarjetas de cr√©dito",
            "name": "Erebor Gold",
            "number": null,
            "balance": {
              "current": 5874.13,
              "available": 5621.12
            },
            "currency": "MXN",
            "bank_product_id": null,
            "internal_identification": null,
            "public_identification_name": null,
            "public_identification_value": null,
            "last_accessed_at": "2021-03-09T10:28:40.000Z",
            "balance_type": "LIABILITY",
            "credit_data": {
              "credit_limit": 192000,
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "cutting_date": "2019-12-11",
              "next_payment_date": "2019-12-01",
              "minimum_payment": 2400,
              "no_interest_payment": 37390.83,
              "monthly_payment": null,
              "end_date": null,
              "last_payment_date": null,
              "last_period_balance": null,
              "interest_rate": 4
            },
            "loan_data": null,
            "funds_data": null,
            "gig_payment_data": null
          },
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "value_date": "2019-10-23",
          "accounting_date": "2019-10-23T13:01:41.941Z",
          "amount": 2145.45,
          "balance": 16907.96,
          "currency": "MXN",
          "description": "SEVEN BUDDHAS RFC:XXXXXXXXXX",
          "observations": "OPTIONAL OBSERVATIONS",
          "merchant": {
            "logo": "https://logo.clearbit.com/asesor-contable.es",
            "website": "https://merchants-r-us.com",
            "merchant_name": "Merchants R Us Global"
          },
          "category": "Food & Groceries",
          "reference": "8703",
          "type": "OUTFLOW",
          "status": "PROCESSED",
          "gig_data": null,
          "credit_card_data": {
            "bill_name": "apr-2020",
            "previous_bill_total": "2000.00",
            "collected_at": "2022-02-09T08:45:50.406032Z"
          }
        }
      },
      "BalancesExamplePaginated": {
        "summary": "Balance Example (Checking Account)",
        "description": "Example of a balance paginated response.",
        "value": {
          "count": 385,
          "next": "https://sandbox.belvo.com/api/balances/?page=2",
          "previous": null,
          "results": [
            {
              "id": "b834e69b-1aa4-465d-969c-07c886a4fbed",
              "account": {
                "id": "26428311-7108-40b8-a22b-c310187dd005",
                "link": "b834e69b-1aa4-465d-969c-07c886a4fbed",
                "institution": {
                  "name": "erebor_br_retail",
                  "type": "bank"
                },
                "created_at": "2021-10-27T16:18:15.591647Z",
                "name": "Erebor Gold",
                "type": null,
                "agency": "0009",
                "number": "7889044-1",
                "balance": {
                  "current": 146.81,
                  "available": 146.81
                },
                "category": "CHECKING_ACCOUNT",
                "currency": "BRL",
                "loan_data": null,
                "credit_data": null,
                "balance_type": "ASSET",
                "collected_at": "2022-06-17T03:20:41.300075Z",
                "bank_product_id": null,
                "last_accessed_at": null,
                "internal_identification": "9fa5fab9-e2b7-4bd7-8413-71ed9bb94b4c",
                "public_identification_name": "AGENCY/ACCOUNT",
                "public_identification_value": "0009/7889044-1"
              },
              "collected_at": "2022-04-06T23:30:51.282174+00:00",
              "statement": null,
              "value_date": "2022-04-04",
              "current_balance": 4.25,
              "balance": 4.25
            }
          ]
        }
      },
      "BalancesExample": {
        "summary": "Balance Example (Checking Account)",
        "description": "Example of a balance response.",
        "value": [
          {
            "id": "b834e69b-1aa4-465d-969c-07c886a4fbed",
            "account": {
              "id": "26428311-7108-40b8-a22b-c310187dd005",
              "link": "b834e69b-1aa4-465d-969c-07c886a4fbed",
              "institution": {
                "name": "erebor_br_retail",
                "type": "bank"
              },
              "created_at": "2021-10-27T16:18:15.591647Z",
              "name": "Erebor Gold",
              "type": null,
              "agency": "0009",
              "number": "7889044-1",
              "balance": {
                "current": 146.81,
                "available": 146.81
              },
              "category": "CHECKING_ACCOUNT",
              "currency": "BRL",
              "loan_data": null,
              "credit_data": null,
              "balance_type": "ASSET",
              "collected_at": "2022-06-17T03:20:41.300075Z",
              "bank_product_id": null,
              "last_accessed_at": null,
              "internal_identification": "9fa5fab9-e2b7-4bd7-8413-71ed9bb94b4c",
              "public_identification_name": "AGENCY/ACCOUNT",
              "public_identification_value": "0009/7889044-1"
            },
            "collected_at": "2022-04-06T23:30:51.282174+00:00",
            "statement": null,
            "value_date": "2022-04-04",
            "current_balance": 4.25,
            "balance": 4.25
          }
        ]
      },
      "BalancesExampleDetail": {
        "summary": "Balance Example (Checking Account)",
        "description": "Example of a balance response.",
        "value": {
          "id": "b834e69b-1aa4-465d-969c-07c886a4fbed",
          "account": {
            "id": "26428311-7108-40b8-a22b-c310187dd005",
            "link": "b834e69b-1aa4-465d-969c-07c886a4fbed",
            "institution": {
              "name": "erebor_br_retail",
              "type": "bank"
            },
            "created_at": "2021-10-27T16:18:15.591647Z",
            "name": "Erebor Gold",
            "type": null,
            "agency": "0009",
            "number": "7889044-1",
            "balance": {
              "current": 146.81,
              "available": 146.81
            },
            "category": "CHECKING_ACCOUNT",
            "currency": "BRL",
            "loan_data": null,
            "credit_data": null,
            "balance_type": "ASSET",
            "collected_at": "2022-06-17T03:20:41.300075Z",
            "bank_product_id": null,
            "last_accessed_at": null,
            "internal_identification": "9fa5fab9-e2b7-4bd7-8413-71ed9bb94b4c",
            "public_identification_name": "AGENCY/ACCOUNT",
            "public_identification_value": "0009/7889044-1"
          },
          "collected_at": "2022-04-06T23:30:51.282174+00:00",
          "statement": null,
          "value_date": "2022-04-04",
          "current_balance": 4.25,
          "balance": 4.25
        }
      },
      "OwnerBankingAccountPaginated": {
        "summary": "Banking",
        "description": "An example of a banking account owner.",
        "value": {
          "count": 108,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "link": "c38fb126-fc98-4d6c-8c80-587a97dd56cf",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "display_name": "Maria Martinez Martin",
              "first_name": null,
              "last_name": null,
              "second_last_name": null,
              "email": "maria@acme.com",
              "phone_number": "90090508357",
              "address": "Retorno Gran Canaria 453 723\nCancun, COL 10447",
              "document_id": {
                "document_type": "CPF",
                "document_number": "235578435-S"
              },
              "internal_identification": null,
              "gig_data": null
            }
          ]
        }
      },
      "OwnerBankingAccount": {
        "summary": "Banking",
        "description": "An example of a banking account owner.",
        "value": [
          {
            "id": "2b22f123-7c3a-4518-9ac2-863eb5d4613c",
            "link": "c38fb126-fc98-4d6c-8c80-587a97dd56cf",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "display_name": "Maria Martinez Martin",
            "first_name": null,
            "last_name": null,
            "second_last_name": null,
            "email": "maria@acme.com",
            "phone_number": "90090508357",
            "address": "Retorno Gran Canaria 453 723\nCancun, COL 10447",
            "document_id": {
              "document_type": "CPF",
              "document_number": "235578435-S"
            },
            "internal_identification": null,
            "gig_data": null
          }
        ]
      },
      "OwnerBankingAccountDetail": {
        "summary": "Banking",
        "description": "An example of a banking account owner.",
        "value": {
          "id": "2b22f123-7c3a-4518-9ac2-863eb5d4613c",
          "link": "c38fb126-fc98-4d6c-8c80-587a97dd56cf",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "display_name": "Maria Martinez Martin",
          "first_name": null,
          "last_name": null,
          "second_last_name": null,
          "email": "maria@acme.com",
          "phone_number": "90090508357",
          "address": "Retorno Gran Canaria 453 723\nCancun, COL 10447",
          "document_id": {
            "document_type": "CPF",
            "document_number": "235578435-S"
          },
          "internal_identification": null,
          "gig_data": null
        }
      },
      "InvoiceIngresoPaginated": {
        "summary": "Invoice Ingreso",
        "description": "Example of an *Igreso* type invoice.",
        "value": {
          "count": 110,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
              "link": "1bd948f7-245d-4313-b604-34d1044cb908",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
              "invoice_date": "2020-12-24",
              "status": "Vigente",
              "invoice_type": "Ingreso",
              "type": "OUTFLOW",
              "sender_id": "GHTF980303F7",
              "sender_name": "Roberto Martinez Diaz",
              "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "receiver_id": "MNMK3203409H1",
              "receiver_name": "ACNE SA DE CV",
              "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "cancelation_status": null,
              "cancelation_update_date": null,
              "certification_date": "2020-12-24",
              "certification_authority": "FGV330542BG6",
              "payment_type": "04",
              "payment_type_description": null,
              "payment_method": "PUE",
              "usage": "G03",
              "place_of_issue": "11000",
              "version": "3.3",
              "invoice_details": [
                {
                  "description": "Servicios de mensajer√≠a.",
                  "product_identification": "78102206",
                  "quantity": 1,
                  "unit_code": "E48",
                  "unit_description": "Unidad de servicio",
                  "unit_amount": 25,
                  "pre_tax_amount": 25,
                  "tax_percentage": 16,
                  "tax_amount": 4,
                  "total_amount": 29,
                  "retained_taxes": [],
                  "collected_at": "2022-02-09T08:45:50.406032Z"
                }
              ],
              "currency": "MXN",
              "subtotal_amount": 25,
              "exchange_rate": 1,
              "tax_amount": 4,
              "discount_amount": 0,
              "total_amount": 29,
              "payments": [],
              "payroll": null,
              "folio": "28",
              "xml": "=XML-STRING=",
              "warnings": {
                "code": "warning_code",
                "message": "warning message"
              }
            }
          ]
        }
      },
      "InvoicePagoPaginated": {
        "summary": "Invoice Pago",
        "description": "Example of a *Pago* type invoice.",
        "value": {
          "count": 110,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
              "link": "1bd948f7-245d-4313-b604-34d1044cb908",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
              "invoice_date": "2020-12-24",
              "status": "Vigente",
              "invoice_type": "Pago",
              "type": "OUTFLOW",
              "sender_id": "GHTF980303F7",
              "sender_name": "Roberto Martinez Diaz",
              "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "receiver_id": "MNMK3203409H1",
              "receiver_name": "ACNE SA DE CV",
              "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "cancelation_status": null,
              "cancelation_update_date": null,
              "certification_date": "2020-12-24",
              "certification_authority": "FGV330542BG6",
              "payment_type": null,
              "payment_type_description": null,
              "payment_method": null,
              "usage": "P01",
              "place_of_issue": "11000",
              "version": "3.3",
              "invoice_details": [
                {
                  "description": "Pago",
                  "product_identification": "84111506",
                  "quantity": 1,
                  "unit_amount": 0,
                  "unit_code": "ACT",
                  "unit_description": null,
                  "pre_tax_amount": 0,
                  "tax_percentage": 0,
                  "tax_amount": 0,
                  "total_amount": 0,
                  "retained_taxes": [],
                  "collected_at": "2022-02-09T08:45:50.406032Z"
                }
              ],
              "currency": "MXN",
              "subtotal_amount": 0,
              "exchange_rate": null,
              "tax_amount": 0,
              "discount_amount": 0,
              "total_amount": 0,
              "payments": [
                {
                  "date": "2020-03-17T12:00:00.000Z",
                  "payment_type": "03",
                  "currency": "BRL",
                  "exchange_rate": "3.75",
                  "amount": 8000.5,
                  "operation_number": "831840",
                  "beneficiary_rfc": "BNM840515VB1",
                  "beneficiary_account_number": "12343453245633",
                  "payer_rfc": "BKJM840515VB1",
                  "payer_account_number": "13343663245699",
                  "payer_bank_name": "CITI BANAMEX",
                  "related_documents": [
                    {
                      "invoice_identification": "7EE015F3-6311-11EA-B02A-00155D014007",
                      "currency": "MXN",
                      "payment_method": "PPD",
                      "installment": 1,
                      "previous_balance": 18877.84,
                      "amount_paid": 8000,
                      "outstanding_balance": 10877.84
                    }
                  ]
                }
              ],
              "payroll": null,
              "folio": "28",
              "xml": "=XML-STRING=",
              "warnings": {
                "code": "warning_code",
                "message": "warning message"
              }
            }
          ]
        }
      },
      "InvoiceNominaPaginated": {
        "summary": "Invoice Nomina",
        "description": "Example of a *Nomina* type invoice.",
        "value": {
          "count": 110,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
              "link": "1bd948f7-245d-4313-b604-34d1044cb908",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
              "invoice_date": "2020-12-24",
              "status": "Vigente",
              "invoice_type": "N√≥mina",
              "type": "INFLOW",
              "sender_id": "GHTF980303F7",
              "sender_name": "ACNE SA DE CV",
              "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "receiver_id": "MNMK3203409H1",
              "receiver_name": "Roberto Martinez Diaz",
              "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "cancelation_status": null,
              "cancelation_update_date": null,
              "certification_date": "2020-12-24",
              "certification_authority": "FGV330542BG6",
              "payment_type": "99",
              "payment_type_description": null,
              "payment_method": "PUE",
              "usage": "P01",
              "place_of_issue": "11000",
              "version": "3.3",
              "invoice_details": [
                {
                  "description": "Pago de n√≥mina",
                  "product_identification": "84111505",
                  "quantity": 1,
                  "unit_code": "ACT",
                  "unit_description": null,
                  "unit_amount": 20400.1,
                  "total_amount": 20400.1,
                  "pre_tax_amount": 20400.1,
                  "tax_percentage": 0,
                  "tax_amount": 0,
                  "retained_taxes": [],
                  "collected_at": "2022-02-09T08:45:50.406032Z"
                }
              ],
              "currency": "MXN",
              "subtotal_amount": 20400.1,
              "exchange_rate": 1,
              "tax_amount": 0,
              "discount_amount": 5000,
              "total_amount": 15400.1,
              "payments": [],
              "payroll": {
                "days": 30,
                "type": "O",
                "amount": 20400.1,
                "date_to": "2020-12-31",
                "version": "1.2",
                "date_from": "2020-12-01",
                "collected_at": "2022-02-09T08:45:50.406032Z",
                "payment_date": "2020-12-24"
              },
              "folio": "28",
              "xml": "=XML-STRING=",
              "warnings": {
                "code": "warning_code",
                "message": "warning message"
              }
            }
          ]
        }
      },
      "InvoiceEgresoPaginated": {
        "summary": "Invoice Egreso",
        "description": "Example of an *Egreso* type invoice.",
        "value": {
          "count": 110,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
              "link": "1bd948f7-245d-4313-b604-34d1044cb908",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
              "invoice_date": "2020-12-24",
              "status": "Vigente",
              "invoice_type": "Egreso",
              "type": "INFLOW",
              "sender_id": "GHTF980303F7",
              "sender_name": "Roberto Martinez Diaz",
              "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "receiver_id": "MNMK3203409H1",
              "receiver_name": "ACNE SA DE CV",
              "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "cancelation_status": null,
              "cancelation_update_date": null,
              "certification_date": "2020-12-24",
              "certification_authority": "FGV330542BG6",
              "payment_type": "04",
              "payment_type_description": null,
              "payment_method": "PUE",
              "usage": "G03",
              "place_of_issue": "11000",
              "version": "3.3",
              "invoice_details": [
                {
                  "product_identification": "78111500",
                  "description": "Reembolso del servicio",
                  "unit_code": "E48",
                  "unit_description": "Unidad de servicio",
                  "quantity": 1,
                  "unit_amount": 25,
                  "pre_tax_amount": 25,
                  "tax_percentage": 16,
                  "tax_amount": 4,
                  "total_amount": 29,
                  "retained_taxes": [],
                  "collected_at": "2022-02-09T08:45:50.406032Z"
                }
              ],
              "currency": "MXN",
              "subtotal_amount": 25,
              "exchange_rate": 1,
              "tax_amount": 4,
              "discount_amount": 0,
              "total_amount": 29,
              "payments": [],
              "payroll": null,
              "folio": "28",
              "xml": "=XML-STRING=",
              "warnings": {
                "code": "warning_code",
                "message": "warning message"
              }
            }
          ]
        }
      },
      "InvoiceTrasladoPaginated": {
        "summary": "Invoice Traslado",
        "description": "Example of a *Traslado* type invoice.",
        "value": {
          "count": 110,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
              "link": "1bd948f7-245d-4313-b604-34d1044cb908",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
              "invoice_date": "2020-12-24",
              "status": "Vigente",
              "invoice_type": "Traslado",
              "type": "INFLOW",
              "sender_id": "GHTF980303F7",
              "sender_name": "ACNE SA DE CV",
              "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "receiver_id": "MNMK3203409H1",
              "receiver_name": "CARGOS S.A. DE C.V.",
              "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
              "cancelation_status": null,
              "cancelation_update_date": null,
              "certification_date": "2020-12-24",
              "certification_authority": "FGV330542BG6",
              "payment_type": null,
              "payment_type_description": null,
              "payment_method": null,
              "usage": "G03",
              "place_of_issue": "11000",
              "version": "3.3",
              "invoice_details": [
                {
                  "description": "FLETE",
                  "product_identification": "78101802",
                  "quantity": 1,
                  "unit_code": "E48",
                  "unit_description": "Unidad de servicio",
                  "unit_amount": 21000,
                  "pre_tax_amount": 21000,
                  "tax_percentage": 16,
                  "tax_amount": 0,
                  "total_amount": 21000,
                  "retained_taxes": [],
                  "collected_at": "2022-02-09T08:45:50.406032Z"
                }
              ],
              "currency": "MXN",
              "subtotal_amount": 0,
              "exchange_rate": 1,
              "tax_amount": 0,
              "discount_amount": 0,
              "total_amount": 0,
              "payments": [],
              "payroll": null,
              "folio": "28",
              "xml": "=XML-STRING=",
              "warnings": {
                "code": "warning_code",
                "message": "warning message"
              }
            }
          ]
        }
      },
      "InvoiceIngreso": {
        "summary": "Invoice Ingreso",
        "description": "Example of an *Igreso* type invoice.",
        "value": [
          {
            "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
            "link": "1bd948f7-245d-4313-b604-34d1044cb908",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
            "invoice_date": "2020-12-24",
            "status": "Vigente",
            "invoice_type": "Ingreso",
            "type": "OUTFLOW",
            "sender_id": "GHTF980303F7",
            "sender_name": "Roberto Martinez Diaz",
            "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "receiver_id": "MNMK3203409H1",
            "receiver_name": "ACNE SA DE CV",
            "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "cancelation_status": null,
            "cancelation_update_date": null,
            "certification_date": "2020-12-24",
            "certification_authority": "FGV330542BG6",
            "payment_type": "04",
            "payment_type_description": null,
            "payment_method": "PUE",
            "usage": "G03",
            "place_of_issue": "11000",
            "version": "3.3",
            "invoice_details": [
              {
                "description": "Servicios de mensajer√≠a.",
                "product_identification": "78102206",
                "quantity": 1,
                "unit_code": "E48",
                "unit_description": "Unidad de servicio",
                "unit_amount": 25,
                "pre_tax_amount": 25,
                "tax_percentage": 16,
                "tax_amount": 4,
                "total_amount": 29,
                "retained_taxes": [],
                "collected_at": "2022-02-09T08:45:50.406032Z"
              }
            ],
            "currency": "MXN",
            "subtotal_amount": 25,
            "exchange_rate": 1,
            "tax_amount": 4,
            "discount_amount": 0,
            "total_amount": 29,
            "payments": [],
            "payroll": null,
            "folio": "28",
            "xml": "=XML-STRING=",
            "warnings": {
              "code": "warning_code",
              "message": "warning message"
            }
          }
        ]
      },
      "InvoicePago": {
        "summary": "Invoice Pago",
        "description": "Example of a *Pago* type invoice.",
        "value": [
          {
            "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
            "link": "1bd948f7-245d-4313-b604-34d1044cb908",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
            "invoice_date": "2020-12-24",
            "status": "Vigente",
            "invoice_type": "Pago",
            "type": "OUTFLOW",
            "sender_id": "GHTF980303F7",
            "sender_name": "Roberto Martinez Diaz",
            "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "receiver_id": "MNMK3203409H1",
            "receiver_name": "ACNE SA DE CV",
            "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "cancelation_status": null,
            "cancelation_update_date": null,
            "certification_date": "2020-12-24",
            "certification_authority": "FGV330542BG6",
            "payment_type": null,
            "payment_type_description": null,
            "payment_method": null,
            "usage": "P01",
            "place_of_issue": "11000",
            "version": "3.3",
            "invoice_details": [
              {
                "description": "Pago",
                "product_identification": "84111506",
                "quantity": 1,
                "unit_amount": 0,
                "unit_code": "ACT",
                "unit_description": null,
                "pre_tax_amount": 0,
                "tax_percentage": 0,
                "tax_amount": 0,
                "total_amount": 0,
                "retained_taxes": [],
                "collected_at": "2022-02-09T08:45:50.406032Z"
              }
            ],
            "currency": "MXN",
            "subtotal_amount": 0,
            "exchange_rate": null,
            "tax_amount": 0,
            "discount_amount": 0,
            "total_amount": 0,
            "payments": [
              {
                "date": "2020-03-17T12:00:00.000Z",
                "payment_type": "03",
                "currency": "BRL",
                "exchange_rate": "3.75",
                "amount": 8000.5,
                "operation_number": "831840",
                "beneficiary_rfc": "BNM840515VB1",
                "beneficiary_account_number": "12343453245633",
                "payer_rfc": "BKJM840515VB1",
                "payer_account_number": "13343663245699",
                "payer_bank_name": "CITI BANAMEX",
                "related_documents": [
                  {
                    "invoice_identification": "7EE015F3-6311-11EA-B02A-00155D014007",
                    "currency": "MXN",
                    "payment_method": "PPD",
                    "installment": 1,
                    "previous_balance": 18877.84,
                    "amount_paid": 8000,
                    "outstanding_balance": 10877.84
                  }
                ]
              }
            ],
            "payroll": null,
            "folio": "28",
            "xml": "=XML-STRING=",
            "warnings": {
              "code": "warning_code",
              "message": "warning message"
            }
          }
        ]
      },
      "InvoiceNomina": {
        "summary": "Invoice Nomina",
        "description": "Example of a *Nomina* type invoice.",
        "value": [
          {
            "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
            "link": "1bd948f7-245d-4313-b604-34d1044cb908",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
            "invoice_date": "2020-12-24",
            "status": "Vigente",
            "invoice_type": "N√≥mina",
            "type": "INFLOW",
            "sender_id": "GHTF980303F7",
            "sender_name": "ACNE SA DE CV",
            "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "receiver_id": "MNMK3203409H1",
            "receiver_name": "Roberto Martinez Diaz",
            "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "cancelation_status": null,
            "cancelation_update_date": null,
            "certification_date": "2020-12-24",
            "certification_authority": "FGV330542BG6",
            "payment_type": "99",
            "payment_type_description": null,
            "payment_method": "PUE",
            "usage": "P01",
            "place_of_issue": "11000",
            "version": "3.3",
            "invoice_details": [
              {
                "description": "Pago de n√≥mina",
                "product_identification": "84111505",
                "quantity": 1,
                "unit_code": "ACT",
                "unit_description": null,
                "unit_amount": 20400.1,
                "total_amount": 20400.1,
                "pre_tax_amount": 20400.1,
                "tax_percentage": 0,
                "tax_amount": 0,
                "retained_taxes": [],
                "collected_at": "2022-02-09T08:45:50.406032Z"
              }
            ],
            "currency": "MXN",
            "subtotal_amount": 20400.1,
            "exchange_rate": 1,
            "tax_amount": 0,
            "discount_amount": 5000,
            "total_amount": 15400.1,
            "payments": [],
            "payroll": {
              "days": 30,
              "type": "O",
              "amount": 20400.1,
              "date_to": "2020-12-31",
              "version": "1.2",
              "date_from": "2020-12-01",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "payment_date": "2020-12-24"
            },
            "folio": "28",
            "xml": "=XML-STRING=",
            "warnings": {
              "code": "warning_code",
              "message": "warning message"
            }
          }
        ]
      },
      "InvoiceEgreso": {
        "summary": "Invoice Egreso",
        "description": "Example of an *Egreso* type invoice.",
        "value": [
          {
            "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
            "link": "1bd948f7-245d-4313-b604-34d1044cb908",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
            "invoice_date": "2020-12-24",
            "status": "Vigente",
            "invoice_type": "Egreso",
            "type": "INFLOW",
            "sender_id": "GHTF980303F7",
            "sender_name": "Roberto Martinez Diaz",
            "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "receiver_id": "MNMK3203409H1",
            "receiver_name": "ACNE SA DE CV",
            "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "cancelation_status": null,
            "cancelation_update_date": null,
            "certification_date": "2020-12-24",
            "certification_authority": "FGV330542BG6",
            "payment_type": "04",
            "payment_type_description": null,
            "payment_method": "PUE",
            "usage": "G03",
            "place_of_issue": "11000",
            "version": "3.3",
            "invoice_details": [
              {
                "product_identification": "78111500",
                "description": "Reembolso del servicio",
                "unit_code": "E48",
                "unit_description": "Unidad de servicio",
                "quantity": 1,
                "unit_amount": 25,
                "pre_tax_amount": 25,
                "tax_percentage": 16,
                "tax_amount": 4,
                "total_amount": 29,
                "retained_taxes": [],
                "collected_at": "2022-02-09T08:45:50.406032Z"
              }
            ],
            "currency": "MXN",
            "subtotal_amount": 25,
            "exchange_rate": 1,
            "tax_amount": 4,
            "discount_amount": 0,
            "total_amount": 29,
            "payments": [],
            "payroll": null,
            "folio": "28",
            "xml": "=XML-STRING=",
            "warnings": {
              "code": "warning_code",
              "message": "warning message"
            }
          }
        ]
      },
      "InvoiceTraslado": {
        "summary": "Invoice Traslado",
        "description": "Example of a *Traslado* type invoice.",
        "value": [
          {
            "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
            "link": "1bd948f7-245d-4313-b604-34d1044cb908",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
            "invoice_date": "2020-12-24",
            "status": "Vigente",
            "invoice_type": "Traslado",
            "type": "INFLOW",
            "sender_id": "GHTF980303F7",
            "sender_name": "ACNE SA DE CV",
            "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "receiver_id": "MNMK3203409H1",
            "receiver_name": "CARGOS S.A. DE C.V.",
            "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
            "cancelation_status": null,
            "cancelation_update_date": null,
            "certification_date": "2020-12-24",
            "certification_authority": "FGV330542BG6",
            "payment_type": null,
            "payment_type_description": null,
            "payment_method": null,
            "usage": "G03",
            "place_of_issue": "11000",
            "version": "3.3",
            "invoice_details": [
              {
                "description": "FLETE",
                "product_identification": "78101802",
                "quantity": 1,
                "unit_code": "E48",
                "unit_description": "Unidad de servicio",
                "unit_amount": 21000,
                "pre_tax_amount": 21000,
                "tax_percentage": 16,
                "tax_amount": 0,
                "total_amount": 21000,
                "retained_taxes": [],
                "collected_at": "2022-02-09T08:45:50.406032Z"
              }
            ],
            "currency": "MXN",
            "subtotal_amount": 0,
            "exchange_rate": 1,
            "tax_amount": 0,
            "discount_amount": 0,
            "total_amount": 0,
            "payments": [],
            "payroll": null,
            "folio": "28",
            "xml": "=XML-STRING=",
            "warnings": {
              "code": "warning_code",
              "message": "warning message"
            }
          }
        ]
      },
      "InvoiceIngresoDetail": {
        "summary": "Invoice Ingreso",
        "description": "Example of an *Igreso* type invoice.",
        "value": {
          "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
          "link": "1bd948f7-245d-4313-b604-34d1044cb908",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
          "invoice_date": "2020-12-24",
          "status": "Vigente",
          "invoice_type": "Ingreso",
          "type": "OUTFLOW",
          "sender_id": "GHTF980303F7",
          "sender_name": "Roberto Martinez Diaz",
          "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "receiver_id": "MNMK3203409H1",
          "receiver_name": "ACNE SA DE CV",
          "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "cancelation_status": null,
          "cancelation_update_date": null,
          "certification_date": "2020-12-24",
          "certification_authority": "FGV330542BG6",
          "payment_type": "04",
          "payment_type_description": null,
          "payment_method": "PUE",
          "usage": "G03",
          "place_of_issue": "11000",
          "version": "3.3",
          "invoice_details": [
            {
              "description": "Servicios de mensajer√≠a.",
              "product_identification": "78102206",
              "quantity": 1,
              "unit_code": "E48",
              "unit_description": "Unidad de servicio",
              "unit_amount": 25,
              "pre_tax_amount": 25,
              "tax_percentage": 16,
              "tax_amount": 4,
              "total_amount": 29,
              "retained_taxes": [],
              "collected_at": "2022-02-09T08:45:50.406032Z"
            }
          ],
          "currency": "MXN",
          "subtotal_amount": 25,
          "exchange_rate": 1,
          "tax_amount": 4,
          "discount_amount": 0,
          "total_amount": 29,
          "payments": [],
          "payroll": null,
          "folio": "28",
          "xml": "=XML-STRING=",
          "warnings": {
            "code": "warning_code",
            "message": "warning message"
          }
        }
      },
      "InvoicePagoDetail": {
        "summary": "Invoice Pago",
        "description": "Example of a *Pago* type invoice.",
        "value": {
          "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
          "link": "1bd948f7-245d-4313-b604-34d1044cb908",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
          "invoice_date": "2020-12-24",
          "status": "Vigente",
          "invoice_type": "Pago",
          "type": "OUTFLOW",
          "sender_id": "GHTF980303F7",
          "sender_name": "Roberto Martinez Diaz",
          "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "receiver_id": "MNMK3203409H1",
          "receiver_name": "ACNE SA DE CV",
          "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "cancelation_status": null,
          "cancelation_update_date": null,
          "certification_date": "2020-12-24",
          "certification_authority": "FGV330542BG6",
          "payment_type": null,
          "payment_type_description": null,
          "payment_method": null,
          "usage": "P01",
          "place_of_issue": "11000",
          "version": "3.3",
          "invoice_details": [
            {
              "description": "Pago",
              "product_identification": "84111506",
              "quantity": 1,
              "unit_amount": 0,
              "unit_code": "ACT",
              "unit_description": null,
              "pre_tax_amount": 0,
              "tax_percentage": 0,
              "tax_amount": 0,
              "total_amount": 0,
              "retained_taxes": [],
              "collected_at": "2022-02-09T08:45:50.406032Z"
            }
          ],
          "currency": "MXN",
          "subtotal_amount": 0,
          "exchange_rate": null,
          "tax_amount": 0,
          "discount_amount": 0,
          "total_amount": 0,
          "payments": [
            {
              "date": "2020-03-17T12:00:00.000Z",
              "payment_type": "03",
              "currency": "BRL",
              "exchange_rate": "3.75",
              "amount": 8000.5,
              "operation_number": "831840",
              "beneficiary_rfc": "BNM840515VB1",
              "beneficiary_account_number": "12343453245633",
              "payer_rfc": "BKJM840515VB1",
              "payer_account_number": "13343663245699",
              "payer_bank_name": "CITI BANAMEX",
              "related_documents": [
                {
                  "invoice_identification": "7EE015F3-6311-11EA-B02A-00155D014007",
                  "currency": "MXN",
                  "payment_method": "PPD",
                  "installment": 1,
                  "previous_balance": 18877.84,
                  "amount_paid": 8000,
                  "outstanding_balance": 10877.84
                }
              ]
            }
          ],
          "payroll": null,
          "folio": "28",
          "xml": "=XML-STRING=",
          "warnings": {
            "code": "warning_code",
            "message": "warning message"
          }
        }
      },
      "InvoiceNominaDetail": {
        "summary": "Invoice Nomina",
        "description": "Example of a *Nomina* type invoice.",
        "value": {
          "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
          "link": "1bd948f7-245d-4313-b604-34d1044cb908",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
          "invoice_date": "2020-12-24",
          "status": "Vigente",
          "invoice_type": "N√≥mina",
          "type": "INFLOW",
          "sender_id": "GHTF980303F7",
          "sender_name": "ACNE SA DE CV",
          "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "receiver_id": "MNMK3203409H1",
          "receiver_name": "Roberto Martinez Diaz",
          "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "cancelation_status": null,
          "cancelation_update_date": null,
          "certification_date": "2020-12-24",
          "certification_authority": "FGV330542BG6",
          "payment_type": "99",
          "payment_type_description": null,
          "payment_method": "PUE",
          "usage": "P01",
          "place_of_issue": "11000",
          "version": "3.3",
          "invoice_details": [
            {
              "description": "Pago de n√≥mina",
              "product_identification": "84111505",
              "quantity": 1,
              "unit_code": "ACT",
              "unit_description": null,
              "unit_amount": 20400.1,
              "total_amount": 20400.1,
              "pre_tax_amount": 20400.1,
              "tax_percentage": 0,
              "tax_amount": 0,
              "retained_taxes": [],
              "collected_at": "2022-02-09T08:45:50.406032Z"
            }
          ],
          "currency": "MXN",
          "subtotal_amount": 20400.1,
          "exchange_rate": 1,
          "tax_amount": 0,
          "discount_amount": 5000,
          "total_amount": 15400.1,
          "payments": [],
          "payroll": {
            "days": 30,
            "type": "O",
            "amount": 20400.1,
            "date_to": "2020-12-31",
            "version": "1.2",
            "date_from": "2020-12-01",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "payment_date": "2020-12-24"
          },
          "folio": "28",
          "xml": "=XML-STRING=",
          "warnings": {
            "code": "warning_code",
            "message": "warning message"
          }
        }
      },
      "InvoiceEgresoDetail": {
        "summary": "Invoice Egreso",
        "description": "Example of an *Egreso* type invoice.",
        "value": {
          "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
          "link": "1bd948f7-245d-4313-b604-34d1044cb908",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
          "invoice_date": "2020-12-24",
          "status": "Vigente",
          "invoice_type": "Egreso",
          "type": "INFLOW",
          "sender_id": "GHTF980303F7",
          "sender_name": "Roberto Martinez Diaz",
          "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "receiver_id": "MNMK3203409H1",
          "receiver_name": "ACNE SA DE CV",
          "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "cancelation_status": null,
          "cancelation_update_date": null,
          "certification_date": "2020-12-24",
          "certification_authority": "FGV330542BG6",
          "payment_type": "04",
          "payment_type_description": null,
          "payment_method": "PUE",
          "usage": "G03",
          "place_of_issue": "11000",
          "version": "3.3",
          "invoice_details": [
            {
              "product_identification": "78111500",
              "description": "Reembolso del servicio",
              "unit_code": "E48",
              "unit_description": "Unidad de servicio",
              "quantity": 1,
              "unit_amount": 25,
              "pre_tax_amount": 25,
              "tax_percentage": 16,
              "tax_amount": 4,
              "total_amount": 29,
              "retained_taxes": [],
              "collected_at": "2022-02-09T08:45:50.406032Z"
            }
          ],
          "currency": "MXN",
          "subtotal_amount": 25,
          "exchange_rate": 1,
          "tax_amount": 4,
          "discount_amount": 0,
          "total_amount": 29,
          "payments": [],
          "payroll": null,
          "folio": "28",
          "xml": "=XML-STRING=",
          "warnings": {
            "code": "warning_code",
            "message": "warning message"
          }
        }
      },
      "InvoiceTrasladoDetail": {
        "summary": "Invoice Traslado",
        "description": "Example of a *Traslado* type invoice.",
        "value": {
          "id": "90d90e38-0087-4b6d-b6dc-94ea561bb9cb",
          "link": "1bd948f7-245d-4313-b604-34d1044cb908",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "invoice_identification": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840",
          "invoice_date": "2020-12-24",
          "status": "Vigente",
          "invoice_type": "Traslado",
          "type": "INFLOW",
          "sender_id": "GHTF980303F7",
          "sender_name": "ACNE SA DE CV",
          "sender_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "receiver_id": "MNMK3203409H1",
          "receiver_name": "CARGOS S.A. DE C.V.",
          "receiver_tax_fraud_status": "NO_TAX_FRAUD_STATUS",
          "cancelation_status": null,
          "cancelation_update_date": null,
          "certification_date": "2020-12-24",
          "certification_authority": "FGV330542BG6",
          "payment_type": null,
          "payment_type_description": null,
          "payment_method": null,
          "usage": "G03",
          "place_of_issue": "11000",
          "version": "3.3",
          "invoice_details": [
            {
              "description": "FLETE",
              "product_identification": "78101802",
              "quantity": 1,
              "unit_code": "E48",
              "unit_description": "Unidad de servicio",
              "unit_amount": 21000,
              "pre_tax_amount": 21000,
              "tax_percentage": 16,
              "tax_amount": 0,
              "total_amount": 21000,
              "retained_taxes": [],
              "collected_at": "2022-02-09T08:45:50.406032Z"
            }
          ],
          "currency": "MXN",
          "subtotal_amount": 0,
          "exchange_rate": 1,
          "tax_amount": 0,
          "discount_amount": 0,
          "total_amount": 0,
          "payments": [],
          "payroll": null,
          "folio": "28",
          "xml": "=XML-STRING=",
          "warnings": {
            "code": "warning_code",
            "message": "warning message"
          }
        }
      },
      "TaxReturnPersonalListPaginated": {
        "summary": "Tax Return Personal",
        "description": "Example of a list of personal tax returns",
        "value": {
          "count": 101,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "02589c41-ba22-4d44-8558-8111cc751318",
              "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "informacion_general": {
                "ejercicio": 2018,
                "fecha_hora_presentacion": "2020-01-07T17:28:00-05:00",
                "numero_operacion": "00000000001",
                "periodo_declaracion": "Del Ejercicio",
                "rfc": "ABCD111111A11",
                "tipo_declaracion": "Normal",
                "nombre": "JOHN DOE"
              },
              "sueldos_salarios": {
                "retenedores": [
                  {
                    "rfc_retenedor": "ABCD222222A22",
                    "nombre_denominacion_razon_social": "ACME CORP",
                    "ingresos_exentos": 118263,
                    "ingreso_anual": 2265,
                    "subsidio_empleo": 0
                  }
                ],
                "impuesto_retenido": 19497,
                "ingreso_anual": 118263,
                "ingresos_acumulables": 115998,
                "ingresos_exentos": 2265,
                "subsidio_empleo": 0
              },
              "servicios_profesionales": {
                "deducciones_autorizadas": {
                  "deducciones_autorizadas": 11870,
                  "otras_deducciones": null,
                  "detalle_deducciones": [
                    {
                      "tipo_deduccion": "GASTOS",
                      "concepto": "GASOLINA Y MANTENIMIENTO DE TRANSPORTE",
                      "monto_detallado": 9682
                    },
                    {
                      "tipo_deduccion": "GASTOS",
                      "concepto": "COMPRAS Y GASTOS GENERALES",
                      "monto_detallado": 2188
                    }
                  ],
                  "total_deducciones_autorizadas": 11870
                },
                "ingresos": {
                  "ingresos_acumulables": 46000,
                  "ingresos_exentos": null,
                  "otros_ingresos": null,
                  "total_ingresos": 46000
                },
                "resultado_fiscal": {
                  "utilidad_fiscal": 34130,
                  "ptu_pagada_ejercicio": 0,
                  "perdidas_fiscales_ejercicios_anteriores_aplicadas": 0,
                  "utilidad_gravable": 34130
                },
                "pagos_provisionales": {
                  "pagos_provisionales_efectuados_en_ejercicio": 0
                },
                "retenciones_isr": {
                  "isr_retenido_personas_morales": 4600
                }
              },
              "deducciones_personales": {
                "honorarios_medicos_dentales_hospitalarios": [
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC444444A44",
                    "monto_deducible": 1000
                  },
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC444444A44",
                    "monto_deducible": 502.34
                  },
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC333333A33",
                    "monto_deducible": 258.83
                  },
                  {
                    "rfc_emisor": "ABC444444A55",
                    "monto_deducible": 14183.1
                  },
                  {
                    "rfc_emisor": "ABC444444A66",
                    "monto_deducible": 1658
                  },
                  {
                    "rfc_emisor": "ABC444444A77",
                    "monto_deducible": 1600
                  },
                  {
                    "rfc_emisor": "ABC444444A88",
                    "monto_deducible": 1064
                  },
                  {
                    "rfc_emisor": "ABC444444A99",
                    "monto_deducible": 927.57
                  }
                ],
                "donativos": [
                  {
                    "rfc_emisor": "ABC555555A99",
                    "monto_deducible": 10.03
                  }
                ],
                "aportaciones_voluntarias_complementarias_al_sar": [
                  {
                    "rfc_emisor": "ABC666666A99",
                    "monto_deducible": 12.03
                  },
                  {
                    "rfc_emisor": "ABC777777A99",
                    "monto_deducible": 87.22
                  }
                ],
                "primas_por_seguros_de_gasto_medico": [
                  {
                    "rfc_emisor": "ABC777777A99",
                    "monto_deducible": 20.03
                  }
                ]
              },
              "determinacion_impuesto": {
                "base_gravable": 126864,
                "deducciones_personales": 23264,
                "ingresos_acumulables": 150128,
                "isr_favorable": 10308,
                "isr_conforme_tarifa_final": 13789,
                "isr_retenido": 24097,
                "num_clabe": "000000000000000001",
                "nombre_banco": "BANCO SA",
                "pagos_provisionales": 0,
                "titular_clabe_permite_verificacion": "S√ç",
                "accion_saldo_a_favor": "DEVOLUCI√ìN"
              },
              "retenciones": {
                "sueldos_salarios": [
                  {
                    "rfc_retenedor": "ABC444444A99",
                    "monto_retenciones": 118263,
                    "retenciones_isr": 19497
                  }
                ],
                "dividendos": [],
                "servicios_profesionales": [
                  {
                    "rfc_retenedor": "ABC444444A00",
                    "monto_retenciones": 46000,
                    "retenciones_isr": 4600
                  }
                ]
              },
              "dividendos": {
                "monto_acumulable_dividendos_utilidades": null,
                "monto_total_isr_pagado_sociedad": null
              },
              "datos_informativos": {
                "credito_fiscal_autorizado_proyectos_investigacion_desarrollo": 0,
                "credito_fiscal_autorizado_proyectos_apoyo_deporte_alto_rendimiento": 0,
                "credito_fiscal_autorizado_proyectos_inversion_artes": 0,
                "credito_fiscal_autorizado_inversion_equipos_fijos": 0,
                "credito_fiscal_autorizado_produccion_distribucion_cinematografica": 0,
                "saldo_credito_fiscal_autorizado_anteriores_investigacion_desarrollo": 0,
                "saldo_credito_fiscal_anteriores_proyectos_inversion_artes": 0,
                "saldo_credito_fiscal_anteriores_produccion_distribucion_cinematografica": 0
              },
              "pdf": "=PDF-STRING=",
              "receipt_pdf": "=PDF-STRING=",
              "type": "yearly"
            },
            {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "informacion_general": {
                "rfc": null,
                "nombre": null,
                "tipo_declaracion": null,
                "ejercicio": null,
                "periodo_declaracion": null,
                "fecha_hora_presentacion": null,
                "numero_operacion": null
              },
              "isr_pfae": {
                "determinacion": {
                  "ingresos_periodos_anteriores": 0,
                  "ingresos_periodo": 0,
                  "total_ingresos": 0,
                  "compras_gastos_periodos_anteriores": 1596,
                  "compra_gastos_periodo": 399,
                  "total_compras_gastos": 1995,
                  "base_gravable_pago_provisional": 0,
                  "isr_causado": 0,
                  "pagos_provisionales_efectuados_anterioridad": 0,
                  "isr_retenido_periodos_anteriores": 0,
                  "impuesto_retenido": 0,
                  "isr_cargo": 0
                },
                "detalle_del_pago": {
                  "a_cargo": 0,
                  "total_contribuciones": 0,
                  "total_aplicaciones": 0,
                  "cantidad_a_cargo": 0,
                  "cantidad_a_pagar": 0
                }
              },
              "iva": {
                "determinacion": {
                  "actividades_gravadas_tasa_16": 0,
                  "actividades_gravadas_tasa_0": 0,
                  "actividades_exentas": 0,
                  "iva_cobrado_periodo_tasa_16": 0,
                  "iva_acreditable_periodo": 0,
                  "iva_retenido": 0,
                  "saldo_a_favor": null,
                  "impuesto_a_favor": null
                },
                "detalle_del_pago": {
                  "total_contribuciones": 0,
                  "total_aplicaciones": 0,
                  "cantidad_a_cargo": 0,
                  "cantidad_a_pagar": 0,
                  "a_favor": null
                }
              },
              "pdf": "===PDF_BINARY====",
              "receipt_pdf": "===PDF_BINARY====",
              "type": "monthly"
            }
          ]
        }
      },
      "TaxReturnPersonalListMonthlyPaginatedPFAE": {
        "summary": "Tax Return Personal Monthly (PFAe)",
        "description": "Example of a list of PFAE-type monthly personal tax returns",
        "value": {
          "count": 101,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "informacion_general": {
                "rfc": null,
                "nombre": null,
                "tipo_declaracion": null,
                "ejercicio": null,
                "periodo_declaracion": null,
                "fecha_hora_presentacion": null,
                "numero_operacion": null
              },
              "isr": {
                "tipo": "PFAE",
                "determinacion": {
                  "ingresos_periodos_anteriores": 0,
                  "ingresos_periodo": 0,
                  "total_ingresos": 0,
                  "compras_gastos_periodos_anteriores": 1596,
                  "compra_gastos_periodo": 399,
                  "total_compras_gastos": 1995,
                  "base_gravable_pago_provisional": 0,
                  "isr_causado": 0,
                  "pagos_provisionales_efectuados_anterioridad": 0,
                  "isr_retenido_periodos_anteriores": 0,
                  "impuesto_retenido": 0,
                  "isr_cargo": 0
                },
                "detalle_del_pago": {
                  "a_cargo": 0,
                  "parte_actualizada": 0,
                  "recargos": 0,
                  "total_contribuciones": 0,
                  "total_aplicaciones": 0,
                  "cantidad_a_cargo": 0,
                  "cantidad_a_pagar": 0
                }
              },
              "iva": {
                "determinacion": {
                  "actividades_gravadas_tasa_16": 0,
                  "actividades_gravadas_tasa_0": 0,
                  "actividades_exentas": 0,
                  "iva_cobrado_periodo_tasa_16": 0,
                  "iva_acreditable_periodo": 0,
                  "iva_retenido": 0,
                  "saldo_a_favor": null,
                  "impuesto_a_favor": null
                },
                "detalle_del_pago": {
                  "total_contribuciones": 0,
                  "total_aplicaciones": 0,
                  "cantidad_a_cargo": 0,
                  "cantidad_a_pagar": 0,
                  "a_favor": null
                }
              },
              "pdf": "===PDF_BINARY====",
              "receipt_pdf": "===PDF_BINARY====",
              "type": "monthly"
            }
          ]
        }
      },
      "TaxReturnPersonalListMonthlyPaginatedPFAI": {
        "summary": "Tax Return Personal Monthly (PFAI)",
        "description": "Example of a list of PFAI-type monthly personal tax returns",
        "value": {
          "count": 101,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "informacion_general": {
                "rfc": null,
                "nombre": null,
                "tipo_declaracion": null,
                "ejercicio": null,
                "periodo_declaracion": null,
                "fecha_hora_presentacion": null,
                "numero_operacion": null
              },
              "isr": {
                "tipo": "PFAE",
                "determinacion": {
                  "ingresos_periodos_anteriores": 0,
                  "ingresos_periodo": 0,
                  "total_ingresos": 0,
                  "compras_gastos_periodos_anteriores": 1596,
                  "compra_gastos_periodo": 399,
                  "total_compras_gastos": 1995,
                  "base_gravable_pago_provisional": 0,
                  "isr_causado": 0,
                  "pagos_provisionales_efectuados_anterioridad": 0,
                  "isr_retenido_periodos_anteriores": 0,
                  "impuesto_retenido": 0,
                  "isr_cargo": 0,
                  "tipo_de_deducc√≠on": "dedducc√≠on opicional",
                  "optas_por_el_c√°lculo_acumulado": "NO",
                  "deducc√≠on_opcional": 700,
                  "impuesto_predial": 0,
                  "total_deducciones_autorizadas": 700,
                  "tienes_facilidades_administrativas_o_est√≠mulos_deducibles": "NO"
                },
                "detalle_del_pago": {
                  "a_cargo": 0,
                  "parte_actualizada": 0,
                  "recargos": 0,
                  "total_contribuciones": 0,
                  "total_aplicaciones": 0,
                  "cantidad_a_cargo": 0,
                  "cantidad_a_pagar": 0
                }
              },
              "iva": {
                "determinacion": {
                  "actividades_gravadas_tasa_16": 0,
                  "actividades_gravadas_tasa_0": 0,
                  "actividades_exentas": 0,
                  "iva_cobrado_periodo_tasa_16": 0,
                  "iva_acreditable_periodo": 0,
                  "iva_retenido": 0,
                  "saldo_a_favor": null,
                  "impuesto_a_favor": null,
                  "impuesto_a_cargo": 54,
                  "cantidad_a_cargo": 54
                },
                "detalle_del_pago": {
                  "total_contribuciones": 0,
                  "total_aplicaciones": 0,
                  "cantidad_a_cargo": 0,
                  "cantidad_a_pagar": 0,
                  "a_favor": null
                }
              },
              "pdf": "===PDF_BINARY====",
              "receipt_pdf": "===PDF_BINARY====",
              "type": "monthly"
            }
          ]
        }
      },
      "TaxReturnBusinessListPaginated": {
        "summary": "Tax Return Business",
        "description": "Example of a list of business tax returns",
        "value": {
          "count": 101,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "02589c41-ba22-4d44-8558-8111cc751318",
              "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "informacion_general": {
                "ejercicio": 2018,
                "fecha_hora_presentacion": "2020-01-07T16:55:00-06:00",
                "numero_operacion": "000000000001",
                "periodo_declaracion": "Del Ejercicio",
                "rfc": "ABC1111111A1",
                "tipo_declaracion": "Normal",
                "tipo_complementaria": null,
                "denominacion_razon_social": "ACME CORP"
              },
              "datos_adicionales": {
                "indica_si_optas_por_dictaminar_tus_estados_financieros": "NO",
                "estas_obligado_a_presentar_la_informacion_sobre_tu_situacion_fiscal": "NO",
                "estas_obligado_unicamente_por_supuesto_distinto_al_de_haber_realizado_operaciones_con_residentes_extranjero": "SIN SELECCI√ìN",
                "estas_obligado_unicamente_por_supuesto_distinto_al_de_haber_realizado_operaciones_con_residentes_extranjero_inferiores_100mdp": "SIN SELECCI√ìN",
                "optas_por_presentar_informacion_sobre_tu_situacion_fiscal": "SIN SELECCI√ìN",
                "indica_si_te_dedicas_exclisivamente_a_generacion_energia_fuentes_renovables_o_cogeneracion_electricidad_eficiente": "NO"
              },
              "estado_resultados": {
                "ventas_servicios_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": 911165,
                  "total": 911165
                },
                "ventas_servicios_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "devoluciones_descuentos_bonificaciones_ventas_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "devoluciones_descuentos_bonificaciones_ventas_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "ingresos_netos": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": 911165,
                  "total": 911165
                },
                "inventario_inicial": null,
                "compras_netas_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "compras_netas_importacion": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "inventario_final": null,
                "costo_mercancias": null,
                "mano_de_obra": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "maquilas": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "gastos_indirectos_fabricacion": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "costo_ventas_servicios": null,
                "utilidad_bruta": 911165,
                "perdida_bruta": null,
                "gastos_operacion": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": 499540,
                  "total": 499540
                },
                "utilidad_operacion": 411625,
                "perdida_operacion": null,
                "intereses_devengados_a_favor_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "intereses_devengados_a_favor_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "intereses_moratorios_a_favor_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "intereses_moratorios_a_favor_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "ganancia_cambiaria": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "intereses_devengados_a_cargo_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "intereses_devengados_a_cargo_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "intereses_moratorios_a_cargo_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "intereses_moratorios_a_cargo_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "perdida_cambiaria": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "resultado_posicion_monetaria_favorable": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "resultado_posicion_monetaria_desfavorable": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "otras_operaciones_financieras_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "otras_operaciones_financieras_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "otras_operaciones_financieras": null,
                "resultado_integral_financiamiento": null,
                "otros_gastos_nacionales": null,
                "otros_gastos_extranjero": null,
                "otros_gastos": null,
                "otros_productos_nacionales": null,
                "otros_productos_extranjero": null,
                "otros_productos": null,
                "ingresos_partidas_discontinuas_extraordinarias": null,
                "gastos_partidas_discontinuas_extraordinarias": null,
                "utilidad_antes_impuesto": 411625,
                "perdida_antes_impuesto": null,
                "isr": 113002,
                "ietu": null,
                "impac": null,
                "ptu": null,
                "utilidad_participacion_subsidiaria": null,
                "perdida_participacion_subsidiaria": null,
                "efectos_reexpresion_favorables_excepto_resultado_posicion_monetaria": null,
                "efectos_reexpresion_desfavorables_excepto_resultado_posicion_monetaria": null,
                "utilidad_neta": 298623,
                "perdida_neta": null
              },
              "estado_posicion_financiera_balance": {
                "activo": {
                  "efectivo_caja_depositos_instituciones_credito_nacionales": 726644,
                  "efectivo_caja_depositos_instituciones_credito_extranjero": null,
                  "inversiones_valores_instituciones_nacionales_excepto_acciones": null,
                  "inversiones_valores_instituciones_extranjero_excepto_acciones": null,
                  "cuentas_documentos_por_cobrar_nacionales": {
                    "partes_relacionadas": null,
                    "partes_no_relacionadas": null,
                    "total": null
                  },
                  "cuentas_documentos_por_cobrar_extranjero": {
                    "partes_relacionadas": null,
                    "partes_no_relacionadas": null,
                    "total": null
                  },
                  "contribuciones_a_favor": null,
                  "inventarios": null,
                  "otros_activos_circulantes": 13277,
                  "inversiones_en_acciones_nacionales": null,
                  "inversiones_en_acciones_extranjero": null,
                  "inversiones_en_acciones_total": null,
                  "terrenos": null,
                  "construcciones": null,
                  "construcciones_en_proceso": null,
                  "maquinaria_y_equipo": null,
                  "mobiliario_y_equipo_oficina": null,
                  "equipo_de_computo": null,
                  "equipo_de_transporte": null,
                  "otros_activos_fijos": 12756,
                  "depreciacion_acumulada": -106,
                  "cargos_y_gastos_diferidos": 9319,
                  "amortizacion_acumulada": null,
                  "suma_activo": 761890
                },
                "pasivo": {
                  "cuentas_documentos_por_pagar_nacionales": {
                    "partes_relacionadas": null,
                    "partes_no_relacionadas": 268227,
                    "total": 268227
                  },
                  "cuentas_documentos_por_pagar_extranjero": {
                    "partes_relacionadas": null,
                    "partes_no_relacionadas": null,
                    "total": null
                  },
                  "contribuciones_por_pagar": 223490,
                  "anticipos_de_clientes": {
                    "partes_relacionadas": null,
                    "partes_no_relacionadas": null,
                    "total": null
                  },
                  "aportaciones_futuros_aumentos_de_capital": null,
                  "otros_pasivos": null,
                  "suma_pasivo": 491717
                },
                "capital_contable": {
                  "capital_social_proveniente_aportaciones": 10000,
                  "capital_social_proveniente_capitalizacion": null,
                  "reservas": null,
                  "otras_cuentas_capital": null,
                  "aportaciones_futuros_aumentos_de_capital": null,
                  "utilidades_acumuladas": null,
                  "utilidad_del_ejercicio": 298623,
                  "perdidas_acumuladas": -38450,
                  "perdida_del_ejercicio": null,
                  "exceso_en_actualizacion_capital": null,
                  "insuficiencia_en_actualizacion_capital": null,
                  "actualizacion_del_capital_contable": null,
                  "suma_capital_contable": 270173,
                  "suma_pasivo_mas_capital_contable": 761890
                }
              },
              "conciliacion_entre_resultado_contable_fiscal": {
                "utilidad_o_perdida_neta": 298623,
                "efectos_reexpresion": null,
                "resultado_posicion_monetaria": null,
                "utilidad_o_perdida_neta_historica": 298623,
                "ingresos_fiscales_no_contables": 95,
                "ajuste_anual_inflacion_acumulable": 95,
                "anticipos_de_clientes": null,
                "intereses_moratorios_efectivamente_cobrados": null,
                "ganancia_en_enajenacion_acciones_por_reembolso_capital": null,
                "ganancia_en_enajenacion_de_terrenos_y_activo_fijo": null,
                "inventario_acumulable_del_ejercicio": null,
                "otros_ingresos_fiscales_no_contables": null,
                "deducciones_contables_no_fiscales": 117415,
                "costo_de_ventas_contable": null,
                "depreciacion_y_amortizacion_contable": 106,
                "gastos_que_no_reunen_requisitos_fiscales": 4307,
                "isr_ietu_impac_ptu": 113002,
                "perdida_contable_enajenacion_de_acciones": null,
                "perdida_contable_enajenacion_de_activo_fijo": null,
                "perdida_en_participacion_subsidiaria": null,
                "intereses_devengados_que_exceden_valor_mercado_y_moratorios_pagados_o_no": 0,
                "otras_deducciones_contables_no_fiscales": 0,
                "deducciones_fiscales_no_contables": 0,
                "ajuste_anual_inflacion_deducible": null,
                "costo_vendido_fiscal": null,
                "deduccion_inversiones": null,
                "estimulo_fiscal_por_deduccion_inmediata_inversiones": null,
                "donacion_bienes_basicos_subsistencia_humana": 0,
                "estimulo_fiscal_contratacion_personas_discapacidad_yo_mayores": 0,
                "deduccion_impuesto_sobre_renta_retenido_personas_discapacidad_yo_mayores": 0,
                "perdida_fiscal_en_enajenacion_acciones": null,
                "perdida_fiscal_en_enajenacion_de_terrenos_y_activo_fijo": null,
                "intereses_moratorios_efectivamente_pagados": null,
                "otras_deducciones_fiscales_no_contables": null,
                "ingresos_contables_no_fiscales": null,
                "intereses_moratorios_devengados_a_favor_cobrados_o_no": null,
                "anticipos_de_clientes_ejercicios_anteriores": null,
                "saldos_a_favor_impuestos_y_su_actualizacion": null,
                "utilidad_contable_enajenacion_de_activo_fijo": null,
                "utilidad_contable_enajenacion_de_acciones": null,
                "utilidad_en_participacion_subsidiaria": null,
                "otros_ingresos_contables_no_fiscales": null,
                "utilidad_o_perdida_fiscal_antes_de_ptu": 416133
              },
              "deducciones_autorizadas": {
                "sueldos_salarios": null,
                "honorarios_pagados_a_personas_fisicas": null,
                "regalias_y_asistencia_tecnica": null,
                "donativos_otorgados": null,
                "uso_o_goce_temporal_de_bienes_pagados_a_personas_fisicas": null,
                "fletes_y_acarreos_pagados_a_parsonas_fisicas": null,
                "contribuciones_pagadas_excepto_isr_ietu_impac_iva_ieps": null,
                "seguros_fianzas": null,
                "perdida_por_creditos_incobrables": null,
                "viaticos_y_gastos_viaje": 59527,
                "combustible_y_lubricantes": null,
                "credito_al_salario_no_disminuido_de_contribuciones": null,
                "aportaciones_sar_infonavit_y_jubilaciones_vejez": null,
                "aportaciones_para_fondos_de_pensiones_y_jubilaciones": null,
                "cuotas_imss": null,
                "consumos_en_restaurantes": 11254,
                "perdida_por_operaciones_financieras_derivadas": null,
                "deduccion_por_concepto_de_ayuda_alimentaria_para_trabajadores": null,
                "monto_total_pagos_que_sean_ingresos_exentos_para_trabajador": null,
                "monto_deducible_al_47_pagos_son_ingresos_exentos_para_trabajador": null,
                "monto_deducible_al_53_pagos_son_ingresos_exentos_para_trabajador": null,
                "uso_o_goce_temporal_de_automoviles_baterias_electricas_o_electricos_con_motor_combustion_o_hidrogeno": null,
                "otras_deducciones_autorizadas": 424346,
                "total_deducciones_autorizadas": 495127
              },
              "cifras_cierre_ejercicio": {
                "perdidas_fiscales_de_ejercicios_anteriores_pendientes_de_amortizar_actualiazadas": null,
                "saldo_promedio_anual_de_creditos": 142795,
                "saldo_promedio_anual_de_deudas": 144765,
                "coeficiente_de_utilidad_por_aplicar_en_ejercicio_siguiente": 0.4567,
                "porcentaje_de_participacion_consolidable": null,
                "isr_causado_en_exceso_del_impac_en_los_3_ejercicios_anteriores_pendientes_aplicar": null,
                "saldo_actualizado_de_cuenta_de_utilidad_fiscal_neta_2013_y_anteriores": null,
                "saldo_actualizado_de_cuenta_de_utilidad_fiscal_neta_a_partir_2014_y_anteriores": null,
                "saldo_actualizado_de_cuenta_de_utilidad_fiscal_reinvertida": null,
                "saldo_actualizado_de_cuenta_de_capital_de_aportacion": null,
                "saldo_de_cuenta_de_utilidad_fiscal_neta_por_inversion_en_renovables": null
              },
              "determinacion_del_impuesto_sobre_la_renta": {
                "determinacion_del_impuesto_sobre_la_renta": {
                  "total_ingresos_acumulables": 911260,
                  "total_deducciones_autorizadas_y_deduccion_inmediata_inversiones": 495126,
                  "deduccion_adicional_por_pago_servicios_personales_en_operacion_maquila": null,
                  "utilidad_o_perdida_fiscal_antes_de_ptu": 416134,
                  "ptu_pagada_en_el_ejercicio": null,
                  "utilidad_fiscal_del_ejercicio": 416134,
                  "perdidas_fiscales_de_ejercicios_anteriores_que_se_aplican_en_ejercicio": 39462,
                  "resultado_fiscal": 376672,
                  "impuesto_causado_en_ejercicio": 113002,
                  "tienes_estimulos_fiscales_a_acreditar": "SIN SELECCI√ìN",
                  "impuesto_sobre_la_renta_del_ejercicio": 113002,
                  "pagos_provisionales_efectuados_enterados_a_federacion": null,
                  "impuesto_retenido_al_contribuyente": null,
                  "impuesto_acreditable_pagado_en_extranjero": null,
                  "impuesto_acreditable_por_dividendos_o_utilidades_distribuidos": null,
                  "otras_cantidades_a_cargo": null,
                  "otras_cantidades_a_favor": null,
                  "diferencia_a_cargo": 113002,
                  "isr_a_cargo_del_ejercicio": 113002,
                  "isr_a_favor_del_ejercicio": null
                },
                "impuesto_sobre_ingresos_sujetos_a_regimenes_fiscales_preferentes": null,
                "datos_informativos_ejercicio": {
                  "monto_aplicado_del_estimulo_fiscal_de_chatarrizacion": 0,
                  "monto_deducible_de_pagos_efectuados_por_uso_o_goce_temporal_automoviles": 0,
                  "impac_recuperado_en_ejercicio_derivado_de_deconsolidacion": 0,
                  "ingresos_obtenidos_por_apoyos_gubernamentales": 0,
                  "gastos_realidados_en_ejercicio_por_proyectos_en_investigacion_desarrollo_tecnologico": 0,
                  "credito_fiscal_autorizado_en_ejercicio_por_proyectos_en_investigacion_desarrollo_tecnologico_pendiente_aplicar": 0,
                  "credito_fiscal_autorizado_en_ejercicio_por_proyectos_de_inversion_en_artes_pendiente_aplicar": 0,
                  "credito_fiscal_autorizado_en_ejercicio_por_inversion_en_proyectos_programas_para_deporte_de_alto_rendimiento_pendiente_aplicar": 0,
                  "saldo_pendiente_aplicar_por_inversion_en_equipos_de_alimentacion_vehiculos_electricos": 0,
                  "credito_fiscal_autorizado_en_ejercicio_a_produccion_distribucion_cinematografica_nacional_pendiente_aplicar": 0
                },
                "datos_informativos_ejercicios_anteriores_aplicados_en_ejercicio": {
                  "total_estimulo_produccion_y_distribucion_cinematografica_nacional_ejercicios_anteriores_aplicado_en_ejercicio": null,
                  "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_inversion_en_proyectos_programas_para_deporte_alto_rendimiento_pendiente_aplicar": 0,
                  "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_proyectos_investigacion_desarrollo_tecnologico_pendiente_aplicar": 0,
                  "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_proyectos_inversion_artes_pendiente_aplicar": 0,
                  "saldo_credito_fiscal_autorizado_ejercicios_anteriores_a_produccion_distribucion_nacional_pendiente_aplicar": 0
                }
              },
              "dividendos_o_utilidades_distribuidos": {
                "provenientes_de_cuenta_de_utilidad_fisica_neta_cufin_generada_en_2013_y_anteriores": null,
                "provenientes_de_cuenta_de_utilidad_fisica_neta_cufin_generada_a_partir_de_2014": null,
                "provenientes_de_cuenta_de_utilidad_fisica_neta_reinvertida_cufinre": null,
                "no_provenientes_de_cufin_ni_cufinre_en_efectivo": null,
                "no_provenientes_de_cufin_ni_cufinre_en_acciones": null,
                "monto_del_impuesto_pagado_no_proveniente_de_cufin_ni_cufinre": null,
                "monto_del_impuesto_pagado_de_utilidades_provenientes_de_cufinre": null,
                "provenientes_de_cuenta_de_utilidad_fiscal_neta_por_inversion_en_energia_de_fuentes_renovables_o_sistemas_cogeneracion_electricidad_eficiente": null
              },
              "detalle_pago_r1_isr_personas_morales": {
                "a_cargo": 113002,
                "parte_actualizada": null,
                "recargos": null,
                "multa_por_correccion": null,
                "total_contribuciones": 113002,
                "desea_aplicar_alguna_compensacion_o_estimulo": "NO",
                "cantidad_a_cargo": 113002,
                "opta_por_pagar_parcialidades": "SIN SELECCI√ìN",
                "importe_de_primera_parcialidad": null,
                "importe_sin_primera_parcialidad": null,
                "cantidad_a_favor": null,
                "cantidad_a_pagar": 113002
              },
              "pdf": "=PDF-STRING=",
              "receipt_pdf": "=PDF-STRING=",
              "type": "yearly"
            },
            {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "informacion_general": {
                "rfc": "DPA950805RR2",
                "denominacion_razon_social": "Aloha Mahalo SC",
                "tipo_declaracion": "Normal",
                "ejercicio": 2020,
                "periodo_declaracion": "Diciembre",
                "fecha_hora_presentacion": "2021-01-18T19:24:00-06:00",
                "numero_operacion": "400475119",
                "tipo_complementaria": null
              },
              "determinacion_isr": {
                "personas_morales_regimen_general": {
                  "suma_ingresos_nominales_meses_anteriores_ejercicio": 69848414,
                  "estimulos_acreditables": null,
                  "ingresos_nominales_mes_que_declara": 6482479,
                  "reducciones": null,
                  "total_ingresos_nominales": 76330893,
                  "impuestos_del_periodo": 284098,
                  "coeficiente_utilidad": 0.2318,
                  "pagos_provisionales_efectuados_anterioridad": 303039,
                  "utilidad_fiscal_pago_provisional": 17693501,
                  "impuesto_retenido": 29925,
                  "ptu": null,
                  "otras_cantidades_a_cargo_contribuyente": null,
                  "iventario_acumulable": null,
                  "otras_cantidades_a_favor_contribuyente": null,
                  "anticipos_rendimientos_distribuidos_periodo": 16746509,
                  "diferencia_a_cargo": 0,
                  "perdidas_fiscales_ejercicios_anteriores_pendientes": null,
                  "estimulo_fiscal_deduccion_inmediata": null,
                  "impuesto_correspondiente_participacion_consolidable": null,
                  "deduccion_adicional_fomento_primer_empleo": null,
                  "porcentaje_participacion_consolidable": null,
                  "base_gravable_pago_provisional": 946992,
                  "impuesto_a_cargo": 0,
                  "isr_causado": 284098,
                  "ieps_alcohol": null
                }
              },
              "detalle_pago_isr": {
                "r1_isr_personas_morales": {
                  "a_cargo": 0,
                  "acreditamiento_sorteo_buen_fin": null,
                  "parte_actualizada": null,
                  "diesel_marino": null,
                  "recargos": null,
                  "total_aplicaciones": 0,
                  "multa_por_correccion": null,
                  "fecha_pago_realizado_anterioridad": null,
                  "total_de_contribuciones": 0,
                  "monto_pagado_anterioridad": null,
                  "credito_al_salario": null,
                  "importe_pagado_ultimas_48_hrs": null,
                  "subsidio_empleo": null,
                  "cantidad_a_cargo": 0,
                  "impuesto_a_depositos_efectivo_acreditable": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "diesel_automotriz_transporte": null,
                  "cantidad_a_favor": null,
                  "uso_infraestructura_carretera_cuota": null,
                  "cantidad_a_pagar": 0,
                  "otros_estimulos": null,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                },
                "r12_isr_retenciones_por_salarios": {
                  "a_cargo": 415945,
                  "acreditamiento_sorteos": null,
                  "parte_actualizada": 0,
                  "diesel_marino": null,
                  "recargos": 0,
                  "total_aplicaciones": 379,
                  "multa_por_correccion": null,
                  "fecha_pago_realizado_anterioridad": null,
                  "total_de_contribuciones": 415945,
                  "monto_pagado_anterioridad": null,
                  "credito_al_salario": null,
                  "importe_pagado_ultimas_48_hrs": null,
                  "subsidio_empleo": 379,
                  "cantidad_a_cargo": 415566,
                  "impuesto_a_depositos_efectivo_acreditable": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "diesel_automotriz_transporte": null,
                  "cantidad_a_favor": null,
                  "otros_estimulos": null,
                  "cantidad_a_pagar": 415566,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                },
                "r13_isr_retenciones_por_asimilados_a_salarios": {
                  "a_cargo": 254588,
                  "acreditamiento_sorteos": null,
                  "parte_actualizada": 0,
                  "diesel_marino": null,
                  "recargos": 0,
                  "total_aplicaciones": 0,
                  "multa_por_correccion": null,
                  "fecha_pago_realizado_anterioridad": null,
                  "total_de_contribuciones": 254588,
                  "monto_pagado_anterioridad": null,
                  "credito_al_salario": null,
                  "importe_pagado_ultimas_48_hrs": null,
                  "subsidio_empleo": null,
                  "cantidad_a_cargo": 254588,
                  "impuesto_a_depositos_efectivo_acreditable": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "diesel_automotriz_transporte": null,
                  "cantidad_a_favor": null,
                  "otros_estimulos": null,
                  "cantidad_a_pagar": 254588,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                },
                "r14_isr_retenciones_por_servicios_profesionales": {
                  "a_cargo": 104482,
                  "acreditamiento_sorteos": null,
                  "parte_actualizada": 0,
                  "diesel_marino": null,
                  "recargos": 0,
                  "total_aplicaciones": 0,
                  "multa_por_correccion": null,
                  "fecha_pago_realizado_anterioridad": null,
                  "total_de_contribuciones": 104482,
                  "monto_pagado_anterioridad": null,
                  "credito_al_salario": null,
                  "importe_pagado_ultimas_48_hrs": null,
                  "subsidio_empleo": null,
                  "cantidad_a_cargo": 104482,
                  "impuesto_a_depositos_efectivo_acreditable": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "diesel_automotriz_transporte": null,
                  "cantidad_a_favor": null,
                  "otros_estimulos": null,
                  "cantidad_a_pagar": 104482,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                }
              },
              "determinacion_iva": {
                "montos_actos_actividades_pagados": {
                  "total_actos_actividades_pagados_tasa_16": 2094706,
                  "total_actos_actividades_pagados_importacion_bienes_tasa_11": null,
                  "total_actos_actividades_sujetos_estimulo_rfn": 0,
                  "total_actos_actividades_pagados_tasa_0": 0,
                  "total_actos_actividades_pagados_importacion_bienes_tasa_16": null,
                  "total_actos_actividades_pagados_no_paga_iva": 0
                },
                "detalle_total_actos_actividades_pagados_tasa_16": {
                  "intereses_pagados_tasa_16": null,
                  "otros_actos_pagados_tasa_16": 2094706,
                  "regalias_pagadas_tasa_16": null,
                  "total_actos_pagados_tasa_16": 2094706
                },
                "determinacion_iva_acreditable": {
                  "total_iva_actos_actividades_pagados_tasa_16": 335153,
                  "iva_trasladado_o_pagado_adquisicion_bienes_distintos_inversiones_actos_no_obligados_pago_impuesto": null,
                  "iva_pagado_sujeto_estimulo_rfn": null,
                  "iva_trasladado_o_pagado_importacion_inversiones_actos_no_obligados_pago_impuesto": null,
                  "total_actos_actividades_pagados_importacion_bienes_tasa_16": 0,
                  "iva_bienes_utilizados_indistintamente_actos_gravados_o_actos_no_obligados_pago_impuesto": 0,
                  "proporcion_utilizada_conforme_art_5": null,
                  "total_iva_trasladado_contribuyente": 335153,
                  "proporcion_utilizada_conforme_art_5_b": null,
                  "iva_trasladado_adquisicion_bienes_distintos_inversiones_actos_gravados": 335153,
                  "iva_pagado_importacion_adquisicion_bienes_distintos_inversiones_actos_gravados": null,
                  "iva_acreditable": 335153,
                  "monto_acreditable_actualizado_a_incrementar_derivado_ajuste": null,
                  "iva_pagado_importacion_inversiones_actos_gravados": null,
                  "total_iva_acreditable_periodo": 335153,
                  "total_iva_actos_actividades_gravados": 335153,
                  "total_actos_actividades_pagados_importacion_bienes_tasa_11": null,
                  "iva_trasladado_adquisicion_inversiones_actos_gravados": null,
                  "iva_acreditable_bienes_utilizados_indistintamente_actos_gravados_o_actos_no_obligados_pago_impuesto": null
                },
                "determinacion_iva": {
                  "valor_actos_actividades_gravados_tasa_16": 6457950,
                  "otras_cantidades_a_favor_contribuyente": null,
                  "valor_actos_actividades_gravados_tasa_11": null,
                  "cantidad_a_cargo": 312421,
                  "valor_actos_actividades_gravados_tasa_0_exportacion": null,
                  "saldo_a_favor": null,
                  "valor_actos_actividades_gravados_tasa_9_otros": null,
                  "devolucion_inmediata_obtenida": null,
                  "suma_actos_actividades_gravados": 6457950,
                  "saldo_a_favor_periodo": 0,
                  "valor_actos_actividades_no_se_deba_pagar_impuesto_exentos": null,
                  "acreditamiento_saldo_favor_periodos_anteriores": null,
                  "impuesto_causado": 1033272,
                  "diferencia_a_cargo": 312421,
                  "cantidad_actualizada_a_reintegrarse_derivada_de_ajuste": null,
                  "ieps_acreditable_alcohol": null,
                  "iva_retenido_al_contribuyente": 385698,
                  "impuesto_a_cargo": 312421,
                  "total_iva_acreditable": 335153,
                  "remanente_saldo_favor_ieps_alcohol": null,
                  "otras_cantidades_a_cargo_contribuyente": null
                },
                "detalle_valor_actos_actividades_gravados_tasa_16": {
                  "intereses_cobrados_tasa_16": null,
                  "otros_actos_actividades_gravados_tasa_16": 6457950,
                  "regalias_entre_partes_relacionadas_tasa_16": null,
                  "total_actos_actividades_gravados_tasa_16": 6457950
                }
              },
              "detalle_pago_iva": {
                "r21_iva": {
                  "a_cargo": 312421,
                  "cretificados_tesofe": null,
                  "a_favor": null,
                  "diesel_marino": null,
                  "parte_actualizada": 0,
                  "total_aplicaciones": 0,
                  "recargos": 0,
                  "fecha_pago_realizado_anterioridad": null,
                  "multa_por_correccion": null,
                  "monto_pagado_anterioridad": null,
                  "total_de_contribuciones": 312421,
                  "importe_pagado_ultimas_48_hrs": null,
                  "credito_al_salario": null,
                  "cantidad_a_cargo": 312421,
                  "subsidio_empleo": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "diesel_automotriz_transporte": null,
                  "uso_infraestructura_carretera_cuota": null,
                  "cantidad_a_favor": null,
                  "otros_estimulos": null,
                  "cantidad_a_pagar": 312421,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                },
                "r21_iva_retenciones": {
                  "a_cargo": 111448,
                  "diesel_marino": null,
                  "parte_actualizada": 0,
                  "total_aplicaciones": 0,
                  "recargos": 0,
                  "fecha_pago_realizado_anterioridad": null,
                  "multa_por_correccion": null,
                  "monto_pagado_anterioridad": null,
                  "total_de_contribuciones": 111448,
                  "importe_pagado_ultimas_48_hrs": null,
                  "credito_al_salario": null,
                  "cantidad_a_cargo": 111448,
                  "subsidio_empleo": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "otros_estimulos": null,
                  "cantidad_a_favor": null,
                  "cretificados_tesofe": null,
                  "cantidad_a_pagar": 111448,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                }
              },
              "pdf": "===PDF_BINARY====",
              "receipt_pdf": "===PDF_BINARY====",
              "type": "monthly"
            }
          ]
        }
      },
      "TaxReturnBusinessListMonthlyPaginated": {
        "summary": "Tax Return Business Monthly",
        "description": "Example of a list of monthly business tax returns",
        "value": {
          "count": 101,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "informacion_general": {
                "rfc": "DPA950805RR2",
                "denominacion_razon_social": "Aloha Mahalo SC",
                "tipo_declaracion": "Normal",
                "ejercicio": 2020,
                "periodo_declaracion": "Diciembre",
                "fecha_hora_presentacion": "2021-01-18T19:24:00-06:00",
                "numero_operacion": "400475119",
                "tipo_complementaria": null
              },
              "determinacion_isr": {
                "personas_morales_regimen_general": {
                  "suma_ingresos_nominales_meses_anteriores_ejercicio": 69848414,
                  "estimulos_acreditables": null,
                  "ingresos_nominales_mes_que_declara": 6482479,
                  "reducciones": null,
                  "total_ingresos_nominales": 76330893,
                  "impuestos_del_periodo": 284098,
                  "coeficiente_utilidad": 0.2318,
                  "pagos_provisionales_efectuados_anterioridad": 303039,
                  "utilidad_fiscal_pago_provisional": 17693501,
                  "impuesto_retenido": 29925,
                  "ptu": null,
                  "otras_cantidades_a_cargo_contribuyente": null,
                  "iventario_acumulable": null,
                  "otras_cantidades_a_favor_contribuyente": null,
                  "anticipos_rendimientos_distribuidos_periodo": 16746509,
                  "diferencia_a_cargo": 0,
                  "perdidas_fiscales_ejercicios_anteriores_pendientes": null,
                  "estimulo_fiscal_deduccion_inmediata": null,
                  "impuesto_correspondiente_participacion_consolidable": null,
                  "deduccion_adicional_fomento_primer_empleo": null,
                  "porcentaje_participacion_consolidable": null,
                  "base_gravable_pago_provisional": 946992,
                  "impuesto_a_cargo": 0,
                  "isr_causado": 284098,
                  "ieps_alcohol": null
                }
              },
              "detalle_pago_isr": {
                "r1_isr_personas_morales": {
                  "a_cargo": 0,
                  "acreditamiento_sorteo_buen_fin": null,
                  "parte_actualizada": null,
                  "diesel_marino": null,
                  "recargos": null,
                  "total_aplicaciones": 0,
                  "multa_por_correccion": null,
                  "fecha_pago_realizado_anterioridad": null,
                  "total_de_contribuciones": 0,
                  "monto_pagado_anterioridad": null,
                  "credito_al_salario": null,
                  "importe_pagado_ultimas_48_hrs": null,
                  "subsidio_empleo": null,
                  "cantidad_a_cargo": 0,
                  "impuesto_a_depositos_efectivo_acreditable": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "diesel_automotriz_transporte": null,
                  "cantidad_a_favor": null,
                  "uso_infraestructura_carretera_cuota": null,
                  "cantidad_a_pagar": 0,
                  "otros_estimulos": null,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                },
                "r12_isr_retenciones_por_salarios": {
                  "a_cargo": 415945,
                  "acreditamiento_sorteos": null,
                  "parte_actualizada": 0,
                  "diesel_marino": null,
                  "recargos": 0,
                  "total_aplicaciones": 379,
                  "multa_por_correccion": null,
                  "fecha_pago_realizado_anterioridad": null,
                  "total_de_contribuciones": 415945,
                  "monto_pagado_anterioridad": null,
                  "credito_al_salario": null,
                  "importe_pagado_ultimas_48_hrs": null,
                  "subsidio_empleo": 379,
                  "cantidad_a_cargo": 415566,
                  "impuesto_a_depositos_efectivo_acreditable": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "diesel_automotriz_transporte": null,
                  "cantidad_a_favor": null,
                  "otros_estimulos": null,
                  "cantidad_a_pagar": 415566,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                },
                "r13_isr_retenciones_por_asimilados_a_salarios": {
                  "a_cargo": 254588,
                  "acreditamiento_sorteos": null,
                  "parte_actualizada": 0,
                  "diesel_marino": null,
                  "recargos": 0,
                  "total_aplicaciones": 0,
                  "multa_por_correccion": null,
                  "fecha_pago_realizado_anterioridad": null,
                  "total_de_contribuciones": 254588,
                  "monto_pagado_anterioridad": null,
                  "credito_al_salario": null,
                  "importe_pagado_ultimas_48_hrs": null,
                  "subsidio_empleo": null,
                  "cantidad_a_cargo": 254588,
                  "impuesto_a_depositos_efectivo_acreditable": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "diesel_automotriz_transporte": null,
                  "cantidad_a_favor": null,
                  "otros_estimulos": null,
                  "cantidad_a_pagar": 254588,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                },
                "r14_isr_retenciones_por_servicios_profesionales": {
                  "a_cargo": 104482,
                  "acreditamiento_sorteos": null,
                  "parte_actualizada": 0,
                  "diesel_marino": null,
                  "recargos": 0,
                  "total_aplicaciones": 0,
                  "multa_por_correccion": null,
                  "fecha_pago_realizado_anterioridad": null,
                  "total_de_contribuciones": 104482,
                  "monto_pagado_anterioridad": null,
                  "credito_al_salario": null,
                  "importe_pagado_ultimas_48_hrs": null,
                  "subsidio_empleo": null,
                  "cantidad_a_cargo": 104482,
                  "impuesto_a_depositos_efectivo_acreditable": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "diesel_automotriz_transporte": null,
                  "cantidad_a_favor": null,
                  "otros_estimulos": null,
                  "cantidad_a_pagar": 104482,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                }
              },
              "determinacion_iva": {
                "montos_actos_actividades_pagados": {
                  "total_actos_actividades_pagados_tasa_16": 2094706,
                  "total_actos_actividades_pagados_importacion_bienes_tasa_11": null,
                  "total_actos_actividades_sujetos_estimulo_rfn": 0,
                  "total_actos_actividades_pagados_tasa_0": 0,
                  "total_actos_actividades_pagados_importacion_bienes_tasa_16": null,
                  "total_actos_actividades_pagados_no_paga_iva": 0
                },
                "detalle_total_actos_actividades_pagados_tasa_16": {
                  "intereses_pagados_tasa_16": null,
                  "otros_actos_pagados_tasa_16": 2094706,
                  "regalias_pagadas_tasa_16": null,
                  "total_actos_pagados_tasa_16": 2094706
                },
                "determinacion_iva_acreditable": {
                  "total_iva_actos_actividades_pagados_tasa_16": 335153,
                  "iva_trasladado_o_pagado_adquisicion_bienes_distintos_inversiones_actos_no_obligados_pago_impuesto": null,
                  "iva_pagado_sujeto_estimulo_rfn": null,
                  "iva_trasladado_o_pagado_importacion_inversiones_actos_no_obligados_pago_impuesto": null,
                  "total_actos_actividades_pagados_importacion_bienes_tasa_16": 0,
                  "iva_bienes_utilizados_indistintamente_actos_gravados_o_actos_no_obligados_pago_impuesto": 0,
                  "proporcion_utilizada_conforme_art_5": null,
                  "total_iva_trasladado_contribuyente": 335153,
                  "proporcion_utilizada_conforme_art_5_b": null,
                  "iva_trasladado_adquisicion_bienes_distintos_inversiones_actos_gravados": 335153,
                  "iva_pagado_importacion_adquisicion_bienes_distintos_inversiones_actos_gravados": null,
                  "iva_acreditable": 335153,
                  "monto_acreditable_actualizado_a_incrementar_derivado_ajuste": null,
                  "iva_pagado_importacion_inversiones_actos_gravados": null,
                  "total_iva_acreditable_periodo": 335153,
                  "total_iva_actos_actividades_gravados": 335153,
                  "total_actos_actividades_pagados_importacion_bienes_tasa_11": null,
                  "iva_trasladado_adquisicion_inversiones_actos_gravados": null,
                  "iva_acreditable_bienes_utilizados_indistintamente_actos_gravados_o_actos_no_obligados_pago_impuesto": null
                },
                "determinacion_iva": {
                  "valor_actos_actividades_gravados_tasa_16": 6457950,
                  "otras_cantidades_a_favor_contribuyente": null,
                  "valor_actos_actividades_gravados_tasa_11": null,
                  "cantidad_a_cargo": 312421,
                  "valor_actos_actividades_gravados_tasa_0_exportacion": null,
                  "saldo_a_favor": null,
                  "valor_actos_actividades_gravados_tasa_9_otros": null,
                  "devolucion_inmediata_obtenida": null,
                  "suma_actos_actividades_gravados": 6457950,
                  "saldo_a_favor_periodo": 0,
                  "valor_actos_actividades_no_se_deba_pagar_impuesto_exentos": null,
                  "acreditamiento_saldo_favor_periodos_anteriores": null,
                  "impuesto_causado": 1033272,
                  "diferencia_a_cargo": 312421,
                  "cantidad_actualizada_a_reintegrarse_derivada_de_ajuste": null,
                  "ieps_acreditable_alcohol": null,
                  "iva_retenido_al_contribuyente": 385698,
                  "impuesto_a_cargo": 312421,
                  "total_iva_acreditable": 335153,
                  "remanente_saldo_favor_ieps_alcohol": null,
                  "otras_cantidades_a_cargo_contribuyente": null
                },
                "detalle_valor_actos_actividades_gravados_tasa_16": {
                  "intereses_cobrados_tasa_16": null,
                  "otros_actos_actividades_gravados_tasa_16": 6457950,
                  "regalias_entre_partes_relacionadas_tasa_16": null,
                  "total_actos_actividades_gravados_tasa_16": 6457950
                }
              },
              "detalle_pago_iva": {
                "r21_iva": {
                  "a_cargo": 312421,
                  "cretificados_tesofe": null,
                  "a_favor": null,
                  "diesel_marino": null,
                  "parte_actualizada": 0,
                  "total_aplicaciones": 0,
                  "recargos": 0,
                  "fecha_pago_realizado_anterioridad": null,
                  "multa_por_correccion": null,
                  "monto_pagado_anterioridad": null,
                  "total_de_contribuciones": 312421,
                  "importe_pagado_ultimas_48_hrs": null,
                  "credito_al_salario": null,
                  "cantidad_a_cargo": 312421,
                  "subsidio_empleo": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "diesel_automotriz_transporte": null,
                  "uso_infraestructura_carretera_cuota": null,
                  "cantidad_a_favor": null,
                  "otros_estimulos": null,
                  "cantidad_a_pagar": 312421,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                },
                "r21_iva_retenciones": {
                  "a_cargo": 111448,
                  "diesel_marino": null,
                  "parte_actualizada": 0,
                  "total_aplicaciones": 0,
                  "recargos": 0,
                  "fecha_pago_realizado_anterioridad": null,
                  "multa_por_correccion": null,
                  "monto_pagado_anterioridad": null,
                  "total_de_contribuciones": 111448,
                  "importe_pagado_ultimas_48_hrs": null,
                  "credito_al_salario": null,
                  "cantidad_a_cargo": 111448,
                  "subsidio_empleo": null,
                  "aplica_primera_parcialidad": "NO",
                  "compensaciones": null,
                  "credito_ieps_diesel": null,
                  "otros_estimulos": null,
                  "cantidad_a_favor": null,
                  "cretificados_tesofe": null,
                  "cantidad_a_pagar": 111448,
                  "importe_1ra_parcialidad": null,
                  "importe_sin_1ra_parcialidad": null
                }
              },
              "pdf": "===PDF_BINARY====",
              "receipt_pdf": "===PDF_BINARY====",
              "type": "monthly"
            }
          ]
        }
      },
      "TaxReturnPersonalList": {
        "summary": "Tax Return Personal",
        "description": "Example of a list of personal tax returns",
        "value": [
          {
            "id": "02589c41-ba22-4d44-8558-8111cc751318",
            "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "informacion_general": {
              "ejercicio": 2018,
              "fecha_hora_presentacion": "2020-01-07T17:28:00-05:00",
              "numero_operacion": "00000000001",
              "periodo_declaracion": "Del Ejercicio",
              "rfc": "ABCD111111A11",
              "tipo_declaracion": "Normal",
              "nombre": "JOHN DOE"
            },
            "sueldos_salarios": {
              "retenedores": [
                {
                  "rfc_retenedor": "ABCD222222A22",
                  "nombre_denominacion_razon_social": "ACME CORP",
                  "ingresos_exentos": 118263,
                  "ingreso_anual": 2265,
                  "subsidio_empleo": 0
                }
              ],
              "impuesto_retenido": 19497,
              "ingreso_anual": 118263,
              "ingresos_acumulables": 115998,
              "ingresos_exentos": 2265,
              "subsidio_empleo": 0
            },
            "servicios_profesionales": {
              "deducciones_autorizadas": {
                "deducciones_autorizadas": 11870,
                "otras_deducciones": null,
                "detalle_deducciones": [
                  {
                    "tipo_deduccion": "GASTOS",
                    "concepto": "GASOLINA Y MANTENIMIENTO DE TRANSPORTE",
                    "monto_detallado": 9682
                  },
                  {
                    "tipo_deduccion": "GASTOS",
                    "concepto": "COMPRAS Y GASTOS GENERALES",
                    "monto_detallado": 2188
                  }
                ],
                "total_deducciones_autorizadas": 11870
              },
              "ingresos": {
                "ingresos_acumulables": 46000,
                "ingresos_exentos": null,
                "otros_ingresos": null,
                "total_ingresos": 46000
              },
              "resultado_fiscal": {
                "utilidad_fiscal": 34130,
                "ptu_pagada_ejercicio": 0,
                "perdidas_fiscales_ejercicios_anteriores_aplicadas": 0,
                "utilidad_gravable": 34130
              },
              "pagos_provisionales": {
                "pagos_provisionales_efectuados_en_ejercicio": 0
              },
              "retenciones_isr": {
                "isr_retenido_personas_morales": 4600
              }
            },
            "deducciones_personales": {
              "honorarios_medicos_dentales_hospitalarios": [
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC444444A44",
                  "monto_deducible": 1000
                },
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC444444A44",
                  "monto_deducible": 502.34
                },
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC333333A33",
                  "monto_deducible": 258.83
                },
                {
                  "rfc_emisor": "ABC444444A55",
                  "monto_deducible": 14183.1
                },
                {
                  "rfc_emisor": "ABC444444A66",
                  "monto_deducible": 1658
                },
                {
                  "rfc_emisor": "ABC444444A77",
                  "monto_deducible": 1600
                },
                {
                  "rfc_emisor": "ABC444444A88",
                  "monto_deducible": 1064
                },
                {
                  "rfc_emisor": "ABC444444A99",
                  "monto_deducible": 927.57
                }
              ],
              "donativos": [
                {
                  "rfc_emisor": "ABC555555A99",
                  "monto_deducible": 10.03
                }
              ],
              "aportaciones_voluntarias_complementarias_al_sar": [
                {
                  "rfc_emisor": "ABC666666A99",
                  "monto_deducible": 12.03
                },
                {
                  "rfc_emisor": "ABC777777A99",
                  "monto_deducible": 87.22
                }
              ],
              "primas_por_seguros_de_gasto_medico": [
                {
                  "rfc_emisor": "ABC777777A99",
                  "monto_deducible": 20.03
                }
              ]
            },
            "determinacion_impuesto": {
              "base_gravable": 126864,
              "deducciones_personales": 23264,
              "ingresos_acumulables": 150128,
              "isr_favorable": 10308,
              "isr_conforme_tarifa_final": 13789,
              "isr_retenido": 24097,
              "num_clabe": "000000000000000001",
              "nombre_banco": "BANCO SA",
              "pagos_provisionales": 0,
              "titular_clabe_permite_verificacion": "S√ç",
              "accion_saldo_a_favor": "DEVOLUCI√ìN"
            },
            "retenciones": {
              "sueldos_salarios": [
                {
                  "rfc_retenedor": "ABC444444A99",
                  "monto_retenciones": 118263,
                  "retenciones_isr": 19497
                }
              ],
              "dividendos": [],
              "servicios_profesionales": [
                {
                  "rfc_retenedor": "ABC444444A00",
                  "monto_retenciones": 46000,
                  "retenciones_isr": 4600
                }
              ]
            },
            "dividendos": {
              "monto_acumulable_dividendos_utilidades": null,
              "monto_total_isr_pagado_sociedad": null
            },
            "datos_informativos": {
              "credito_fiscal_autorizado_proyectos_investigacion_desarrollo": 0,
              "credito_fiscal_autorizado_proyectos_apoyo_deporte_alto_rendimiento": 0,
              "credito_fiscal_autorizado_proyectos_inversion_artes": 0,
              "credito_fiscal_autorizado_inversion_equipos_fijos": 0,
              "credito_fiscal_autorizado_produccion_distribucion_cinematografica": 0,
              "saldo_credito_fiscal_autorizado_anteriores_investigacion_desarrollo": 0,
              "saldo_credito_fiscal_anteriores_proyectos_inversion_artes": 0,
              "saldo_credito_fiscal_anteriores_produccion_distribucion_cinematografica": 0
            },
            "pdf": "=PDF-STRING=",
            "receipt_pdf": "=PDF-STRING="
          }
        ]
      },
      "TaxReturnPersonalListMonthlyPFAE": {
        "summary": "Tax Return Personal Monthly (PFAE)",
        "description": "Example of a PFAE-type monthly personal tax return",
        "value": [
          {
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "informacion_general": {
              "rfc": null,
              "nombre": null,
              "tipo_declaracion": null,
              "ejercicio": null,
              "periodo_declaracion": null,
              "fecha_hora_presentacion": null,
              "numero_operacion": null
            },
            "isr": {
              "tipo": "PFAE",
              "determinacion": {
                "ingresos_periodos_anteriores": 0,
                "ingresos_periodo": 0,
                "total_ingresos": 0,
                "compras_gastos_periodos_anteriores": 1596,
                "compra_gastos_periodo": 399,
                "total_compras_gastos": 1995,
                "base_gravable_pago_provisional": 0,
                "isr_causado": 0,
                "pagos_provisionales_efectuados_anterioridad": 0,
                "isr_retenido_periodos_anteriores": 0,
                "impuesto_retenido": 0,
                "isr_cargo": 0
              },
              "detalle_del_pago": {
                "a_cargo": 0,
                "parte_actualizada": 0,
                "recargos": 0,
                "total_contribuciones": 0,
                "total_aplicaciones": 0,
                "cantidad_a_cargo": 0,
                "cantidad_a_pagar": 0
              }
            },
            "iva": {
              "determinacion": {
                "actividades_gravadas_tasa_16": 0,
                "actividades_gravadas_tasa_0": 0,
                "actividades_exentas": 0,
                "iva_cobrado_periodo_tasa_16": 0,
                "iva_acreditable_periodo": 0,
                "iva_retenido": 0,
                "saldo_a_favor": null,
                "impuesto_a_favor": null
              },
              "detalle_del_pago": {
                "total_contribuciones": 0,
                "total_aplicaciones": 0,
                "cantidad_a_cargo": 0,
                "cantidad_a_pagar": 0,
                "a_favor": null
              }
            },
            "pdf": "===PDF_BINARY====",
            "receipt_pdf": "===PDF_BINARY====",
            "type": "monthly"
          }
        ]
      },
      "TaxReturnPersonalListMonthlyPFAI": {
        "summary": "Tax Return Personal Monthly (PFAI)",
        "description": "Example of a PFAI-type monthly personal tax return",
        "value": [
          {
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "informacion_general": {
              "rfc": null,
              "nombre": null,
              "tipo_declaracion": null,
              "ejercicio": null,
              "periodo_declaracion": null,
              "fecha_hora_presentacion": null,
              "numero_operacion": null
            },
            "isr": {
              "tipo": "PFAE",
              "determinacion": {
                "ingresos_periodos_anteriores": 0,
                "ingresos_periodo": 0,
                "total_ingresos": 0,
                "compras_gastos_periodos_anteriores": 1596,
                "compra_gastos_periodo": 399,
                "total_compras_gastos": 1995,
                "base_gravable_pago_provisional": 0,
                "isr_causado": 0,
                "pagos_provisionales_efectuados_anterioridad": 0,
                "isr_retenido_periodos_anteriores": 0,
                "impuesto_retenido": 0,
                "isr_cargo": 0,
                "tipo_de_deducc√≠on": "dedducc√≠on opicional",
                "optas_por_el_c√°lculo_acumulado": "NO",
                "deducc√≠on_opcional": 700,
                "impuesto_predial": 0,
                "total_deducciones_autorizadas": 700,
                "tienes_facilidades_administrativas_o_est√≠mulos_deducibles": "NO"
              },
              "detalle_del_pago": {
                "a_cargo": 0,
                "parte_actualizada": 0,
                "recargos": 0,
                "total_contribuciones": 0,
                "total_aplicaciones": 0,
                "cantidad_a_cargo": 0,
                "cantidad_a_pagar": 0
              }
            },
            "iva": {
              "determinacion": {
                "actividades_gravadas_tasa_16": 0,
                "actividades_gravadas_tasa_0": 0,
                "actividades_exentas": 0,
                "iva_cobrado_periodo_tasa_16": 0,
                "iva_acreditable_periodo": 0,
                "iva_retenido": 0,
                "saldo_a_favor": null,
                "impuesto_a_favor": null,
                "impuesto_a_cargo": 54,
                "cantidad_a_cargo": 54
              },
              "detalle_del_pago": {
                "total_contribuciones": 0,
                "total_aplicaciones": 0,
                "cantidad_a_cargo": 0,
                "cantidad_a_pagar": 0,
                "a_favor": null
              }
            },
            "pdf": "===PDF_BINARY====",
            "receipt_pdf": "===PDF_BINARY====",
            "type": "monthly"
          }
        ]
      },
      "TaxReturnBusinessList": {
        "summary": "Tax Return Business",
        "description": "Example of a list of business tax returns",
        "value": [
          {
            "id": "02589c41-ba22-4d44-8558-8111cc751318",
            "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "informacion_general": {
              "ejercicio": 2018,
              "fecha_hora_presentacion": "2020-01-07T16:55:00-06:00",
              "numero_operacion": "000000000001",
              "periodo_declaracion": "Del Ejercicio",
              "rfc": "ABC1111111A1",
              "tipo_declaracion": "Normal",
              "tipo_complementaria": null,
              "denominacion_razon_social": "ACME CORP"
            },
            "datos_adicionales": {
              "indica_si_optas_por_dictaminar_tus_estados_financieros": "NO",
              "estas_obligado_a_presentar_la_informacion_sobre_tu_situacion_fiscal": "NO",
              "estas_obligado_unicamente_por_supuesto_distinto_al_de_haber_realizado_operaciones_con_residentes_extranjero": "SIN SELECCI√ìN",
              "estas_obligado_unicamente_por_supuesto_distinto_al_de_haber_realizado_operaciones_con_residentes_extranjero_inferiores_100mdp": "SIN SELECCI√ìN",
              "optas_por_presentar_informacion_sobre_tu_situacion_fiscal": "SIN SELECCI√ìN",
              "indica_si_te_dedicas_exclisivamente_a_generacion_energia_fuentes_renovables_o_cogeneracion_electricidad_eficiente": "NO"
            },
            "estado_resultados": {
              "ventas_servicios_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": 911165,
                "total": 911165
              },
              "ventas_servicios_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "devoluciones_descuentos_bonificaciones_ventas_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "devoluciones_descuentos_bonificaciones_ventas_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "ingresos_netos": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": 911165,
                "total": 911165
              },
              "inventario_inicial": null,
              "compras_netas_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "compras_netas_importacion": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "inventario_final": null,
              "costo_mercancias": null,
              "mano_de_obra": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "maquilas": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "gastos_indirectos_fabricacion": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "costo_ventas_servicios": null,
              "utilidad_bruta": 911165,
              "perdida_bruta": null,
              "gastos_operacion": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": 499540,
                "total": 499540
              },
              "utilidad_operacion": 411625,
              "perdida_operacion": null,
              "intereses_devengados_a_favor_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "intereses_devengados_a_favor_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "intereses_moratorios_a_favor_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "intereses_moratorios_a_favor_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "ganancia_cambiaria": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "intereses_devengados_a_cargo_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "intereses_devengados_a_cargo_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "intereses_moratorios_a_cargo_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "intereses_moratorios_a_cargo_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "perdida_cambiaria": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "resultado_posicion_monetaria_favorable": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "resultado_posicion_monetaria_desfavorable": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "otras_operaciones_financieras_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "otras_operaciones_financieras_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "otras_operaciones_financieras": null,
              "resultado_integral_financiamiento": null,
              "otros_gastos_nacionales": null,
              "otros_gastos_extranjero": null,
              "otros_gastos": null,
              "otros_productos_nacionales": null,
              "otros_productos_extranjero": null,
              "otros_productos": null,
              "ingresos_partidas_discontinuas_extraordinarias": null,
              "gastos_partidas_discontinuas_extraordinarias": null,
              "utilidad_antes_impuesto": 411625,
              "perdida_antes_impuesto": null,
              "isr": 113002,
              "ietu": null,
              "impac": null,
              "ptu": null,
              "utilidad_participacion_subsidiaria": null,
              "perdida_participacion_subsidiaria": null,
              "efectos_reexpresion_favorables_excepto_resultado_posicion_monetaria": null,
              "efectos_reexpresion_desfavorables_excepto_resultado_posicion_monetaria": null,
              "utilidad_neta": 298623,
              "perdida_neta": null
            },
            "estado_posicion_financiera_balance": {
              "activo": {
                "efectivo_caja_depositos_instituciones_credito_nacionales": 726644,
                "efectivo_caja_depositos_instituciones_credito_extranjero": null,
                "inversiones_valores_instituciones_nacionales_excepto_acciones": null,
                "inversiones_valores_instituciones_extranjero_excepto_acciones": null,
                "cuentas_documentos_por_cobrar_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "cuentas_documentos_por_cobrar_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "contribuciones_a_favor": null,
                "inventarios": null,
                "otros_activos_circulantes": 13277,
                "inversiones_en_acciones_nacionales": null,
                "inversiones_en_acciones_extranjero": null,
                "inversiones_en_acciones_total": null,
                "terrenos": null,
                "construcciones": null,
                "construcciones_en_proceso": null,
                "maquinaria_y_equipo": null,
                "mobiliario_y_equipo_oficina": null,
                "equipo_de_computo": null,
                "equipo_de_transporte": null,
                "otros_activos_fijos": 12756,
                "depreciacion_acumulada": -106,
                "cargos_y_gastos_diferidos": 9319,
                "amortizacion_acumulada": null,
                "suma_activo": 761890
              },
              "pasivo": {
                "cuentas_documentos_por_pagar_nacionales": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": 268227,
                  "total": 268227
                },
                "cuentas_documentos_por_pagar_extranjero": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "contribuciones_por_pagar": 223490,
                "anticipos_de_clientes": {
                  "partes_relacionadas": null,
                  "partes_no_relacionadas": null,
                  "total": null
                },
                "aportaciones_futuros_aumentos_de_capital": null,
                "otros_pasivos": null,
                "suma_pasivo": 491717
              },
              "capital_contable": {
                "capital_social_proveniente_aportaciones": 10000,
                "capital_social_proveniente_capitalizacion": null,
                "reservas": null,
                "otras_cuentas_capital": null,
                "aportaciones_futuros_aumentos_de_capital": null,
                "utilidades_acumuladas": null,
                "utilidad_del_ejercicio": 298623,
                "perdidas_acumuladas": -38450,
                "perdida_del_ejercicio": null,
                "exceso_en_actualizacion_capital": null,
                "insuficiencia_en_actualizacion_capital": null,
                "actualizacion_del_capital_contable": null,
                "suma_capital_contable": 270173,
                "suma_pasivo_mas_capital_contable": 761890
              }
            },
            "conciliacion_entre_resultado_contable_fiscal": {
              "utilidad_o_perdida_neta": 298623,
              "efectos_reexpresion": null,
              "resultado_posicion_monetaria": null,
              "utilidad_o_perdida_neta_historica": 298623,
              "ingresos_fiscales_no_contables": 95,
              "ajuste_anual_inflacion_acumulable": 95,
              "anticipos_de_clientes": null,
              "intereses_moratorios_efectivamente_cobrados": null,
              "ganancia_en_enajenacion_acciones_por_reembolso_capital": null,
              "ganancia_en_enajenacion_de_terrenos_y_activo_fijo": null,
              "inventario_acumulable_del_ejercicio": null,
              "otros_ingresos_fiscales_no_contables": null,
              "deducciones_contables_no_fiscales": 117415,
              "costo_de_ventas_contable": null,
              "depreciacion_y_amortizacion_contable": 106,
              "gastos_que_no_reunen_requisitos_fiscales": 4307,
              "isr_ietu_impac_ptu": 113002,
              "perdida_contable_enajenacion_de_acciones": null,
              "perdida_contable_enajenacion_de_activo_fijo": null,
              "perdida_en_participacion_subsidiaria": null,
              "intereses_devengados_que_exceden_valor_mercado_y_moratorios_pagados_o_no": 0,
              "otras_deducciones_contables_no_fiscales": 0,
              "deducciones_fiscales_no_contables": 0,
              "ajuste_anual_inflacion_deducible": null,
              "costo_vendido_fiscal": null,
              "deduccion_inversiones": null,
              "estimulo_fiscal_por_deduccion_inmediata_inversiones": null,
              "donacion_bienes_basicos_subsistencia_humana": 0,
              "estimulo_fiscal_contratacion_personas_discapacidad_yo_mayores": 0,
              "deduccion_impuesto_sobre_renta_retenido_personas_discapacidad_yo_mayores": 0,
              "perdida_fiscal_en_enajenacion_acciones": null,
              "perdida_fiscal_en_enajenacion_de_terrenos_y_activo_fijo": null,
              "intereses_moratorios_efectivamente_pagados": null,
              "otras_deducciones_fiscales_no_contables": null,
              "ingresos_contables_no_fiscales": null,
              "intereses_moratorios_devengados_a_favor_cobrados_o_no": null,
              "anticipos_de_clientes_ejercicios_anteriores": null,
              "saldos_a_favor_impuestos_y_su_actualizacion": null,
              "utilidad_contable_enajenacion_de_activo_fijo": null,
              "utilidad_contable_enajenacion_de_acciones": null,
              "utilidad_en_participacion_subsidiaria": null,
              "otros_ingresos_contables_no_fiscales": null,
              "utilidad_o_perdida_fiscal_antes_de_ptu": 416133
            },
            "deducciones_autorizadas": {
              "sueldos_salarios": null,
              "honorarios_pagados_a_personas_fisicas": null,
              "regalias_y_asistencia_tecnica": null,
              "donativos_otorgados": null,
              "uso_o_goce_temporal_de_bienes_pagados_a_personas_fisicas": null,
              "fletes_y_acarreos_pagados_a_parsonas_fisicas": null,
              "contribuciones_pagadas_excepto_isr_ietu_impac_iva_ieps": null,
              "seguros_fianzas": null,
              "perdida_por_creditos_incobrables": null,
              "viaticos_y_gastos_viaje": 59527,
              "combustible_y_lubricantes": null,
              "credito_al_salario_no_disminuido_de_contribuciones": null,
              "aportaciones_sar_infonavit_y_jubilaciones_vejez": null,
              "aportaciones_para_fondos_de_pensiones_y_jubilaciones": null,
              "cuotas_imss": null,
              "consumos_en_restaurantes": 11254,
              "perdida_por_operaciones_financieras_derivadas": null,
              "deduccion_por_concepto_de_ayuda_alimentaria_para_trabajadores": null,
              "monto_total_pagos_que_sean_ingresos_exentos_para_trabajador": null,
              "monto_deducible_al_47_pagos_son_ingresos_exentos_para_trabajador": null,
              "monto_deducible_al_53_pagos_son_ingresos_exentos_para_trabajador": null,
              "uso_o_goce_temporal_de_automoviles_baterias_electricas_o_electricos_con_motor_combustion_o_hidrogeno": null,
              "otras_deducciones_autorizadas": 424346,
              "total_deducciones_autorizadas": 495127
            },
            "cifras_cierre_ejercicio": {
              "perdidas_fiscales_de_ejercicios_anteriores_pendientes_de_amortizar_actualiazadas": null,
              "saldo_promedio_anual_de_creditos": 142795,
              "saldo_promedio_anual_de_deudas": 144765,
              "coeficiente_de_utilidad_por_aplicar_en_ejercicio_siguiente": 0.4567,
              "porcentaje_de_participacion_consolidable": null,
              "isr_causado_en_exceso_del_impac_en_los_3_ejercicios_anteriores_pendientes_aplicar": null,
              "saldo_actualizado_de_cuenta_de_utilidad_fiscal_neta_2013_y_anteriores": null,
              "saldo_actualizado_de_cuenta_de_utilidad_fiscal_neta_a_partir_2014_y_anteriores": null,
              "saldo_actualizado_de_cuenta_de_utilidad_fiscal_reinvertida": null,
              "saldo_actualizado_de_cuenta_de_capital_de_aportacion": null,
              "saldo_de_cuenta_de_utilidad_fiscal_neta_por_inversion_en_renovables": null
            },
            "determinacion_del_impuesto_sobre_la_renta": {
              "determinacion_del_impuesto_sobre_la_renta": {
                "total_ingresos_acumulables": 911260,
                "total_deducciones_autorizadas_y_deduccion_inmediata_inversiones": 495126,
                "deduccion_adicional_por_pago_servicios_personales_en_operacion_maquila": null,
                "utilidad_o_perdida_fiscal_antes_de_ptu": 416134,
                "ptu_pagada_en_el_ejercicio": null,
                "utilidad_fiscal_del_ejercicio": 416134,
                "perdidas_fiscales_de_ejercicios_anteriores_que_se_aplican_en_ejercicio": 39462,
                "resultado_fiscal": 376672,
                "impuesto_causado_en_ejercicio": 113002,
                "tienes_estimulos_fiscales_a_acreditar": "SIN SELECCI√ìN",
                "impuesto_sobre_la_renta_del_ejercicio": 113002,
                "pagos_provisionales_efectuados_enterados_a_federacion": null,
                "impuesto_retenido_al_contribuyente": null,
                "impuesto_acreditable_pagado_en_extranjero": null,
                "impuesto_acreditable_por_dividendos_o_utilidades_distribuidos": null,
                "otras_cantidades_a_cargo": null,
                "otras_cantidades_a_favor": null,
                "diferencia_a_cargo": 113002,
                "isr_a_cargo_del_ejercicio": 113002,
                "isr_a_favor_del_ejercicio": null
              },
              "impuesto_sobre_ingresos_sujetos_a_regimenes_fiscales_preferentes": null,
              "datos_informativos_ejercicio": {
                "monto_aplicado_del_estimulo_fiscal_de_chatarrizacion": 0,
                "monto_deducible_de_pagos_efectuados_por_uso_o_goce_temporal_automoviles": 0,
                "impac_recuperado_en_ejercicio_derivado_de_deconsolidacion": 0,
                "ingresos_obtenidos_por_apoyos_gubernamentales": 0,
                "gastos_realidados_en_ejercicio_por_proyectos_en_investigacion_desarrollo_tecnologico": 0,
                "credito_fiscal_autorizado_en_ejercicio_por_proyectos_en_investigacion_desarrollo_tecnologico_pendiente_aplicar": 0,
                "credito_fiscal_autorizado_en_ejercicio_por_proyectos_de_inversion_en_artes_pendiente_aplicar": 0,
                "credito_fiscal_autorizado_en_ejercicio_por_inversion_en_proyectos_programas_para_deporte_de_alto_rendimiento_pendiente_aplicar": 0,
                "saldo_pendiente_aplicar_por_inversion_en_equipos_de_alimentacion_vehiculos_electricos": 0,
                "credito_fiscal_autorizado_en_ejercicio_a_produccion_distribucion_cinematografica_nacional_pendiente_aplicar": 0
              },
              "datos_informativos_ejercicios_anteriores_aplicados_en_ejercicio": {
                "total_estimulo_produccion_y_distribucion_cinematografica_nacional_ejercicios_anteriores_aplicado_en_ejercicio": null,
                "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_inversion_en_proyectos_programas_para_deporte_alto_rendimiento_pendiente_aplicar": 0,
                "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_proyectos_investigacion_desarrollo_tecnologico_pendiente_aplicar": 0,
                "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_proyectos_inversion_artes_pendiente_aplicar": 0,
                "saldo_credito_fiscal_autorizado_ejercicios_anteriores_a_produccion_distribucion_nacional_pendiente_aplicar": 0
              }
            },
            "dividendos_o_utilidades_distribuidos": {
              "provenientes_de_cuenta_de_utilidad_fisica_neta_cufin_generada_en_2013_y_anteriores": null,
              "provenientes_de_cuenta_de_utilidad_fisica_neta_cufin_generada_a_partir_de_2014": null,
              "provenientes_de_cuenta_de_utilidad_fisica_neta_reinvertida_cufinre": null,
              "no_provenientes_de_cufin_ni_cufinre_en_efectivo": null,
              "no_provenientes_de_cufin_ni_cufinre_en_acciones": null,
              "monto_del_impuesto_pagado_no_proveniente_de_cufin_ni_cufinre": null,
              "monto_del_impuesto_pagado_de_utilidades_provenientes_de_cufinre": null,
              "provenientes_de_cuenta_de_utilidad_fiscal_neta_por_inversion_en_energia_de_fuentes_renovables_o_sistemas_cogeneracion_electricidad_eficiente": null
            },
            "detalle_pago_r1_isr_personas_morales": {
              "a_cargo": 113002,
              "parte_actualizada": null,
              "recargos": null,
              "multa_por_correccion": null,
              "total_contribuciones": 113002,
              "desea_aplicar_alguna_compensacion_o_estimulo": "NO",
              "cantidad_a_cargo": 113002,
              "opta_por_pagar_parcialidades": "SIN SELECCI√ìN",
              "importe_de_primera_parcialidad": null,
              "importe_sin_primera_parcialidad": null,
              "cantidad_a_favor": null,
              "cantidad_a_pagar": 113002
            },
            "pdf": "=PDF-STRING=",
            "receipt_pdf": "=PDF-STRING="
          }
        ]
      },
      "TaxReturnBusinessListMonthly": {
        "summary": "Tax Return Business Monthly",
        "description": "Example of a monthly business tax return",
        "value": [
          {
            "collected_at": "2022-02-09T08:45:50.406032Z",
            "created_at": "2022-02-09T08:46:20.406032Z",
            "informacion_general": {
              "rfc": "DPA950805RR2",
              "denominacion_razon_social": "Aloha Mahalo SC",
              "tipo_declaracion": "Normal",
              "ejercicio": 2020,
              "periodo_declaracion": "Diciembre",
              "fecha_hora_presentacion": "2021-01-18T19:24:00-06:00",
              "numero_operacion": "400475119",
              "tipo_complementaria": null
            },
            "determinacion_isr": {
              "personas_morales_regimen_general": {
                "suma_ingresos_nominales_meses_anteriores_ejercicio": 69848414,
                "estimulos_acreditables": null,
                "ingresos_nominales_mes_que_declara": 6482479,
                "reducciones": null,
                "total_ingresos_nominales": 76330893,
                "impuestos_del_periodo": 284098,
                "coeficiente_utilidad": 0.2318,
                "pagos_provisionales_efectuados_anterioridad": 303039,
                "utilidad_fiscal_pago_provisional": 17693501,
                "impuesto_retenido": 29925,
                "ptu": null,
                "otras_cantidades_a_cargo_contribuyente": null,
                "iventario_acumulable": null,
                "otras_cantidades_a_favor_contribuyente": null,
                "anticipos_rendimientos_distribuidos_periodo": 16746509,
                "diferencia_a_cargo": 0,
                "perdidas_fiscales_ejercicios_anteriores_pendientes": null,
                "estimulo_fiscal_deduccion_inmediata": null,
                "impuesto_correspondiente_participacion_consolidable": null,
                "deduccion_adicional_fomento_primer_empleo": null,
                "porcentaje_participacion_consolidable": null,
                "base_gravable_pago_provisional": 946992,
                "impuesto_a_cargo": 0,
                "isr_causado": 284098,
                "ieps_alcohol": null
              }
            },
            "detalle_pago_isr": {
              "r1_isr_personas_morales": {
                "a_cargo": 0,
                "acreditamiento_sorteo_buen_fin": null,
                "parte_actualizada": null,
                "diesel_marino": null,
                "recargos": null,
                "total_aplicaciones": 0,
                "multa_por_correccion": null,
                "fecha_pago_realizado_anterioridad": null,
                "total_de_contribuciones": 0,
                "monto_pagado_anterioridad": null,
                "credito_al_salario": null,
                "importe_pagado_ultimas_48_hrs": null,
                "subsidio_empleo": null,
                "cantidad_a_cargo": 0,
                "impuesto_a_depositos_efectivo_acreditable": null,
                "aplica_primera_parcialidad": "NO",
                "compensaciones": null,
                "credito_ieps_diesel": null,
                "diesel_automotriz_transporte": null,
                "cantidad_a_favor": null,
                "uso_infraestructura_carretera_cuota": null,
                "cantidad_a_pagar": 0,
                "otros_estimulos": null,
                "importe_1ra_parcialidad": null,
                "importe_sin_1ra_parcialidad": null
              },
              "r12_isr_retenciones_por_salarios": {
                "a_cargo": 415945,
                "acreditamiento_sorteos": null,
                "parte_actualizada": 0,
                "diesel_marino": null,
                "recargos": 0,
                "total_aplicaciones": 379,
                "multa_por_correccion": null,
                "fecha_pago_realizado_anterioridad": null,
                "total_de_contribuciones": 415945,
                "monto_pagado_anterioridad": null,
                "credito_al_salario": null,
                "importe_pagado_ultimas_48_hrs": null,
                "subsidio_empleo": 379,
                "cantidad_a_cargo": 415566,
                "impuesto_a_depositos_efectivo_acreditable": null,
                "aplica_primera_parcialidad": "NO",
                "compensaciones": null,
                "credito_ieps_diesel": null,
                "diesel_automotriz_transporte": null,
                "cantidad_a_favor": null,
                "otros_estimulos": null,
                "cantidad_a_pagar": 415566,
                "importe_1ra_parcialidad": null,
                "importe_sin_1ra_parcialidad": null
              },
              "r13_isr_retenciones_por_asimilados_a_salarios": {
                "a_cargo": 254588,
                "acreditamiento_sorteos": null,
                "parte_actualizada": 0,
                "diesel_marino": null,
                "recargos": 0,
                "total_aplicaciones": 0,
                "multa_por_correccion": null,
                "fecha_pago_realizado_anterioridad": null,
                "total_de_contribuciones": 254588,
                "monto_pagado_anterioridad": null,
                "credito_al_salario": null,
                "importe_pagado_ultimas_48_hrs": null,
                "subsidio_empleo": null,
                "cantidad_a_cargo": 254588,
                "impuesto_a_depositos_efectivo_acreditable": null,
                "aplica_primera_parcialidad": "NO",
                "compensaciones": null,
                "credito_ieps_diesel": null,
                "diesel_automotriz_transporte": null,
                "cantidad_a_favor": null,
                "otros_estimulos": null,
                "cantidad_a_pagar": 254588,
                "importe_1ra_parcialidad": null,
                "importe_sin_1ra_parcialidad": null
              },
              "r14_isr_retenciones_por_servicios_profesionales": {
                "a_cargo": 104482,
                "acreditamiento_sorteos": null,
                "parte_actualizada": 0,
                "diesel_marino": null,
                "recargos": 0,
                "total_aplicaciones": 0,
                "multa_por_correccion": null,
                "fecha_pago_realizado_anterioridad": null,
                "total_de_contribuciones": 104482,
                "monto_pagado_anterioridad": null,
                "credito_al_salario": null,
                "importe_pagado_ultimas_48_hrs": null,
                "subsidio_empleo": null,
                "cantidad_a_cargo": 104482,
                "impuesto_a_depositos_efectivo_acreditable": null,
                "aplica_primera_parcialidad": "NO",
                "compensaciones": null,
                "credito_ieps_diesel": null,
                "diesel_automotriz_transporte": null,
                "cantidad_a_favor": null,
                "otros_estimulos": null,
                "cantidad_a_pagar": 104482,
                "importe_1ra_parcialidad": null,
                "importe_sin_1ra_parcialidad": null
              }
            },
            "determinacion_iva": {
              "montos_actos_actividades_pagados": {
                "total_actos_actividades_pagados_tasa_16": 2094706,
                "total_actos_actividades_pagados_importacion_bienes_tasa_11": null,
                "total_actos_actividades_sujetos_estimulo_rfn": 0,
                "total_actos_actividades_pagados_tasa_0": 0,
                "total_actos_actividades_pagados_importacion_bienes_tasa_16": null,
                "total_actos_actividades_pagados_no_paga_iva": 0
              },
              "detalle_total_actos_actividades_pagados_tasa_16": {
                "intereses_pagados_tasa_16": null,
                "otros_actos_pagados_tasa_16": 2094706,
                "regalias_pagadas_tasa_16": null,
                "total_actos_pagados_tasa_16": 2094706
              },
              "determinacion_iva_acreditable": {
                "total_iva_actos_actividades_pagados_tasa_16": 335153,
                "iva_trasladado_o_pagado_adquisicion_bienes_distintos_inversiones_actos_no_obligados_pago_impuesto": null,
                "iva_pagado_sujeto_estimulo_rfn": null,
                "iva_trasladado_o_pagado_importacion_inversiones_actos_no_obligados_pago_impuesto": null,
                "total_actos_actividades_pagados_importacion_bienes_tasa_16": 0,
                "iva_bienes_utilizados_indistintamente_actos_gravados_o_actos_no_obligados_pago_impuesto": 0,
                "proporcion_utilizada_conforme_art_5": null,
                "total_iva_trasladado_contribuyente": 335153,
                "proporcion_utilizada_conforme_art_5_b": null,
                "iva_trasladado_adquisicion_bienes_distintos_inversiones_actos_gravados": 335153,
                "iva_pagado_importacion_adquisicion_bienes_distintos_inversiones_actos_gravados": null,
                "iva_acreditable": 335153,
                "monto_acreditable_actualizado_a_incrementar_derivado_ajuste": null,
                "iva_pagado_importacion_inversiones_actos_gravados": null,
                "total_iva_acreditable_periodo": 335153,
                "total_iva_actos_actividades_gravados": 335153,
                "total_actos_actividades_pagados_importacion_bienes_tasa_11": null,
                "iva_trasladado_adquisicion_inversiones_actos_gravados": null,
                "iva_acreditable_bienes_utilizados_indistintamente_actos_gravados_o_actos_no_obligados_pago_impuesto": null
              },
              "determinacion_iva": {
                "valor_actos_actividades_gravados_tasa_16": 6457950,
                "otras_cantidades_a_favor_contribuyente": null,
                "valor_actos_actividades_gravados_tasa_11": null,
                "cantidad_a_cargo": 312421,
                "valor_actos_actividades_gravados_tasa_0_exportacion": null,
                "saldo_a_favor": null,
                "valor_actos_actividades_gravados_tasa_9_otros": null,
                "devolucion_inmediata_obtenida": null,
                "suma_actos_actividades_gravados": 6457950,
                "saldo_a_favor_periodo": 0,
                "valor_actos_actividades_no_se_deba_pagar_impuesto_exentos": null,
                "acreditamiento_saldo_favor_periodos_anteriores": null,
                "impuesto_causado": 1033272,
                "diferencia_a_cargo": 312421,
                "cantidad_actualizada_a_reintegrarse_derivada_de_ajuste": null,
                "ieps_acreditable_alcohol": null,
                "iva_retenido_al_contribuyente": 385698,
                "impuesto_a_cargo": 312421,
                "total_iva_acreditable": 335153,
                "remanente_saldo_favor_ieps_alcohol": null,
                "otras_cantidades_a_cargo_contribuyente": null
              },
              "detalle_valor_actos_actividades_gravados_tasa_16": {
                "intereses_cobrados_tasa_16": null,
                "otros_actos_actividades_gravados_tasa_16": 6457950,
                "regalias_entre_partes_relacionadas_tasa_16": null,
                "total_actos_actividades_gravados_tasa_16": 6457950
              }
            },
            "detalle_pago_iva": {
              "r21_iva": {
                "a_cargo": 312421,
                "cretificados_tesofe": null,
                "a_favor": null,
                "diesel_marino": null,
                "parte_actualizada": 0,
                "total_aplicaciones": 0,
                "recargos": 0,
                "fecha_pago_realizado_anterioridad": null,
                "multa_por_correccion": null,
                "monto_pagado_anterioridad": null,
                "total_de_contribuciones": 312421,
                "importe_pagado_ultimas_48_hrs": null,
                "credito_al_salario": null,
                "cantidad_a_cargo": 312421,
                "subsidio_empleo": null,
                "aplica_primera_parcialidad": "NO",
                "compensaciones": null,
                "diesel_automotriz_transporte": null,
                "uso_infraestructura_carretera_cuota": null,
                "cantidad_a_favor": null,
                "otros_estimulos": null,
                "cantidad_a_pagar": 312421,
                "importe_1ra_parcialidad": null,
                "importe_sin_1ra_parcialidad": null
              },
              "r21_iva_retenciones": {
                "a_cargo": 111448,
                "diesel_marino": null,
                "parte_actualizada": 0,
                "total_aplicaciones": 0,
                "recargos": 0,
                "fecha_pago_realizado_anterioridad": null,
                "multa_por_correccion": null,
                "monto_pagado_anterioridad": null,
                "total_de_contribuciones": 111448,
                "importe_pagado_ultimas_48_hrs": null,
                "credito_al_salario": null,
                "cantidad_a_cargo": 111448,
                "subsidio_empleo": null,
                "aplica_primera_parcialidad": "NO",
                "compensaciones": null,
                "credito_ieps_diesel": null,
                "otros_estimulos": null,
                "cantidad_a_favor": null,
                "cretificados_tesofe": null,
                "cantidad_a_pagar": 111448,
                "importe_1ra_parcialidad": null,
                "importe_sin_1ra_parcialidad": null
              }
            },
            "pdf": "===PDF_BINARY====",
            "receipt_pdf": "===PDF_BINARY====",
            "type": "monthly"
          }
        ]
      },
      "TaxReturnPersonalListDetail": {
        "summary": "Tax Return Personal",
        "description": "Example of a list of personal tax returns",
        "value": {
          "id": "02589c41-ba22-4d44-8558-8111cc751318",
          "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "informacion_general": {
            "ejercicio": 2018,
            "fecha_hora_presentacion": "2020-01-07T17:28:00-05:00",
            "numero_operacion": "00000000001",
            "periodo_declaracion": "Del Ejercicio",
            "rfc": "ABCD111111A11",
            "tipo_declaracion": "Normal",
            "nombre": "JOHN DOE"
          },
          "sueldos_salarios": {
            "retenedores": [
              {
                "rfc_retenedor": "ABCD222222A22",
                "nombre_denominacion_razon_social": "ACME CORP",
                "ingresos_exentos": 118263,
                "ingreso_anual": 2265,
                "subsidio_empleo": 0
              }
            ],
            "impuesto_retenido": 19497,
            "ingreso_anual": 118263,
            "ingresos_acumulables": 115998,
            "ingresos_exentos": 2265,
            "subsidio_empleo": 0
          },
          "servicios_profesionales": {
            "deducciones_autorizadas": {
              "deducciones_autorizadas": 11870,
              "otras_deducciones": null,
              "detalle_deducciones": [
                {
                  "tipo_deduccion": "GASTOS",
                  "concepto": "GASOLINA Y MANTENIMIENTO DE TRANSPORTE",
                  "monto_detallado": 9682
                },
                {
                  "tipo_deduccion": "GASTOS",
                  "concepto": "COMPRAS Y GASTOS GENERALES",
                  "monto_detallado": 2188
                }
              ],
              "total_deducciones_autorizadas": 11870
            },
            "ingresos": {
              "ingresos_acumulables": 46000,
              "ingresos_exentos": null,
              "otros_ingresos": null,
              "total_ingresos": 46000
            },
            "resultado_fiscal": {
              "utilidad_fiscal": 34130,
              "ptu_pagada_ejercicio": 0,
              "perdidas_fiscales_ejercicios_anteriores_aplicadas": 0,
              "utilidad_gravable": 34130
            },
            "pagos_provisionales": {
              "pagos_provisionales_efectuados_en_ejercicio": 0
            },
            "retenciones_isr": {
              "isr_retenido_personas_morales": 4600
            }
          },
          "deducciones_personales": {
            "honorarios_medicos_dentales_hospitalarios": [
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC444444A44",
                "monto_deducible": 1000
              },
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC444444A44",
                "monto_deducible": 502.34
              },
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC333333A33",
                "monto_deducible": 258.83
              },
              {
                "rfc_emisor": "ABC444444A55",
                "monto_deducible": 14183.1
              },
              {
                "rfc_emisor": "ABC444444A66",
                "monto_deducible": 1658
              },
              {
                "rfc_emisor": "ABC444444A77",
                "monto_deducible": 1600
              },
              {
                "rfc_emisor": "ABC444444A88",
                "monto_deducible": 1064
              },
              {
                "rfc_emisor": "ABC444444A99",
                "monto_deducible": 927.57
              }
            ],
            "donativos": [
              {
                "rfc_emisor": "ABC555555A99",
                "monto_deducible": 10.03
              }
            ],
            "aportaciones_voluntarias_complementarias_al_sar": [
              {
                "rfc_emisor": "ABC666666A99",
                "monto_deducible": 12.03
              },
              {
                "rfc_emisor": "ABC777777A99",
                "monto_deducible": 87.22
              }
            ],
            "primas_por_seguros_de_gasto_medico": [
              {
                "rfc_emisor": "ABC777777A99",
                "monto_deducible": 20.03
              }
            ]
          },
          "determinacion_impuesto": {
            "base_gravable": 126864,
            "deducciones_personales": 23264,
            "ingresos_acumulables": 150128,
            "isr_favorable": 10308,
            "isr_conforme_tarifa_final": 13789,
            "isr_retenido": 24097,
            "num_clabe": "000000000000000001",
            "nombre_banco": "BANCO SA",
            "pagos_provisionales": 0,
            "titular_clabe_permite_verificacion": "S√ç",
            "accion_saldo_a_favor": "DEVOLUCI√ìN"
          },
          "retenciones": {
            "sueldos_salarios": [
              {
                "rfc_retenedor": "ABC444444A99",
                "monto_retenciones": 118263,
                "retenciones_isr": 19497
              }
            ],
            "dividendos": [],
            "servicios_profesionales": [
              {
                "rfc_retenedor": "ABC444444A00",
                "monto_retenciones": 46000,
                "retenciones_isr": 4600
              }
            ]
          },
          "dividendos": {
            "monto_acumulable_dividendos_utilidades": null,
            "monto_total_isr_pagado_sociedad": null
          },
          "datos_informativos": {
            "credito_fiscal_autorizado_proyectos_investigacion_desarrollo": 0,
            "credito_fiscal_autorizado_proyectos_apoyo_deporte_alto_rendimiento": 0,
            "credito_fiscal_autorizado_proyectos_inversion_artes": 0,
            "credito_fiscal_autorizado_inversion_equipos_fijos": 0,
            "credito_fiscal_autorizado_produccion_distribucion_cinematografica": 0,
            "saldo_credito_fiscal_autorizado_anteriores_investigacion_desarrollo": 0,
            "saldo_credito_fiscal_anteriores_proyectos_inversion_artes": 0,
            "saldo_credito_fiscal_anteriores_produccion_distribucion_cinematografica": 0
          },
          "pdf": "=PDF-STRING=",
          "receipt_pdf": "=PDF-STRING="
        }
      },
      "TaxReturnPersonalListMonthlyPFAEDetail": {
        "summary": "Tax Return Personal Monthly (PFAE)",
        "description": "Example of a PFAE-type monthly personal tax return",
        "value": {
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "informacion_general": {
            "rfc": null,
            "nombre": null,
            "tipo_declaracion": null,
            "ejercicio": null,
            "periodo_declaracion": null,
            "fecha_hora_presentacion": null,
            "numero_operacion": null
          },
          "isr": {
            "tipo": "PFAE",
            "determinacion": {
              "ingresos_periodos_anteriores": 0,
              "ingresos_periodo": 0,
              "total_ingresos": 0,
              "compras_gastos_periodos_anteriores": 1596,
              "compra_gastos_periodo": 399,
              "total_compras_gastos": 1995,
              "base_gravable_pago_provisional": 0,
              "isr_causado": 0,
              "pagos_provisionales_efectuados_anterioridad": 0,
              "isr_retenido_periodos_anteriores": 0,
              "impuesto_retenido": 0,
              "isr_cargo": 0
            },
            "detalle_del_pago": {
              "a_cargo": 0,
              "parte_actualizada": 0,
              "recargos": 0,
              "total_contribuciones": 0,
              "total_aplicaciones": 0,
              "cantidad_a_cargo": 0,
              "cantidad_a_pagar": 0
            }
          },
          "iva": {
            "determinacion": {
              "actividades_gravadas_tasa_16": 0,
              "actividades_gravadas_tasa_0": 0,
              "actividades_exentas": 0,
              "iva_cobrado_periodo_tasa_16": 0,
              "iva_acreditable_periodo": 0,
              "iva_retenido": 0,
              "saldo_a_favor": null,
              "impuesto_a_favor": null
            },
            "detalle_del_pago": {
              "total_contribuciones": 0,
              "total_aplicaciones": 0,
              "cantidad_a_cargo": 0,
              "cantidad_a_pagar": 0,
              "a_favor": null
            }
          },
          "pdf": "===PDF_BINARY====",
          "receipt_pdf": "===PDF_BINARY====",
          "type": "monthly"
        }
      },
      "TaxReturnPersonalListMonthlyPFAIDetail": {
        "summary": "Tax Return Personal Monthly (PFAI)",
        "description": "Example of a PFAI-type monthly personal tax return",
        "value": {
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "informacion_general": {
            "rfc": null,
            "nombre": null,
            "tipo_declaracion": null,
            "ejercicio": null,
            "periodo_declaracion": null,
            "fecha_hora_presentacion": null,
            "numero_operacion": null
          },
          "isr": {
            "tipo": "PFAE",
            "determinacion": {
              "ingresos_periodos_anteriores": 0,
              "ingresos_periodo": 0,
              "total_ingresos": 0,
              "compras_gastos_periodos_anteriores": 1596,
              "compra_gastos_periodo": 399,
              "total_compras_gastos": 1995,
              "base_gravable_pago_provisional": 0,
              "isr_causado": 0,
              "pagos_provisionales_efectuados_anterioridad": 0,
              "isr_retenido_periodos_anteriores": 0,
              "impuesto_retenido": 0,
              "isr_cargo": 0,
              "tipo_de_deducc√≠on": "dedducc√≠on opicional",
              "optas_por_el_c√°lculo_acumulado": "NO",
              "deducc√≠on_opcional": 700,
              "impuesto_predial": 0,
              "total_deducciones_autorizadas": 700,
              "tienes_facilidades_administrativas_o_est√≠mulos_deducibles": "NO"
            },
            "detalle_del_pago": {
              "a_cargo": 0,
              "parte_actualizada": 0,
              "recargos": 0,
              "total_contribuciones": 0,
              "total_aplicaciones": 0,
              "cantidad_a_cargo": 0,
              "cantidad_a_pagar": 0
            }
          },
          "iva": {
            "determinacion": {
              "actividades_gravadas_tasa_16": 0,
              "actividades_gravadas_tasa_0": 0,
              "actividades_exentas": 0,
              "iva_cobrado_periodo_tasa_16": 0,
              "iva_acreditable_periodo": 0,
              "iva_retenido": 0,
              "saldo_a_favor": null,
              "impuesto_a_favor": null,
              "impuesto_a_cargo": 54,
              "cantidad_a_cargo": 54
            },
            "detalle_del_pago": {
              "total_contribuciones": 0,
              "total_aplicaciones": 0,
              "cantidad_a_cargo": 0,
              "cantidad_a_pagar": 0,
              "a_favor": null
            }
          },
          "pdf": "===PDF_BINARY====",
          "receipt_pdf": "===PDF_BINARY====",
          "type": "monthly"
        }
      },
      "TaxReturnBusinessListDetail": {
        "summary": "Tax Return Business",
        "description": "Example of a list of business tax returns",
        "value": {
          "id": "02589c41-ba22-4d44-8558-8111cc751318",
          "link": "19697249-01b8-443e-a451-76bfc5fbeebf",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "informacion_general": {
            "ejercicio": 2018,
            "fecha_hora_presentacion": "2020-01-07T16:55:00-06:00",
            "numero_operacion": "000000000001",
            "periodo_declaracion": "Del Ejercicio",
            "rfc": "ABC1111111A1",
            "tipo_declaracion": "Normal",
            "tipo_complementaria": null,
            "denominacion_razon_social": "ACME CORP"
          },
          "datos_adicionales": {
            "indica_si_optas_por_dictaminar_tus_estados_financieros": "NO",
            "estas_obligado_a_presentar_la_informacion_sobre_tu_situacion_fiscal": "NO",
            "estas_obligado_unicamente_por_supuesto_distinto_al_de_haber_realizado_operaciones_con_residentes_extranjero": "SIN SELECCI√ìN",
            "estas_obligado_unicamente_por_supuesto_distinto_al_de_haber_realizado_operaciones_con_residentes_extranjero_inferiores_100mdp": "SIN SELECCI√ìN",
            "optas_por_presentar_informacion_sobre_tu_situacion_fiscal": "SIN SELECCI√ìN",
            "indica_si_te_dedicas_exclisivamente_a_generacion_energia_fuentes_renovables_o_cogeneracion_electricidad_eficiente": "NO"
          },
          "estado_resultados": {
            "ventas_servicios_nacionales": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": 911165,
              "total": 911165
            },
            "ventas_servicios_extranjero": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "devoluciones_descuentos_bonificaciones_ventas_nacionales": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "devoluciones_descuentos_bonificaciones_ventas_extranjero": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "ingresos_netos": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": 911165,
              "total": 911165
            },
            "inventario_inicial": null,
            "compras_netas_nacionales": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "compras_netas_importacion": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "inventario_final": null,
            "costo_mercancias": null,
            "mano_de_obra": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "maquilas": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "gastos_indirectos_fabricacion": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "costo_ventas_servicios": null,
            "utilidad_bruta": 911165,
            "perdida_bruta": null,
            "gastos_operacion": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": 499540,
              "total": 499540
            },
            "utilidad_operacion": 411625,
            "perdida_operacion": null,
            "intereses_devengados_a_favor_nacionales": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "intereses_devengados_a_favor_extranjero": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "intereses_moratorios_a_favor_nacionales": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "intereses_moratorios_a_favor_extranjero": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "ganancia_cambiaria": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "intereses_devengados_a_cargo_nacionales": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "intereses_devengados_a_cargo_extranjero": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "intereses_moratorios_a_cargo_nacionales": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "intereses_moratorios_a_cargo_extranjero": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "perdida_cambiaria": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "resultado_posicion_monetaria_favorable": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "resultado_posicion_monetaria_desfavorable": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "otras_operaciones_financieras_nacionales": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "otras_operaciones_financieras_extranjero": {
              "partes_relacionadas": null,
              "partes_no_relacionadas": null,
              "total": null
            },
            "otras_operaciones_financieras": null,
            "resultado_integral_financiamiento": null,
            "otros_gastos_nacionales": null,
            "otros_gastos_extranjero": null,
            "otros_gastos": null,
            "otros_productos_nacionales": null,
            "otros_productos_extranjero": null,
            "otros_productos": null,
            "ingresos_partidas_discontinuas_extraordinarias": null,
            "gastos_partidas_discontinuas_extraordinarias": null,
            "utilidad_antes_impuesto": 411625,
            "perdida_antes_impuesto": null,
            "isr": 113002,
            "ietu": null,
            "impac": null,
            "ptu": null,
            "utilidad_participacion_subsidiaria": null,
            "perdida_participacion_subsidiaria": null,
            "efectos_reexpresion_favorables_excepto_resultado_posicion_monetaria": null,
            "efectos_reexpresion_desfavorables_excepto_resultado_posicion_monetaria": null,
            "utilidad_neta": 298623,
            "perdida_neta": null
          },
          "estado_posicion_financiera_balance": {
            "activo": {
              "efectivo_caja_depositos_instituciones_credito_nacionales": 726644,
              "efectivo_caja_depositos_instituciones_credito_extranjero": null,
              "inversiones_valores_instituciones_nacionales_excepto_acciones": null,
              "inversiones_valores_instituciones_extranjero_excepto_acciones": null,
              "cuentas_documentos_por_cobrar_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "cuentas_documentos_por_cobrar_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "contribuciones_a_favor": null,
              "inventarios": null,
              "otros_activos_circulantes": 13277,
              "inversiones_en_acciones_nacionales": null,
              "inversiones_en_acciones_extranjero": null,
              "inversiones_en_acciones_total": null,
              "terrenos": null,
              "construcciones": null,
              "construcciones_en_proceso": null,
              "maquinaria_y_equipo": null,
              "mobiliario_y_equipo_oficina": null,
              "equipo_de_computo": null,
              "equipo_de_transporte": null,
              "otros_activos_fijos": 12756,
              "depreciacion_acumulada": -106,
              "cargos_y_gastos_diferidos": 9319,
              "amortizacion_acumulada": null,
              "suma_activo": 761890
            },
            "pasivo": {
              "cuentas_documentos_por_pagar_nacionales": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": 268227,
                "total": 268227
              },
              "cuentas_documentos_por_pagar_extranjero": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "contribuciones_por_pagar": 223490,
              "anticipos_de_clientes": {
                "partes_relacionadas": null,
                "partes_no_relacionadas": null,
                "total": null
              },
              "aportaciones_futuros_aumentos_de_capital": null,
              "otros_pasivos": null,
              "suma_pasivo": 491717
            },
            "capital_contable": {
              "capital_social_proveniente_aportaciones": 10000,
              "capital_social_proveniente_capitalizacion": null,
              "reservas": null,
              "otras_cuentas_capital": null,
              "aportaciones_futuros_aumentos_de_capital": null,
              "utilidades_acumuladas": null,
              "utilidad_del_ejercicio": 298623,
              "perdidas_acumuladas": -38450,
              "perdida_del_ejercicio": null,
              "exceso_en_actualizacion_capital": null,
              "insuficiencia_en_actualizacion_capital": null,
              "actualizacion_del_capital_contable": null,
              "suma_capital_contable": 270173,
              "suma_pasivo_mas_capital_contable": 761890
            }
          },
          "conciliacion_entre_resultado_contable_fiscal": {
            "utilidad_o_perdida_neta": 298623,
            "efectos_reexpresion": null,
            "resultado_posicion_monetaria": null,
            "utilidad_o_perdida_neta_historica": 298623,
            "ingresos_fiscales_no_contables": 95,
            "ajuste_anual_inflacion_acumulable": 95,
            "anticipos_de_clientes": null,
            "intereses_moratorios_efectivamente_cobrados": null,
            "ganancia_en_enajenacion_acciones_por_reembolso_capital": null,
            "ganancia_en_enajenacion_de_terrenos_y_activo_fijo": null,
            "inventario_acumulable_del_ejercicio": null,
            "otros_ingresos_fiscales_no_contables": null,
            "deducciones_contables_no_fiscales": 117415,
            "costo_de_ventas_contable": null,
            "depreciacion_y_amortizacion_contable": 106,
            "gastos_que_no_reunen_requisitos_fiscales": 4307,
            "isr_ietu_impac_ptu": 113002,
            "perdida_contable_enajenacion_de_acciones": null,
            "perdida_contable_enajenacion_de_activo_fijo": null,
            "perdida_en_participacion_subsidiaria": null,
            "intereses_devengados_que_exceden_valor_mercado_y_moratorios_pagados_o_no": 0,
            "otras_deducciones_contables_no_fiscales": 0,
            "deducciones_fiscales_no_contables": 0,
            "ajuste_anual_inflacion_deducible": null,
            "costo_vendido_fiscal": null,
            "deduccion_inversiones": null,
            "estimulo_fiscal_por_deduccion_inmediata_inversiones": null,
            "donacion_bienes_basicos_subsistencia_humana": 0,
            "estimulo_fiscal_contratacion_personas_discapacidad_yo_mayores": 0,
            "deduccion_impuesto_sobre_renta_retenido_personas_discapacidad_yo_mayores": 0,
            "perdida_fiscal_en_enajenacion_acciones": null,
            "perdida_fiscal_en_enajenacion_de_terrenos_y_activo_fijo": null,
            "intereses_moratorios_efectivamente_pagados": null,
            "otras_deducciones_fiscales_no_contables": null,
            "ingresos_contables_no_fiscales": null,
            "intereses_moratorios_devengados_a_favor_cobrados_o_no": null,
            "anticipos_de_clientes_ejercicios_anteriores": null,
            "saldos_a_favor_impuestos_y_su_actualizacion": null,
            "utilidad_contable_enajenacion_de_activo_fijo": null,
            "utilidad_contable_enajenacion_de_acciones": null,
            "utilidad_en_participacion_subsidiaria": null,
            "otros_ingresos_contables_no_fiscales": null,
            "utilidad_o_perdida_fiscal_antes_de_ptu": 416133
          },
          "deducciones_autorizadas": {
            "sueldos_salarios": null,
            "honorarios_pagados_a_personas_fisicas": null,
            "regalias_y_asistencia_tecnica": null,
            "donativos_otorgados": null,
            "uso_o_goce_temporal_de_bienes_pagados_a_personas_fisicas": null,
            "fletes_y_acarreos_pagados_a_parsonas_fisicas": null,
            "contribuciones_pagadas_excepto_isr_ietu_impac_iva_ieps": null,
            "seguros_fianzas": null,
            "perdida_por_creditos_incobrables": null,
            "viaticos_y_gastos_viaje": 59527,
            "combustible_y_lubricantes": null,
            "credito_al_salario_no_disminuido_de_contribuciones": null,
            "aportaciones_sar_infonavit_y_jubilaciones_vejez": null,
            "aportaciones_para_fondos_de_pensiones_y_jubilaciones": null,
            "cuotas_imss": null,
            "consumos_en_restaurantes": 11254,
            "perdida_por_operaciones_financieras_derivadas": null,
            "deduccion_por_concepto_de_ayuda_alimentaria_para_trabajadores": null,
            "monto_total_pagos_que_sean_ingresos_exentos_para_trabajador": null,
            "monto_deducible_al_47_pagos_son_ingresos_exentos_para_trabajador": null,
            "monto_deducible_al_53_pagos_son_ingresos_exentos_para_trabajador": null,
            "uso_o_goce_temporal_de_automoviles_baterias_electricas_o_electricos_con_motor_combustion_o_hidrogeno": null,
            "otras_deducciones_autorizadas": 424346,
            "total_deducciones_autorizadas": 495127
          },
          "cifras_cierre_ejercicio": {
            "perdidas_fiscales_de_ejercicios_anteriores_pendientes_de_amortizar_actualiazadas": null,
            "saldo_promedio_anual_de_creditos": 142795,
            "saldo_promedio_anual_de_deudas": 144765,
            "coeficiente_de_utilidad_por_aplicar_en_ejercicio_siguiente": 0.4567,
            "porcentaje_de_participacion_consolidable": null,
            "isr_causado_en_exceso_del_impac_en_los_3_ejercicios_anteriores_pendientes_aplicar": null,
            "saldo_actualizado_de_cuenta_de_utilidad_fiscal_neta_2013_y_anteriores": null,
            "saldo_actualizado_de_cuenta_de_utilidad_fiscal_neta_a_partir_2014_y_anteriores": null,
            "saldo_actualizado_de_cuenta_de_utilidad_fiscal_reinvertida": null,
            "saldo_actualizado_de_cuenta_de_capital_de_aportacion": null,
            "saldo_de_cuenta_de_utilidad_fiscal_neta_por_inversion_en_renovables": null
          },
          "determinacion_del_impuesto_sobre_la_renta": {
            "determinacion_del_impuesto_sobre_la_renta": {
              "total_ingresos_acumulables": 911260,
              "total_deducciones_autorizadas_y_deduccion_inmediata_inversiones": 495126,
              "deduccion_adicional_por_pago_servicios_personales_en_operacion_maquila": null,
              "utilidad_o_perdida_fiscal_antes_de_ptu": 416134,
              "ptu_pagada_en_el_ejercicio": null,
              "utilidad_fiscal_del_ejercicio": 416134,
              "perdidas_fiscales_de_ejercicios_anteriores_que_se_aplican_en_ejercicio": 39462,
              "resultado_fiscal": 376672,
              "impuesto_causado_en_ejercicio": 113002,
              "tienes_estimulos_fiscales_a_acreditar": "SIN SELECCI√ìN",
              "impuesto_sobre_la_renta_del_ejercicio": 113002,
              "pagos_provisionales_efectuados_enterados_a_federacion": null,
              "impuesto_retenido_al_contribuyente": null,
              "impuesto_acreditable_pagado_en_extranjero": null,
              "impuesto_acreditable_por_dividendos_o_utilidades_distribuidos": null,
              "otras_cantidades_a_cargo": null,
              "otras_cantidades_a_favor": null,
              "diferencia_a_cargo": 113002,
              "isr_a_cargo_del_ejercicio": 113002,
              "isr_a_favor_del_ejercicio": null
            },
            "impuesto_sobre_ingresos_sujetos_a_regimenes_fiscales_preferentes": null,
            "datos_informativos_ejercicio": {
              "monto_aplicado_del_estimulo_fiscal_de_chatarrizacion": 0,
              "monto_deducible_de_pagos_efectuados_por_uso_o_goce_temporal_automoviles": 0,
              "impac_recuperado_en_ejercicio_derivado_de_deconsolidacion": 0,
              "ingresos_obtenidos_por_apoyos_gubernamentales": 0,
              "gastos_realidados_en_ejercicio_por_proyectos_en_investigacion_desarrollo_tecnologico": 0,
              "credito_fiscal_autorizado_en_ejercicio_por_proyectos_en_investigacion_desarrollo_tecnologico_pendiente_aplicar": 0,
              "credito_fiscal_autorizado_en_ejercicio_por_proyectos_de_inversion_en_artes_pendiente_aplicar": 0,
              "credito_fiscal_autorizado_en_ejercicio_por_inversion_en_proyectos_programas_para_deporte_de_alto_rendimiento_pendiente_aplicar": 0,
              "saldo_pendiente_aplicar_por_inversion_en_equipos_de_alimentacion_vehiculos_electricos": 0,
              "credito_fiscal_autorizado_en_ejercicio_a_produccion_distribucion_cinematografica_nacional_pendiente_aplicar": 0
            },
            "datos_informativos_ejercicios_anteriores_aplicados_en_ejercicio": {
              "total_estimulo_produccion_y_distribucion_cinematografica_nacional_ejercicios_anteriores_aplicado_en_ejercicio": null,
              "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_inversion_en_proyectos_programas_para_deporte_alto_rendimiento_pendiente_aplicar": 0,
              "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_proyectos_investigacion_desarrollo_tecnologico_pendiente_aplicar": 0,
              "saldo_credito_fiscal_autorizado_ejercicios_anteriores_por_proyectos_inversion_artes_pendiente_aplicar": 0,
              "saldo_credito_fiscal_autorizado_ejercicios_anteriores_a_produccion_distribucion_nacional_pendiente_aplicar": 0
            }
          },
          "dividendos_o_utilidades_distribuidos": {
            "provenientes_de_cuenta_de_utilidad_fisica_neta_cufin_generada_en_2013_y_anteriores": null,
            "provenientes_de_cuenta_de_utilidad_fisica_neta_cufin_generada_a_partir_de_2014": null,
            "provenientes_de_cuenta_de_utilidad_fisica_neta_reinvertida_cufinre": null,
            "no_provenientes_de_cufin_ni_cufinre_en_efectivo": null,
            "no_provenientes_de_cufin_ni_cufinre_en_acciones": null,
            "monto_del_impuesto_pagado_no_proveniente_de_cufin_ni_cufinre": null,
            "monto_del_impuesto_pagado_de_utilidades_provenientes_de_cufinre": null,
            "provenientes_de_cuenta_de_utilidad_fiscal_neta_por_inversion_en_energia_de_fuentes_renovables_o_sistemas_cogeneracion_electricidad_eficiente": null
          },
          "detalle_pago_r1_isr_personas_morales": {
            "a_cargo": 113002,
            "parte_actualizada": null,
            "recargos": null,
            "multa_por_correccion": null,
            "total_contribuciones": 113002,
            "desea_aplicar_alguna_compensacion_o_estimulo": "NO",
            "cantidad_a_cargo": 113002,
            "opta_por_pagar_parcialidades": "SIN SELECCI√ìN",
            "importe_de_primera_parcialidad": null,
            "importe_sin_primera_parcialidad": null,
            "cantidad_a_favor": null,
            "cantidad_a_pagar": 113002
          },
          "pdf": "=PDF-STRING=",
          "receipt_pdf": "=PDF-STRING="
        }
      },
      "TaxReturnBusinessListMonthlyDetail": {
        "summary": "Tax Return Business Monthly",
        "description": "Example of a monthly business tax return",
        "value": {
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "informacion_general": {
            "rfc": "DPA950805RR2",
            "denominacion_razon_social": "Aloha Mahalo SC",
            "tipo_declaracion": "Normal",
            "ejercicio": 2020,
            "periodo_declaracion": "Diciembre",
            "fecha_hora_presentacion": "2021-01-18T19:24:00-06:00",
            "numero_operacion": "400475119",
            "tipo_complementaria": null
          },
          "determinacion_isr": {
            "personas_morales_regimen_general": {
              "suma_ingresos_nominales_meses_anteriores_ejercicio": 69848414,
              "estimulos_acreditables": null,
              "ingresos_nominales_mes_que_declara": 6482479,
              "reducciones": null,
              "total_ingresos_nominales": 76330893,
              "impuestos_del_periodo": 284098,
              "coeficiente_utilidad": 0.2318,
              "pagos_provisionales_efectuados_anterioridad": 303039,
              "utilidad_fiscal_pago_provisional": 17693501,
              "impuesto_retenido": 29925,
              "ptu": null,
              "otras_cantidades_a_cargo_contribuyente": null,
              "iventario_acumulable": null,
              "otras_cantidades_a_favor_contribuyente": null,
              "anticipos_rendimientos_distribuidos_periodo": 16746509,
              "diferencia_a_cargo": 0,
              "perdidas_fiscales_ejercicios_anteriores_pendientes": null,
              "estimulo_fiscal_deduccion_inmediata": null,
              "impuesto_correspondiente_participacion_consolidable": null,
              "deduccion_adicional_fomento_primer_empleo": null,
              "porcentaje_participacion_consolidable": null,
              "base_gravable_pago_provisional": 946992,
              "impuesto_a_cargo": 0,
              "isr_causado": 284098,
              "ieps_alcohol": null
            }
          },
          "detalle_pago_isr": {
            "r1_isr_personas_morales": {
              "a_cargo": 0,
              "acreditamiento_sorteo_buen_fin": null,
              "parte_actualizada": null,
              "diesel_marino": null,
              "recargos": null,
              "total_aplicaciones": 0,
              "multa_por_correccion": null,
              "fecha_pago_realizado_anterioridad": null,
              "total_de_contribuciones": 0,
              "monto_pagado_anterioridad": null,
              "credito_al_salario": null,
              "importe_pagado_ultimas_48_hrs": null,
              "subsidio_empleo": null,
              "cantidad_a_cargo": 0,
              "impuesto_a_depositos_efectivo_acreditable": null,
              "aplica_primera_parcialidad": "NO",
              "compensaciones": null,
              "credito_ieps_diesel": null,
              "diesel_automotriz_transporte": null,
              "cantidad_a_favor": null,
              "uso_infraestructura_carretera_cuota": null,
              "cantidad_a_pagar": 0,
              "otros_estimulos": null,
              "importe_1ra_parcialidad": null,
              "importe_sin_1ra_parcialidad": null
            },
            "r12_isr_retenciones_por_salarios": {
              "a_cargo": 415945,
              "acreditamiento_sorteos": null,
              "parte_actualizada": 0,
              "diesel_marino": null,
              "recargos": 0,
              "total_aplicaciones": 379,
              "multa_por_correccion": null,
              "fecha_pago_realizado_anterioridad": null,
              "total_de_contribuciones": 415945,
              "monto_pagado_anterioridad": null,
              "credito_al_salario": null,
              "importe_pagado_ultimas_48_hrs": null,
              "subsidio_empleo": 379,
              "cantidad_a_cargo": 415566,
              "impuesto_a_depositos_efectivo_acreditable": null,
              "aplica_primera_parcialidad": "NO",
              "compensaciones": null,
              "credito_ieps_diesel": null,
              "diesel_automotriz_transporte": null,
              "cantidad_a_favor": null,
              "otros_estimulos": null,
              "cantidad_a_pagar": 415566,
              "importe_1ra_parcialidad": null,
              "importe_sin_1ra_parcialidad": null
            },
            "r13_isr_retenciones_por_asimilados_a_salarios": {
              "a_cargo": 254588,
              "acreditamiento_sorteos": null,
              "parte_actualizada": 0,
              "diesel_marino": null,
              "recargos": 0,
              "total_aplicaciones": 0,
              "multa_por_correccion": null,
              "fecha_pago_realizado_anterioridad": null,
              "total_de_contribuciones": 254588,
              "monto_pagado_anterioridad": null,
              "credito_al_salario": null,
              "importe_pagado_ultimas_48_hrs": null,
              "subsidio_empleo": null,
              "cantidad_a_cargo": 254588,
              "impuesto_a_depositos_efectivo_acreditable": null,
              "aplica_primera_parcialidad": "NO",
              "compensaciones": null,
              "credito_ieps_diesel": null,
              "diesel_automotriz_transporte": null,
              "cantidad_a_favor": null,
              "otros_estimulos": null,
              "cantidad_a_pagar": 254588,
              "importe_1ra_parcialidad": null,
              "importe_sin_1ra_parcialidad": null
            },
            "r14_isr_retenciones_por_servicios_profesionales": {
              "a_cargo": 104482,
              "acreditamiento_sorteos": null,
              "parte_actualizada": 0,
              "diesel_marino": null,
              "recargos": 0,
              "total_aplicaciones": 0,
              "multa_por_correccion": null,
              "fecha_pago_realizado_anterioridad": null,
              "total_de_contribuciones": 104482,
              "monto_pagado_anterioridad": null,
              "credito_al_salario": null,
              "importe_pagado_ultimas_48_hrs": null,
              "subsidio_empleo": null,
              "cantidad_a_cargo": 104482,
              "impuesto_a_depositos_efectivo_acreditable": null,
              "aplica_primera_parcialidad": "NO",
              "compensaciones": null,
              "credito_ieps_diesel": null,
              "diesel_automotriz_transporte": null,
              "cantidad_a_favor": null,
              "otros_estimulos": null,
              "cantidad_a_pagar": 104482,
              "importe_1ra_parcialidad": null,
              "importe_sin_1ra_parcialidad": null
            }
          },
          "determinacion_iva": {
            "montos_actos_actividades_pagados": {
              "total_actos_actividades_pagados_tasa_16": 2094706,
              "total_actos_actividades_pagados_importacion_bienes_tasa_11": null,
              "total_actos_actividades_sujetos_estimulo_rfn": 0,
              "total_actos_actividades_pagados_tasa_0": 0,
              "total_actos_actividades_pagados_importacion_bienes_tasa_16": null,
              "total_actos_actividades_pagados_no_paga_iva": 0
            },
            "detalle_total_actos_actividades_pagados_tasa_16": {
              "intereses_pagados_tasa_16": null,
              "otros_actos_pagados_tasa_16": 2094706,
              "regalias_pagadas_tasa_16": null,
              "total_actos_pagados_tasa_16": 2094706
            },
            "determinacion_iva_acreditable": {
              "total_iva_actos_actividades_pagados_tasa_16": 335153,
              "iva_trasladado_o_pagado_adquisicion_bienes_distintos_inversiones_actos_no_obligados_pago_impuesto": null,
              "iva_pagado_sujeto_estimulo_rfn": null,
              "iva_trasladado_o_pagado_importacion_inversiones_actos_no_obligados_pago_impuesto": null,
              "total_actos_actividades_pagados_importacion_bienes_tasa_16": 0,
              "iva_bienes_utilizados_indistintamente_actos_gravados_o_actos_no_obligados_pago_impuesto": 0,
              "proporcion_utilizada_conforme_art_5": null,
              "total_iva_trasladado_contribuyente": 335153,
              "proporcion_utilizada_conforme_art_5_b": null,
              "iva_trasladado_adquisicion_bienes_distintos_inversiones_actos_gravados": 335153,
              "iva_pagado_importacion_adquisicion_bienes_distintos_inversiones_actos_gravados": null,
              "iva_acreditable": 335153,
              "monto_acreditable_actualizado_a_incrementar_derivado_ajuste": null,
              "iva_pagado_importacion_inversiones_actos_gravados": null,
              "total_iva_acreditable_periodo": 335153,
              "total_iva_actos_actividades_gravados": 335153,
              "total_actos_actividades_pagados_importacion_bienes_tasa_11": null,
              "iva_trasladado_adquisicion_inversiones_actos_gravados": null,
              "iva_acreditable_bienes_utilizados_indistintamente_actos_gravados_o_actos_no_obligados_pago_impuesto": null
            },
            "determinacion_iva": {
              "valor_actos_actividades_gravados_tasa_16": 6457950,
              "otras_cantidades_a_favor_contribuyente": null,
              "valor_actos_actividades_gravados_tasa_11": null,
              "cantidad_a_cargo": 312421,
              "valor_actos_actividades_gravados_tasa_0_exportacion": null,
              "saldo_a_favor": null,
              "valor_actos_actividades_gravados_tasa_9_otros": null,
              "devolucion_inmediata_obtenida": null,
              "suma_actos_actividades_gravados": 6457950,
              "saldo_a_favor_periodo": 0,
              "valor_actos_actividades_no_se_deba_pagar_impuesto_exentos": null,
              "acreditamiento_saldo_favor_periodos_anteriores": null,
              "impuesto_causado": 1033272,
              "diferencia_a_cargo": 312421,
              "cantidad_actualizada_a_reintegrarse_derivada_de_ajuste": null,
              "ieps_acreditable_alcohol": null,
              "iva_retenido_al_contribuyente": 385698,
              "impuesto_a_cargo": 312421,
              "total_iva_acreditable": 335153,
              "remanente_saldo_favor_ieps_alcohol": null,
              "otras_cantidades_a_cargo_contribuyente": null
            },
            "detalle_valor_actos_actividades_gravados_tasa_16": {
              "intereses_cobrados_tasa_16": null,
              "otros_actos_actividades_gravados_tasa_16": 6457950,
              "regalias_entre_partes_relacionadas_tasa_16": null,
              "total_actos_actividades_gravados_tasa_16": 6457950
            }
          },
          "detalle_pago_iva": {
            "r21_iva": {
              "a_cargo": 312421,
              "cretificados_tesofe": null,
              "a_favor": null,
              "diesel_marino": null,
              "parte_actualizada": 0,
              "total_aplicaciones": 0,
              "recargos": 0,
              "fecha_pago_realizado_anterioridad": null,
              "multa_por_correccion": null,
              "monto_pagado_anterioridad": null,
              "total_de_contribuciones": 312421,
              "importe_pagado_ultimas_48_hrs": null,
              "credito_al_salario": null,
              "cantidad_a_cargo": 312421,
              "subsidio_empleo": null,
              "aplica_primera_parcialidad": "NO",
              "compensaciones": null,
              "diesel_automotriz_transporte": null,
              "uso_infraestructura_carretera_cuota": null,
              "cantidad_a_favor": null,
              "otros_estimulos": null,
              "cantidad_a_pagar": 312421,
              "importe_1ra_parcialidad": null,
              "importe_sin_1ra_parcialidad": null
            },
            "r21_iva_retenciones": {
              "a_cargo": 111448,
              "diesel_marino": null,
              "parte_actualizada": 0,
              "total_aplicaciones": 0,
              "recargos": 0,
              "fecha_pago_realizado_anterioridad": null,
              "multa_por_correccion": null,
              "monto_pagado_anterioridad": null,
              "total_de_contribuciones": 111448,
              "importe_pagado_ultimas_48_hrs": null,
              "credito_al_salario": null,
              "cantidad_a_cargo": 111448,
              "subsidio_empleo": null,
              "aplica_primera_parcialidad": "NO",
              "compensaciones": null,
              "credito_ieps_diesel": null,
              "otros_estimulos": null,
              "cantidad_a_favor": null,
              "cretificados_tesofe": null,
              "cantidad_a_pagar": 111448,
              "importe_1ra_parcialidad": null,
              "importe_sin_1ra_parcialidad": null
            }
          },
          "pdf": "===PDF_BINARY====",
          "receipt_pdf": "===PDF_BINARY====",
          "type": "monthly"
        }
      },
      "TaxStatusPersonalListPaginated": {
        "summary": "Personal Tax Status",
        "description": "Example of a list of personal tax status",
        "value": {
          "count": 101,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "e88d29d1-3dc6-407f-825c-a9b50453e349",
              "link": "401d5a8e-79e2-472e-a1ca-8f4646f5cb24",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "place_and_date_of_issuance": "BUENAVENTURA, CIUDAD DE MEXICO A 22 DE FEBRERO DE 2021",
              "official_name": "Alfredo Gonzalo Robin",
              "id_cif": "2274235873432",
              "tax_payer_information": {
                "rfc": "GGTF770303G7",
                "curp": "BEMP930403HDFLLT00",
                "name": "Alfredo",
                "first_last_name": "Gonzalo",
                "second_last_name": "Robin",
                "start_operations_date": "2000-06-01",
                "status_padron": "ACTIVO",
                "last_status_change_date": "2000-06-01",
                "commercial_name": "Alfredo Gonzalo Robin",
                "social_name": null,
                "email": "alfredo@robin.com",
                "phone": "667507132"
              },
              "address": {
                "postal_code": "21255",
                "street_type": "BOULEVARD (BLVD.)",
                "street": "GENERAL GIMENO",
                "exterior_number": "4360",
                "interior_number": "PLANTA BAJA",
                "suburb": "BUENAVENTURA",
                "locality": null,
                "municipality": "ALTOS DE MIRAMAR",
                "state": "CIUDAD DE MEXICO",
                "between_street": [
                  {
                    "street_one": "CALLE PRINCIPE",
                    "street_two": "CALLE NUEVA ROMA"
                  }
                ]
              },
              "economic_activity": [
                {
                  "order": "1",
                  "economic_activity": "Asalariado",
                  "percentage": "100",
                  "initial_date": "2014-11-05",
                  "end_date": null
                }
              ],
              "regimes": [
                {
                  "regime": "R√©gimen de Sueldos y Salarios e Ingresos Asimilados a Salarios",
                  "initial_date": "2003-01-01",
                  "end_date": null
                }
              ],
              "obligations": [
                {
                  "obligation": "Declaraci√≥n informativa de IVA con la anual de ISR",
                  "expiration": "Conjuntamente con la declaraci√≥n anual del ejercicio.",
                  "initial_date": "2004-03-31",
                  "end_date": null
                },
                {
                  "obligation": "Pago definitivo mensual de IVA.",
                  "expiration": "A m√°s tardar el d√≠a 17 del mes inmediato posterior al periodo que corresponda.",
                  "initial_date": "2004-03-31",
                  "end_date": null
                }
              ],
              "digital_stamp": "||2020/09/26|GHTF980303F7|CONSTANCIA DE SITUACI√ìN FISCAL|2044441088666600000034||",
              "digital_stamp_chain": "ExpsnSA9t1adG7bn+Jj23kj43JK+XbMPxdOppwabhXD+pXseSqYowWWDna0mpUk3264lkj2345j23faNZB852dCDt9KAjel=",
              "pdf": "=PDF-STRING="
            }
          ]
        }
      },
      "TaxStatusBusinessListPaginated": {
        "summary": "Business Tax Status",
        "description": "Example of a list of business tax status",
        "value": {
          "count": 101,
          "next": "https://sandbox.belvo.com/api/{endpoint}/?page=2",
          "previous": null,
          "results": [
            {
              "id": "6de34cb3-bf0d-445d-b832-7ec7781e2c6f",
              "link": "0b2edc42-7214-4c68-b22e-ae6885bf7c07",
              "collected_at": "2022-02-09T08:45:50.406032Z",
              "created_at": "2022-02-09T08:46:20.406032Z",
              "place_and_date_of_issuance": "BUENAVENTURA, CIUDAD DE MEXICO A 22 DE FEBRERO DE 2021",
              "official_name": "ACNE SA DE CV",
              "id_cif": "2274235873432",
              "tax_payer_information": {
                "rfc": "GHTF980303F7",
                "curp": null,
                "name": null,
                "first_last_name": null,
                "second_last_name": null,
                "start_operations_date": "1995-08-01",
                "status_padron": "ACTIVO",
                "last_status_change_date": "1995-08-01",
                "commercial_name": null,
                "social_name": "ACNE SA DE CV",
                "email": "contact@acne.com",
                "phone": "555507122"
              },
              "address": {
                "postal_code": "21255",
                "street_type": "BOULEVARD (BLVD.)",
                "street": "GENERAL GIMENO",
                "exterior_number": "4360",
                "interior_number": "PLANTA BAJA",
                "suburb": "BUENAVENTURA",
                "locality": null,
                "municipality": "ALTOS DE MIRAMAR",
                "state": "CIUDAD DE MEXICO",
                "between_street": [
                  {
                    "street_one": "CALLE PRINCIPE",
                    "street_two": "CALLE NUEVA ROMA"
                  }
                ]
              },
              "economic_activity": [
                {
                  "order": "1",
                  "economic_activity": "Otros servicios profesionales, cient√≠ficos y t√©cnicos",
                  "percentage": "100",
                  "initial_date": "2014-11-05",
                  "end_date": null
                }
              ],
              "regimes": [
                {
                  "regime": "R√©gimen General de Ley Personas Morales",
                  "initial_date": "2003-01-01",
                  "end_date": null
                }
              ],
              "obligations": [
                {
                  "obligation": "Declaraci√≥n informativa de IVA con la anual de ISR",
                  "expiration": "Conjuntamente con la declaraci√≥n anual del ejercicio.",
                  "initial_date": "2004-03-31",
                  "end_date": null
                },
                {
                  "obligation": "Pago definitivo mensual de IVA.",
                  "expiration": "A m√°s tardar el d√≠a 17 del mes inmediato posterior al periodo que corresponda.",
                  "initial_date": "2004-03-31",
                  "end_date": null
                }
              ],
              "digital_stamp": "||2020/04/26|GHTF980303F7|CONSTANCIA DE SITUACI√ìN FISCAL|2044441088666600000034||",
              "digital_stamp_chain": "EtenSA9t1adG7bn+Jj23kj43JK+XbMPxdOppwabhXD+pXseSqYowWWDna0mpUk3264lkj2345j23faNZB852dCDt9KAjow=",
              "pdf": "=PDF-STRING="
            }
          ]
        }
      },
      "TaxStatusPersonalList": {
        "summary": "Personal Tax Status",
        "description": "Example of a list of personal tax status",
        "value": {
          "id": "6de34cb3-bf0d-445d-b832-7ec7781e2c6f",
          "link": "401d5a8e-79e2-472e-a1ca-8f4646f5cb24",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "place_and_date_of_issuance": "BUENAVENTURA, CIUDAD DE MEXICO A 22 DE FEBRERO DE 2021",
          "official_name": "Alfredo Gonzalo Robin",
          "id_cif": "2274235873432",
          "tax_payer_information": {
            "rfc": "GGTF770303G7",
            "curp": "BEMP930403HDFLLT00",
            "name": "Alfredo",
            "first_last_name": "Gonzalo",
            "second_last_name": "Robin",
            "start_operations_date": "2000-06-01",
            "status_padron": "ACTIVO",
            "last_status_change_date": "2000-06-01",
            "commercial_name": "Alfredo Gonzalo Robin",
            "social_name": null,
            "email": "alfredo@robin.com",
            "phone": "667507132"
          },
          "address": {
            "postal_code": "21255",
            "street_type": "BOULEVARD (BLVD.)",
            "street": "GENERAL GIMENO",
            "exterior_number": "4360",
            "interior_number": "PLANTA BAJA",
            "suburb": "BUENAVENTURA",
            "locality": null,
            "municipality": "ALTOS DE MIRAMAR",
            "state": "CIUDAD DE MEXICO",
            "between_street": [
              {
                "street_one": "CALLE PRINCIPE",
                "street_two": "CALLE NUEVA ROMA"
              }
            ]
          },
          "economic_activity": [
            {
              "order": "1",
              "economic_activity": "Asalariado",
              "percentage": "100",
              "initial_date": "2014-11-05",
              "end_date": null
            }
          ],
          "regimes": [
            {
              "regime": "R√©gimen de Sueldos y Salarios e Ingresos Asimilados a Salarios",
              "initial_date": "2003-01-01",
              "end_date": null
            }
          ],
          "obligations": [
            {
              "obligation": "Declaraci√≥n informativa de IVA con la anual de ISR",
              "expiration": "Conjuntamente con la declaraci√≥n anual del ejercicio.",
              "initial_date": "2004-03-31",
              "end_date": null
            },
            {
              "obligation": "Pago definitivo mensual de IVA.",
              "expiration": "A m√°s tardar el d√≠a 17 del mes inmediato posterior al periodo que corresponda.",
              "initial_date": "2004-03-31",
              "end_date": null
            }
          ],
          "digital_stamp": "||2020/09/26|GHTF980303F7|CONSTANCIA DE SITUACI√ìN FISCAL|2044441088666600000034||",
          "digital_stamp_chain": "ExpsnSA9t1adG7bn+Jj23kj43JK+XbMPxdOppwabhXD+pXseSqYowWWDna0mpUk3264lkj2345j23faNZB852dCDt9KAjel=",
          "pdf": "=PDF-STRING="
        }
      },
      "TaxStatusBusinessList": {
        "summary": "Business Tax Status",
        "description": "Example of a list of business tax status",
        "value": {
          "id": "6de34cb3-bf0d-445d-b832-7ec7781e2c6f",
          "link": "0b2edc42-7214-4c68-b22e-ae6885bf7c07",
          "collected_at": "2022-02-09T08:45:50.406032Z",
          "created_at": "2022-02-09T08:46:20.406032Z",
          "place_and_date_of_issuance": "BUENAVENTURA, CIUDAD DE MEXICO A 22 DE FEBRERO DE 2021",
          "official_name": "ACNE SA DE CV",
          "id_cif": "2274235873432",
          "tax_payer_information": {
            "rfc": "GHTF980303F7",
            "curp": null,
            "name": null,
            "first_last_name": null,
            "second_last_name": null,
            "start_operations_date": "1995-08-01",
            "status_padron": "ACTIVO",
            "last_status_change_date": "1995-08-01",
            "commercial_name": null,
            "social_name": "ACNE SA DE CV",
            "email": "contact@acne.com",
            "phone": "555507122"
          },
          "address": {
            "postal_code": "21255",
            "street_type": "BOULEVARD (BLVD.)",
            "street": "GENERAL GIMENO",
            "exterior_number": "4360",
            "interior_number": "PLANTA BAJA",
            "suburb": "BUENAVENTURA",
            "locality": null,
            "municipality": "ALTOS DE MIRAMAR",
            "state": "CIUDAD DE MEXICO",
            "between_street": [
              {
                "street_one": "CALLE PRINCIPE",
                "street_two": "CALLE NUEVA ROMA"
              }
            ]
          },
          "economic_activity": [
            {
              "order": "1",
              "economic_activity": "Otros servicios profesionales, cient√≠ficos y t√©cnicos",
              "percentage": "100",
              "initial_date": "2014-11-05",
              "end_date": null
            }
          ],
          "regimes": [
            {
              "regime": "R√©gimen General de Ley Personas Morales",
              "initial_date": "2003-01-01",
              "end_date": null
            }
          ],
          "obligations": [
            {
              "obligation": "Declaraci√≥n informativa de IVA con la anual de ISR",
              "expiration": "Conjuntamente con la declaraci√≥n anual del ejercicio.",
              "initial_date": "2004-03-31",
              "end_date": null
            },
            {
              "obligation": "Pago definitivo mensual de IVA.",
              "expiration": "A m√°s tardar el d√≠a 17 del mes inmediato posterior al periodo que corresponda.",
              "initial_date": "2004-03-31",
              "end_date": null
            }
          ],
          "digital_stamp": "||2020/04/26|GHTF980303F7|CONSTANCIA DE SITUACI√ìN FISCAL|2044441088666600000034||",
          "digital_stamp_chain": "EtenSA9t1adG7bn+Jj23kj43JK+XbMPxdOppwabhXD+pXseSqYowWWDna0mpUk3264lkj2345j23faNZB852dCDt9KAjow=",
          "pdf": null
        }
      }
    }
  },
  "tags": [
    {
      "name": "Institutions",
      "description": "An **institution** is an entity that Belvo can access information from. It can be a:\n\n- bank institution, such as Banamex retail banking or HSBC business banking.\n- fiscal institution, such as the Servicio de Administraci√≥n Tributaria (SAT) in Mexico.\n\n<img src=\"https://files.readme.io/fc3891f-institutions_api_reference.png\" alt=\"fiscal-endpoints\" width=\"650\">\n\nYou can see a complete list of institutions by either consulting our [Institutions article](https://developers.belvo.com/docs/institution) or making a List request to this endpoint."
    },
    {
      "name": "Links",
      "description": "A **Link** is a set of credentials associated to an end-user's access to an **institution**.\n\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #808080;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\">\n<strong>Example: </strong> The username and password combination used to log in to an online banking application would be a link.\n</div>\n\n\nYou will need to register a **Link** before accessing information from that specific end-user, such as account or transaction details.\n\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\">\n<strong>Note: </strong> We recommend using our <a href=\"https://developers.belvo.com/docs/connect-widget\" target=\"_blank\">Connect Widget</a> to handle link creation and link status updates.\n</div>\n\n\nYou have the possibility to register two types of links:\n\n\n### Recurrent links (default)\n\n\nWith recurrent links, Belvo automatically refreshes information weekly and notifies you via [Webhooks](https://developers.belvo.com/docs/webhooks) so you always have up-to-date data. Then, when you receive the webhook, you can make GET requests to the List or Detail endpoints to instantly access up-to-date information, without needing to connect to the institution.\n\n\n<img src=\"https://files.readme.io/7b6c0d4-Recurrent_Link_FLow.png\" alt=\"fiscal-endpoints\" width=\"950\">\n\n\nYou can also make POST calls directly to the institution, as with single links, as soon as the link is created. However, we recommend you follow the flow described above (waiting for the webhook event) for a more optimal experience.\n\n\n### Single links\n\n\nSingle links are used to perform ad hoc data access to accounts, owners, transactions, and so on. For example, you can use it when you want to do an underwriting process to assess risk before lending money.\n\nFor single links, you have to perform POST calls to an institution **every time** you want to access fresh data.\n\n<img src=\"https://files.readme.io/eda7956-Single_Link_Flow.svg\" alt=\"fiscal-endpoints\" width=\"950\">"
    },
    {
      "name": "Banking API introduction",
      "description": "Use our Banking API product to access account, balance, owner, bank statement, as well as transaction data from banking institutions.<br>\n\n\n![](https://files.readme.io/894213c-Banking_and_Gig.png \"Banking and Gig.png\")\n\n\n| API Endpoint                | Description                                                               | Supported institutions |\n| --------------------------- | ------------------------------------------------------------------------- | ---------------------- |\n| `api/accounts/`             | Get information about your customer's bank accounts.                      | Banking and Gig        |\n| `api/balances/`             | Get the balance at the end of each day for your customer's bank accounts. | Banking                |\n| `api/owners/`               | Get the details of an account owner.                                      | Banking and Gig        |\n| `api/transactions/`         | Get a list of bank transactions with metadata.                            | Banking and Gig        |\n| `investments/portfolios/`   | Get information about your customer's investment portfolios.              | Banking                |\n| `investments/transactions/` | Get a list of investment transactions with metadata.                      | Banking                |\n"
    },
    {
      "name": "Accounts",
      "description": "An **account** is the representation of a bank account inside a financial institution. A user can have one or more accounts in an institution.\n\n\nFor example, one user (or link) can have a checking account, several credit cards, and a loan account.\n\nQuerying for a user's account information is useful as you can get information regarding:\n\n- what types of accounts the user has\n- the balance for each account (savings, checking, credit card, loan, and so on)\n"
    },
    {
      "name": "Transactions",
      "description": "A **transaction** contains the detailed information of each movement inside an account. For example, a purchase at a store or a restaurant."
    },
    {
      "name": "Balances",
      "description": "A **balance** represents the amount of funds available in a checking or savings account over a period of time.\n\n- If your Balance request is not for a checking or savings account, we return an empty array.\n- If we cannot calculate the balance for a given day within your requested period, the `balance` and `current_balance` fields will return `null` for that day.\n\n\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #5bc0de;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\"> Savings accounts that do not have any associated transactions (for example, some *poupan√ßa* accounts in Brazil) will not contain accurate Balance information. We do not recommend using the Balance endpoint for these types of accounts.\n\nSavings accounts vary from institution to institution, so we recommend that you first use our [Retrieve transactions for a link](https://developers.belvo.com/reference/retrievetransactions) request, adding the `account` in the request body, to see if the Savings account has any associated transactions. </div>"
    },
    {
      "name": "Owners",
      "description": "An **owner** represents the person who has access to a Link and is the owner of all the accounts inside the Link.\n\nYou can use this endpoint in order to get useful information about your client, such as:\n\n- their full name\n- key contact information\n- information about the ID document they used when opening the account"
    },
    {
      "name": "Investment Portfolios (BETA)",
      "description": "<div style=\"background-color:#bce9af;padding: 6px; border-radius: 4px\">\n      <strong>üéâ In Beta </strong><br>\n      This resource is currently in open beta for all users. If you see any issues, don't hesitate to contact our support team. \n      </div>\n\n\n\nInvestment Portfolios are in open BETA for everyone to use. At the moment we only support the following institutions and investment products:\n\n|Institution|Portfolio|Instruments|\n|---|---|---|\n|Banco de Brazil Retail (Brazil)|`FIXED_INCOME`|`DEPOSIT`|\n|Banco Inter Retail (Brazil)|`FIXED_INCOME`|`DEPOSIT`|\n|Bradesco Retail (Brazil)|`FIXED_INCOME`, `VARIABLE_INCOME` |`DEPOSIT`, `FUND`|\n|BTG Investimentos (Brazil) | `FIXED_INCOME`, `VARIABLE_INCOME`|`DEPOSIT`, `BOND`, `FUND`, `STOCKS`|\n|CaixaBank Retail (Brazil) | `FIXED_INCOME`, `VARIABLE_INCOME`|`DEPOSIT`, `FUND`|\n|Itau Retail (Brazil)|`FIXED_INCOME`, `VARIABLE_INCOME`|`DEPOSIT`, `FUND`, `STOCKS`|\n|Orama Retail (Brazil)|`FIXED_INCOME`, `VARIABLE_INCOME`|`BOND`, `FUND`, `STOCKS`|\n|Santander Retail (Brazil)|`FIXED_INCOME`, `VARIABLE_INCOME`|`DEPOSIT`, `BOND`, `FUND`|\n|XP Investimentos (Brazil) | `FIXED_INCOME`, `VARIABLE_INCOME`|`DEPOSIT`, `BOND`, `FUND`, `STOCKS`|"
    },
    {
      "name": "Investment Transactions (BETA)",
      "description": "<div style=\"background-color:#bce9af;padding: 6px; border-radius: 4px\">\n      <strong>üéâ In Beta </strong><br>\n      This resource is currently in open beta for all users. If you see any issues, don't hesitate to contact our support team. \n      </div>\n\n\nInvestment Transactions are in open BETA for everyone to use. At the moment we only support the following institutions:\n\n- XP Investimentos (Brazil)"
    },
    {
      "name": "Receivable Transactions (BETA)",
      "description": "<div style=\"background-color:#bce9af;padding: 6px; border-radius: 4px\">\n      <strong>üéâ In Beta </strong><br>\n      This resource is currently in open beta for all users. If you see any issues, don't hesitate to contact our support team. \n      </div>\n\n\nWith our receivable transactions resource, you can gain access to every transaction processed by the end user (business) conducted through a POS terminal. For each transaction, we return the:\n\n- gross and net amounts\n- type of card used\n- fees applied to the transaction\n- and more!"
    },
    {
      "name": "Enrichment API introduction",
      "description": "Belvo's Enrichment API are a set of endpoints that return additional insights on your user's banking data. \n\n- **Incomes**: Use this endpoint to verify your user's income.\n- **Recurring Expenses**: Use this endpoint to identify the recurrent expenses (such as Netflix subscriptions) that your user pays.\n- **Risk Insights**: Use this endpoint to retrieve key data points to feed into your risk evaluation models."
    },
    {
      "name": "Incomes",
      "description": "Use the Incomes endpoint to gather insights on an account's income sources for the past 365 days. The endpoint is particularly useful when you want to verify a person's income.\n\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\">\n    <strong>Info: </strong> The incomes resource is <b>only</b> available for Checking and Savings\naccounts associated with banking links.\n </div>"
    },
    {
      "name": "Recurring Expenses",
      "description": "Belvo's Recurring Expenses API allows you to identify a user's regular payments for subscription services, such as Netflix or gym memberships, as well as utility payments, such as electricity or phone bills. We return information for up to 365 days.\n\n\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\">\n    <strong>Info: </strong> The recurring expenses resource is <b>only</b> available for Checking and Savings accounts associated with banking links.\n </div>"
    },
    {
      "name": "Risk Insights",
      "description": "Belvo's Risk Insights endpoint exposes a set of features that can be used to improve your company's credit risk and opportunity decisions. This set of features can be used as building blocks to create or iterate on your credit score using transactional banking data to improve the predictive power of your models. You can use these components as you require and make the most sense for your specific use case. \n\nWe take up to 90 days of transactional data from the user's checking, savings, loans, and credit card accounts to calculate the risk insights.\n\nIf you need to know the currency of the account, do a GET Details to the Accounts endpoint (using the account ID you receive from in the accounts array of the response)."
    },
    {
      "name": "Fiscal API introduction",
      "description": "Use our **Fiscal API** product to access invoices, tax compliance statuses, tax returns, tax retentions, and tax statuses from the fiscal authority in a given country.\n\n\n<img src=\"https://files.readme.io/97c76a8-Fiscal_endpoints_horizontal.png\" alt=\"fiscal-endpoints\" width=\"750\">\n\n\n| API Endpoint | Description |\n|-----------|-------|\n| `api/invoices/` | Get all the information about the invoices sent and received by a person or a business that have been certified by the tax authority. |\n| `api/tax-compliance-status/`| Get information about whether a person or business is complying to their tax obligations.|\n| `api/tax-returns/` | Get all the information about the tax returns sent every year to the tax authority by a person or a business. |\n| `api/tax-retentions/` | Get information about tax retention invoices sent and received by a business or a person. |\n| `api/tax-status/` | Get all the information about the tax situation of a person or a business. |\n\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\">\n<strong>Note: </strong> You can only access this information with <b>fiscal</b> links.\n</div>"
    },
    {
      "name": "Invoices",
      "description": "An **invoice** is the representation of an electronic invoice, that can be received or sent, by a business or an individual and has been uploaded to the fiscal institution's website. Multiple INFLOW (invoice received) and OUTFLOW (invoice sent) invoices can be retrieved inside each link coming from a fiscal institution."
    },
    {
      "name": "Tax returns",
      "description": "A **tax return** is the representation of the tax return document sent every year by a person or a business to the tax authority in the country.\n\nThe tax return data structure will be different depending on if it is related to a person or a business (you will find examples for both in the endpoints below)."
    },
    {
      "name": "Tax status",
      "description": "Our **Tax status** endpoint lets you retrieve information about a person's or business's tax situation, according to the country's tax authority. \n\n- For SAT (Mexico), this information is extracted from the *Constancia de situaci√≥n fiscal* document.\n- For DIAN (Colombia), this information is extracted from the *Registro √önico Tributario* document."
    },
    {
      "name": "Tax retentions",
      "description": "A **tax retention** is the amount of money that the payer must deduct from the total amount of a purchase invoice, according to the fiscal institution‚Äôs regulations.\n\nWith Belvo‚Äôs Tax Retentions resource, you can quickly and easily consult information regarding a user‚Äôs tax retentions over a given period or for a specific invoice. This is particularly useful when you want to aid your user in their tax returns as for each invoice you receive the:\n\n- invoice amount\n- amount that is exempt from taxation\n- total amount that is taxed\n- breakdown of all the taxes applied to the invoice"
    },
    {
      "name": "Tax compliance status",
      "description": "A **tax compliance status** indicates about whether a person or business is complying with their tax obligations at the moment of the request. The information is extracted from SAT's _Opinion de cumplimiento de Obligaciones Fiscales_ document."
    }
  ],
  "paths": {
    "/api/links/": {
      "get": {
        "tags": [
          "Links"
        ],
        "operationId": "ListLinks",
        "summary": "List all links",
        "description": "Get a paginated list of all the existing links in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "access_mode",
            "in": "query",
            "description": "Return links only with this access mode. Can be either `single` or `recurrent`.",
            "schema": {
              "type": "string",
              "example": "single"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "Return links that were last updated in Belvo's database on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-01"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return links that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return links that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return links that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return links that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return links that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "created_by__not_in",
            "in": "query",
            "description": "Return links that were not created by these Belvo users.",
            "schema": {
              "type": "string",
              "example": "578947e2-3c9a-4401-bbad-59b2f2d2b91b,d3d941ab-4ca5-43c1-8b23-db329ee4cb7e"
            }
          },
          {
            "name": "external_id",
            "in": "query",
            "description": "Return links with this external ID.",
            "schema": {
              "type": "string",
              "example": "InternalUser4000"
            }
          },
          {
            "name": "external_id__in",
            "in": "query",
            "description": "Return links with these external IDs.",
            "schema": {
              "type": "string",
              "example": "InternalUser4000,InternalUser4001"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information only for this `link.id`.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information only for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e"
            }
          },
          {
            "name": "institution",
            "in": "query",
            "description": "Return links created for this institution (use the Belvo-designated name, such as `erebor_mx_retail`).",
            "schema": {
              "type": "string",
              "example": "erebor_mx_retail"
            }
          },
          {
            "name": "institution__in",
            "in": "query",
            "description": "Return links created for these institutions (use the Belvo-designated name, such as `erebor_mx_retail` and `gringotts_co_retail`).",
            "schema": {
              "type": "string",
              "example": "erebor_mx_retail,gringotts_co_retail"
            }
          },
          {
            "name": "institution_user_id",
            "in": "query",
            "description": "Return links with this specific institution user ID.",
            "schema": {
              "type": "string",
              "example": "ezFoxjPDr7YnASnOaft5F3zt7D0kurgDNlLtZFjxUo0="
            }
          },
          {
            "name": "institution_user_id__in",
            "in": "query",
            "description": "Return links with these institution user IDs.",
            "schema": {
              "type": "string",
              "example": "ezFoxjPDr7YnASnOaft5F3zt7D0kurgDNlLtZFjxUo0=,YwuTM0uEEh1BbVgDZBcNpa_-Tm3l2q8ZkZNrlhp-pNA="
            }
          },
          {
            "name": "refresh_rate",
            "in": "query",
            "description": "Return links with this refresh rate. Choose between `6h`, `12h`, `24h`, `7d`, or `30d`.",
            "schema": {
              "type": "string",
              "example": "24h"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return links with this status. Choose between `valid`, `invalid`, `unconfirmed`, or `token_required`.",
            "schema": {
              "type": "string",
              "example": "invalid"
            }
          },
          {
            "name": "status__in",
            "in": "query",
            "description": "Return links with these statuses. Choose between `valid`, `invalid`, `unconfirmed`, or `token_required`.",
            "schema": {
              "type": "string",
              "example": "invalid,unconfirmed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponseLink"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/links/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List links\nfor link in client.Links.list():\n    pprint(link)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.links.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.links.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Links"
        ],
        "operationId": "RegisterLink",
        "summary": "Register a new link",
        "description": "Register a new link with your Belvo account.\n\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\">\n<strong>Note: </strong> We recommend using our <a href=\"https://developers.belvo.com/docs/connect-widget\" target=\"_blank\">Connect Widget</a> to handle link creation and link status updates.\n</div>\n",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinksRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://sandbox.belvo.com/api/links/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"institution\": \"\",\n    \"username\": \"\",\n    \"password\": \"\"\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Register a link\nlink = client.Links.create(\n    institution=\"erebor_mx_retail\",\n    username=\"johndoe\",\n    password=\"supersecret\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.links.register(\n  institution: 'erebor_mx_retail',\n  username: 'johndoe',\n  password: 'supersecret'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.links.register('erebor_mx_retail', 'johndoe', 'supersecret')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Links"
        ],
        "operationId": "PatchLinks",
        "summary": "Complete a links request",
        "description": "Used to resume a Link register session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBodyWithoutSaveData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X PATCH \\\n  https://sandbox.belvo.com/api/links/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n      \"session\": \"\",\n      \"token\": \"\",\n      \"link\": \"\"\n  }' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume a link\nlink = client.Links.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.links.resume(\n  session_id: 'your-session-id',\n  token: 'otp-token',\n  link: 'link-id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.links.resume('yourSessionId', 'yourOTPToken', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/links/{id}/": {
      "get": {
        "tags": [
          "Links"
        ],
        "operationId": "DetailLink",
        "summary": "Get a link's details",
        "description": "Get the details of a specific link.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `link.id` you want to get detailed information about."
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/links/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get a link\nlink = client.Links.get(id=\"link_id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.links.detail id: 'link-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.links.detail('linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "put": {
        "tags": [
          "Links"
        ],
        "operationId": "UpdateLink",
        "summary": "Update a link's credentials",
        "description": "Update the credentials of a specific link. If the successfully updated link is a recurrent one, we automatically trigger an update of the link. If we find fresh data, you'll [receive historical update](https://developers.belvo.com/docs/webhooks) webhooks.\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\"> <strong>Note: </strong> We recommend using our <a href=\"https://developers.belvo.com/docs/connect-widget\" target=\"_blank\">Connect Widget</a> to handle updating <code>invalid</code> or <code>token_required</code> links. </div>\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `link.id` you want to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinksPutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Link"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X PUT https://sandbox.belvo.com/api/links/{id} \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n      \"password\": \"\"\n  }' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Update a link\nlink = client.Links.put(link=\"link_id\", password=\"password\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.links.update(link: 'link-id', password: 'new-password')\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.links.update('linkID', 'newSuperSecret')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Links"
        ],
        "operationId": "DestroyLink",
        "summary": "Delete a link",
        "description": "Delete a specific link and all associated accounts, transactions, and owners from your Belvo account.\n# Deleting links in batches\nTo delete links in bulk, we recommend looping through the list of links you want to delete and making the delete request.\n\n  > üöß **Rate limiting and IP blocking**\n  > \n  > An important technical note for performing operations in batches is to take into consideration our rate-limiting: up to 80 requests every 30 seconds. If you exceed this limit, you run the risk of Belvo blocking your IP from making further requests.\n  > \n  > For more information, or if your IP address has been blocked, please contact our [support team](https://support.belvo.com/hc/en-us/requests/new).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `link.id` that you want to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/links/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\nclient.Links.delete(\"link_id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.links.delete id: 'link-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.links.delete('linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/accounts/": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "ListAccounts",
        "summary": "List all accounts",
        "description": "Get a paginated list of all existing accounts in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `link.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "balance__available",
            "in": "query",
            "description": "Return accounts that have a `balance.available` matching exactly this value.",
            "schema": {
              "type": "string",
              "example": 4000
            }
          },
          {
            "name": "balance__available__lt",
            "in": "query",
            "description": "Return accounts that have a `balance.available` less than this value.",
            "schema": {
              "type": "string",
              "example": 6000
            }
          },
          {
            "name": "balance__available__lte",
            "in": "query",
            "description": "Return accounts that have a `balance.available` less than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 5999
            }
          },
          {
            "name": "balance__available__gt",
            "in": "query",
            "description": "Return accounts that have a `balance.available` greater than this value.",
            "schema": {
              "type": "string",
              "example": 2000
            }
          },
          {
            "name": "balance__available__gte",
            "in": "query",
            "description": "Return accounts that have a `balance.available` greater than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 1999
            }
          },
          {
            "name": "balance__available__range",
            "in": "query",
            "description": "Return accounts that have a `balance.available` within a range of two values.",
            "schema": {
              "type": "string",
              "example": "3000.00,4350.00"
            }
          },
          {
            "name": "balance__current",
            "in": "query",
            "description": "Return accounts that have a `balance.current` matching exactly this value.",
            "schema": {
              "type": "string",
              "example": 4000
            }
          },
          {
            "name": "balance__current__lt",
            "in": "query",
            "description": "Return accounts that have a `balance.current` less than this value.",
            "schema": {
              "type": "string",
              "example": 6000
            }
          },
          {
            "name": "balance__current__lte",
            "in": "query",
            "description": "Return accounts that have a `balance.available` less than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 5999
            }
          },
          {
            "name": "balance__current__gt",
            "in": "query",
            "description": "Return accounts that have a `balance.current` greater than this value.",
            "schema": {
              "type": "string",
              "example": 2000
            }
          },
          {
            "name": "balance__current__gte",
            "in": "query",
            "description": "Return accounts that have a `balance.available` greater than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 1999
            }
          },
          {
            "name": "balance__current__range",
            "in": "query",
            "description": "Return accounts that have a `balance.available` within a range of two values.",
            "schema": {
              "type": "string",
              "example": "3000.00,4350.00"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Return accounts only for the given category (for example, `CHECKING_ACCOUNT` and `SAVINGS_ACCOUNT`).",
            "schema": {
              "type": "string",
              "example": "CREDIT_ACCOUNT"
            }
          },
          {
            "name": "category__in",
            "in": "query",
            "description": "Return accounts only for the given categories (for example, `CHECKING_ACCOUNT` and `SAVINGS_ACCOUNT`).",
            "schema": {
              "type": "string",
              "example": "CHECKING_ACCOUNT,SAVINGS_ACCOUNT"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return accounts that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return accounts that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return accounts that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return accounts that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return accounts that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Return accounts that hold finances in only this three-letter currency code.",
            "schema": {
              "type": "string",
              "example": "COP"
            }
          },
          {
            "name": "currency__in",
            "in": "query",
            "description": "Return accounts that hold finances in one of these three-letter currency codes.",
            "schema": {
              "type": "string",
              "example": "COP,MXN"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information only for this `account.id`.",
            "schema": {
              "type": "string",
              "example": "24ccab1d-3a86-4136-a6eb-e04bf52b356f"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information for these `account.id`s.",
            "schema": {
              "type": "string",
              "example": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509"
            }
          },
          {
            "name": "institution",
            "in": "query",
            "description": "Return accounts only for this institution (use the Belvo-designated name, such as `erebor_mx_retail`).",
            "schema": {
              "type": "string",
              "example": "erebor_mx_retail"
            }
          },
          {
            "name": "institution__in",
            "in": "query",
            "description": "Return accounts only for these institutions (use the Belvo-designated names, such as `erebor_mx_retail` and `gringotts_mx_retail`).",
            "schema": {
              "type": "string",
              "example": "erebor_mx_retail,gringotts_mx_retail"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return accounts only for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Return accounts with exactly this internal (specified by the institution) name.",
            "schema": {
              "type": "string",
              "example": "Cuenta Perfiles- M.N. - MXN-666"
            }
          },
          {
            "name": "name__icontains",
            "in": "query",
            "description": "Return accounts partially matching this internal (specified by the institution) name.",
            "schema": {
              "type": "string",
              "example": "Perfiles"
            }
          },
          {
            "name": "number",
            "in": "query",
            "description": "Return information only for this account number (as specified by the institution).",
            "schema": {
              "type": "string",
              "example": 4057068115181
            }
          },
          {
            "name": "number__in",
            "in": "query",
            "description": "Return information for these account numbers (as specified by the institution).",
            "schema": {
              "type": "string",
              "example": "4057068115181,7809346821648"
            }
          },
          {
            "name": "public_identification_name",
            "in": "query",
            "description": "Return information only for this type of account ID. For example, CLABE accounts.",
            "schema": {
              "type": "string",
              "example": "CLABE"
            }
          },
          {
            "name": "public_identification_value",
            "in": "query",
            "description": "Return information only for this account ID. For example, the account number for a CLABE account.",
            "schema": {
              "type": "string",
              "example": 150194683119900300
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Return information only for accounts matching this account type, as designated by the institution.",
            "schema": {
              "type": "string",
              "example": "Cuentas de efectivo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/accounts/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List Accounts\nfor account in client.Accounts.list():\n    pprint(account)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.accounts.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.accounts.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "RetrieveAccounts",
        "summary": "Retrieve accounts for a link",
        "description": "Retrieve accounts from an existing link.\n\n  > üöß Scheduled field deprecation\n  > \n  > Please note that we will soon be deprecating the following fields in our `loan_data` object:\n  > - `cutting_date`\n  > - `cutting_day`\n  > - `credit_limit`: replaced by the `principal` field.\n  > - `interest_rate`: replaced by the `interest_rates` object.\n  > - `last_payment_date`\n  > - `last_period_balance`: replaced by the `outstanding_balance ` field.\n  > - `limit_day`\n  > - `limit_date`: replaced by the `payment_day ` field.\n  > - `no_interest_payment`\n  > - `payment_due_day`",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StandardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                },
                "examples": {
                  "AccountsBankingChecking": {
                    "$ref": "#/components/examples/AccountsBankingChecking"
                  },
                  "AccountsBankingCreditCard": {
                    "$ref": "#/components/examples/AccountsBankingCreditCard"
                  },
                  "AcccountsBankingLoan": {
                    "$ref": "#/components/examples/AccountsBankingLoan"
                  },
                  "AccountsBankingPension": {
                    "$ref": "#/components/examples/AccountsBankingPension"
                  },
                  "AccountsBankingSavings": {
                    "$ref": "#/components/examples/AccountsBankingSavings"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                },
                "examples": {
                  "AccountsBankingChecking": {
                    "$ref": "#/components/examples/AccountsBankingChecking"
                  },
                  "AccountsBankingCreditCard": {
                    "$ref": "#/components/examples/AccountsBankingCreditCard"
                  },
                  "AcccountsBankingLoan": {
                    "$ref": "#/components/examples/AccountsBankingLoan"
                  },
                  "AccountsBankingPension": {
                    "$ref": "#/components/examples/AccountsBankingPension"
                  },
                  "AccountsBankingSavings": {
                    "$ref": "#/components/examples/AccountsBankingSavings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://sandbox.belvo.com/api/accounts/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"link_id\"\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve accounts\naccounts = client.Accounts.create(\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.accounts.retrieve link: 'link-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.accounts.retrieve('link-id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "operationId": "PatchAccounts",
        "summary": "Complete an accounts request",
        "description": "Used to resume an Account retrieve session that was paused because an MFA token was required by the institution.\n\n  > üöß Scheduled field deprecation\n  > \n  > Please note that we will soon be deprecating the following fields in our `loan_data` object:\n  > - `cutting_date`\n  > - `cutting_day`\n  > - `credit_limit`: replaced by the `principal` field.\n  > - `interest_rate`: replaced by the `interest_rates` object.\n  > - `last_payment_date`\n  > - `last_period_balance`: replaced by the `outstanding_balance ` field.\n  > - `limit_day`\n  > - `limit_date`: replaced by the `payment_day ` field.\n  > - `no_interest_payment`\n  > - `payment_due_day`\n  ",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                },
                "examples": {
                  "AccountsBankingChecking": {
                    "$ref": "#/components/examples/AccountsBankingChecking"
                  },
                  "AccountsBankingCreditCard": {
                    "$ref": "#/components/examples/AccountsBankingCreditCard"
                  },
                  "AcccountsBankingLoan": {
                    "$ref": "#/components/examples/AccountsBankingLoan"
                  },
                  "AccountsBankingPension": {
                    "$ref": "#/components/examples/AccountsBankingPension"
                  },
                  "AccountsBankingSavings": {
                    "$ref": "#/components/examples/AccountsBankingSavings"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                },
                "examples": {
                  "AccountsBankingChecking": {
                    "$ref": "#/components/examples/AccountsBankingChecking"
                  },
                  "AccountsBankingCreditCard": {
                    "$ref": "#/components/examples/AccountsBankingCreditCard"
                  },
                  "AcccountsBankingLoan": {
                    "$ref": "#/components/examples/AccountsBankingLoan"
                  },
                  "AccountsBankingPension": {
                    "$ref": "#/components/examples/AccountsBankingPension"
                  },
                  "AccountsBankingSavings": {
                    "$ref": "#/components/examples/AccountsBankingSavings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X PATCH \\\n  https://sandbox.belvo.com/api/accounts/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n      \"session\": \"\",\n      \"token\": \"\",\n      \"link\": \"\"\n  }' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume accounts\naccounts = client.Accounts.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.accounts.resume(\n  session: 'session_id',\n  token: 'token',\n  link: 'link_id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.accounts.resume('sessionId', 'token', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/accounts/{id}/": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "DetailAccount",
        "summary": "Get an account's details",
        "description": "Get the details of a specific account.\n\n  > üöß Scheduled field deprecation\n  >\n  > Please note that we will soon be deprecating the following fields in our `loan_data` object:\n  > - `cutting_date`\n  > - `cutting_day`\n  > - `credit_limit`: replaced by the `principal` field.\n  > - `interest_rate`: replaced by the `interest_rates` object.\n  > - `last_payment_date`\n  > - `last_period_balance`: replaced by the `outstanding_balance ` field.\n  > - `limit_day`\n  > - `limit_date`: replaced by the `payment_day ` field.\n  > - `no_interest_payment`\n  > - `payment_due_day`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `account.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                },
                "examples": {
                  "AccountsBankingChecking": {
                    "$ref": "#/components/examples/AccountsBankingCheckingDetail"
                  },
                  "AccountsBankingCreditCard": {
                    "$ref": "#/components/examples/AccountsBankingCreditCardDetail"
                  },
                  "AcccountsBankingLoan": {
                    "$ref": "#/components/examples/AccountsBankingLoanDetail"
                  },
                  "AccountsBankingPension": {
                    "$ref": "#/components/examples/AccountsBankingPensionDetail"
                  },
                  "AccountsBankingSavings": {
                    "$ref": "#/components/examples/AccountsBankingSavingsDetail"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/accounts/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get an account\naccount = client.Accounts.get(id=\"account-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.accounts.detail id: 'account-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.accounts.detail('accountId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "operationId": "DestroyAccount",
        "summary": "Delete an account",
        "description": "Delete a specific account and all associated transactions, as well as owners, from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `account.id` you want to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/accounts/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete an account\nclient.Accounts.delete(\"account-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.accounts.delete id: 'account-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.accounts.delete('accountId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/transactions/": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "operationId": "ListTransactions",
        "summary": "List all transactions",
        "description": "Get a paginated list of all existing transactions in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page.\n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "required": true,
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `account.id` filter as well in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "The `account.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `account.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "d979df3a-5d0f-4cc9-9bd4-b75c28b45963"
            }
          },
          {
            "name": "account__balance__available",
            "in": "query",
            "description": "Return transactions that have a `account.balance.available` matching exactly this value.",
            "schema": {
              "type": "string",
              "example": 4000
            }
          },
          {
            "name": "account__balance__available__lt",
            "in": "query",
            "description": "Return transactions that have a `account.balance.available` less than this value.",
            "schema": {
              "type": "string",
              "example": 6000
            }
          },
          {
            "name": "account__balance__available__lte",
            "in": "query",
            "description": "Return transactions that have a `account.balance.available` less than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 5999
            }
          },
          {
            "name": "account__balance__available__range",
            "in": "query",
            "description": "Return transactions that have a `account.balance.available` within a range of two values.",
            "schema": {
              "type": "string",
              "example": "3000.00,4350.00"
            }
          },
          {
            "name": "account__balance__current",
            "in": "query",
            "description": "Return transactions that have a `account.balance.current` matching exactly this value.",
            "schema": {
              "type": "string",
              "example": 4000
            }
          },
          {
            "name": "account__balance__current__gt",
            "in": "query",
            "description": "Return transactions that have a `account.balance.current` greater than this value.",
            "schema": {
              "type": "string",
              "example": 4020
            }
          },
          {
            "name": "account__balance__current__gte",
            "in": "query",
            "description": "Return transactions that have a `account.balance.current` greater than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 4019
            }
          },
          {
            "name": "account__balance__current__lt",
            "in": "query",
            "description": "Return transactions that have a `account.balance.current` less than this value.",
            "schema": {
              "type": "string",
              "example": 3000
            }
          },
          {
            "name": "account__balance__current__lte",
            "in": "query",
            "description": "Return transactions that have a `account.balance.current` less than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 2999
            }
          },
          {
            "name": "account__balance__current__range",
            "in": "query",
            "description": "Return transactions that have a `account.balance.current` within a range of two values.",
            "schema": {
              "type": "string",
              "example": "2999.00,4000.00"
            }
          },
          {
            "name": "account__in",
            "in": "query",
            "description": "Return transactions only for these `account.id`s.",
            "schema": {
              "type": "string",
              "example": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509"
            }
          },
          {
            "name": "account_type",
            "in": "query",
            "description": "Return information only for transactions matching this account type, as designated by the institution.",
            "schema": {
              "type": "string",
              "example": "Cuentas de efectivo"
            }
          },
          {
            "name": "account_type__in",
            "in": "query",
            "description": "Return information only for transactions matching these account types, as designated by the institution.",
            "schema": {
              "type": "string",
              "example": "Cuentas de efectivo,Depositos Ahorro"
            }
          },
          {
            "name": "accounting_date",
            "in": "query",
            "description": "Return transactions that were processed by the institution on exactly this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "accounting_date__gt",
            "in": "query",
            "description": "Return transactions that were processed by the institution after this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-06"
            }
          },
          {
            "name": "accounting_date__gte",
            "in": "query",
            "description": "Return transactions that were processed by the institution on this date or later (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "accounting_date__lt",
            "in": "query",
            "description": "Return transactions that were processed by the institution before this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-02"
            }
          },
          {
            "name": "accounting_date__lte",
            "in": "query",
            "description": "Return transactions that were processed by the institution on this date or earlier (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01"
            }
          },
          {
            "name": "accounting_date__range",
            "in": "query",
            "description": "Return transactions that were processed by the institution in this date range (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01,2022-05-06"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Return transactions matching exactly this value.",
            "schema": {
              "type": "string",
              "example": 1000
            }
          },
          {
            "name": "amount__gt",
            "in": "query",
            "description": "Return transactions greater than this value.",
            "schema": {
              "type": "string",
              "example": 520
            }
          },
          {
            "name": "amount__gte",
            "in": "query",
            "description": "Return transactions greater than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 519
            }
          },
          {
            "name": "amount__lt",
            "in": "query",
            "description": "Return transactions less than this value.",
            "schema": {
              "type": "string",
              "example": 540
            }
          },
          {
            "name": "amount__lte",
            "in": "query",
            "description": "Return transactions less than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 541
            }
          },
          {
            "name": "amount__range",
            "in": "query",
            "description": "Return transactions between these two values.",
            "schema": {
              "type": "string",
              "example": "519.00,541.00"
            }
          },
          {
            "name": "collected_at",
            "in": "query",
            "description": "Return transactions that were retrieved from the institution on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-01"
            }
          },
          {
            "name": "collected_at__gt",
            "in": "query",
            "description": "Return transactions that were retrieved from the institution after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "collected_at__gte",
            "in": "query",
            "description": "Return transactions that were retrieved from the institution after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "collected_at__lt",
            "in": "query",
            "description": "Return transactions that were retrieved from the institution before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "collected_at__lte",
            "in": "query",
            "description": "Return transactions that were retrieved from the institution before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "collected_at__range",
            "in": "query",
            "description": "Return transactions that were retrieved from the institution between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "Return transactions that were last updated in Belvo's database on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-01"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return transactions that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return transactions that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return transactions that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return transactions that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return transactions that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "credit_card_data__bill_name__in",
            "in": "query",
            "description": "Return transactions for one of these bill names.",
            "schema": {
              "type": "string",
              "example": "maio-2022,feb-2022"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Return transactions in only this three-letter currency code.",
            "schema": {
              "type": "string",
              "example": "COP"
            }
          },
          {
            "name": "currency__in",
            "in": "query",
            "description": "Return transactions in one of these three-letter currency codes.",
            "schema": {
              "type": "string",
              "example": "COP,MXN"
            }
          },
          {
            "name": "reference",
            "in": "query",
            "description": "Returns transactions with this institution-assigned reference number.",
            "schema": {
              "type": "string",
              "example": 85904452810319230
            }
          },
          {
            "name": "reference__in",
            "in": "query",
            "description": "Returns transactions with these institution-assigned reference numbers.",
            "schema": {
              "type": "string",
              "example": "085904452810319225,8703"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return transactions with this status. Can be either `PENDING`, `PROCESSED`, or `UNCATEGORIZED`.",
            "schema": {
              "type": "string",
              "example": "PENDING"
            }
          },
          {
            "name": "status__in",
            "in": "query",
            "description": "Return transactions with these statuses. Can be either `PENDING`, `PROCESSED`, or `UNCATEGORIZED`.",
            "schema": {
              "type": "string",
              "example": "PENDING,PROCESSED"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Return transactions with this type. Can be either `INFLOW` or `OUTFLOW`.",
            "schema": {
              "type": "string",
              "example": "OUTFLOW"
            }
          },
          {
            "name": "type__in",
            "in": "query",
            "description": "Return transactions with this types. Can be either `INFLOW` or `OUTFLOW`.",
            "schema": {
              "type": "string",
              "example": "INFLOW,OUTFLOW"
            }
          },
          {
            "name": "value_date",
            "in": "query",
            "description": "Return transactions that occurred on exactly this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "value_date__gt",
            "in": "query",
            "description": "Return transactions that occurred after this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-06"
            }
          },
          {
            "name": "value_date__gte",
            "in": "query",
            "description": "Return transactions that occurred on this date or later (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "value_date__lt",
            "in": "query",
            "description": "Return transactions that occurred before this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-02"
            }
          },
          {
            "name": "value_date__lte",
            "in": "query",
            "description": "Return transactions that occurred on this date or earlier (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01"
            }
          },
          {
            "name": "value_date__range",
            "in": "query",
            "description": "Return transactions for this date range (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01,2022-05-06"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsPaginatedResponse"
                },
                "examples": {
                  "TransactionsCheckingPaginated": {
                    "$ref": "#/components/examples/TransactionsCheckingPaginated"
                  },
                  "TransactionsSavingsPaginated": {
                    "$ref": "#/components/examples/TransactionsSavingsPaginated"
                  },
                  "TransactionsCreditCardPaginated": {
                    "$ref": "#/components/examples/TransactionsCreditCardPaginated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/transactions/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List transactions\nfor transaction in client.Transactions.list():\n    pprint(transaction)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.transactions.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.transactions.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "operationId": "RetrieveTransactions",
        "summary": "Retrieve transactions for a link",
        "description": "Retrieve transactions for one or more accounts from a specific link.\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\"> <strong>Info: </strong> When retrieving transactions, it is important to understand that the available transaction data ranges depend on each institution. <br><br>\nIf you try to access older information than what we can access, we will return all the data we can read within that date range. For example, if you request transactions for the last year and we can only access the last six months, we will return the information corresponding to these six months of data. </div>\n",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                },
                "examples": {
                  "TransactionsChecking": {
                    "$ref": "#/components/examples/TransactionsChecking"
                  },
                  "TransactionsSavings": {
                    "$ref": "#/components/examples/TransactionsSavings"
                  },
                  "TransactionsCreditCard": {
                    "$ref": "#/components/examples/TransactionsCreditCard"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                },
                "examples": {
                  "TransactionsChecking": {
                    "$ref": "#/components/examples/TransactionsChecking"
                  },
                  "TransactionsSavings": {
                    "$ref": "#/components/examples/TransactionsSavings"
                  },
                  "TransactionsCreditCard": {
                    "$ref": "#/components/examples/TransactionsCreditCard"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://sandbox.belvo.com/api/transactions/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"\",\n    \"account\": \"\",\n    \"date_from\": \"\",\n    \"date_to\": \"\"\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve transactions\ntransactions = client.Transactions.create(\n  \"link_id\",\n  \"2019-07-01\",\n  date_to=\"2019-07-31\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\ntransactions = sandbox.transactions.retrieve(\n  link: 'link_id',\n  date_from: '2022-01-01',\n  options: {\n    account: account, //optional\n    date_to: '2022-01-24'\n  }\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.transactions.retrieve('linkId', '2019-01-01', { 'dateTo': '2019-07-31' })\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Transactions"
        ],
        "operationId": "PatchTransactions",
        "summary": "Complete a transactions request",
        "description": "Used to resume a Transaction retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                },
                "examples": {
                  "TransactionsChecking": {
                    "$ref": "#/components/examples/TransactionsChecking"
                  },
                  "TransactionsSavings": {
                    "$ref": "#/components/examples/TransactionsSavings"
                  },
                  "TransactionsCreditCard": {
                    "$ref": "#/components/examples/TransactionsCreditCard"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                },
                "examples": {
                  "TransactionsChecking": {
                    "$ref": "#/components/examples/TransactionsChecking"
                  },
                  "TransactionsSavings": {
                    "$ref": "#/components/examples/TransactionsSavings"
                  },
                  "TransactionsCreditCard": {
                    "$ref": "#/components/examples/TransactionsCreditCard"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X PATCH \\\n  https://sandbox.belvo.com/api/transactions/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n      \"session\": \"\",\n      \"token\": \"\",\n      \"link\": \"\"\n  }' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume transactions\ntransactions = client.Transactions.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.transactions.resume(\n  session: 'session-id',\n  token: 'token',\n  link: 'link-id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.transactions.resume('yourSessionId', 'yourOTPToken', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/transactions/{id}/": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "operationId": "DetailTransaction",
        "summary": "Get a transaction's details",
        "description": "Get the details of a specific transaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `transaction.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                },
                "examples": {
                  "TransactionsChecking": {
                    "$ref": "#/components/examples/TransactionsCheckingDetail"
                  },
                  "TransactionsSavings": {
                    "$ref": "#/components/examples/TransactionsSavingsDetail"
                  },
                  "TransactionsCreditCard": {
                    "$ref": "#/components/examples/TransactionsCreditCardDetail"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/transactions/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get a transaction\ntransaction = client.Transactions.get(id=\"transaction-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.transactions.detail id: 'transaction-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.transactions.detail('transactionId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "operationId": "DestroyTransaction",
        "summary": "Delete a transaction",
        "description": "Delete a specific transaction from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `transaction.id` that you want to delete.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/transactions/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete a transaction\nclient.Transactions.delete(\"transaction-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.transactions.delete id: 'transaction-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.transactions.delete('transactionId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/balances/": {
      "get": {
        "tags": [
          "Balances"
        ],
        "operationId": "ListBalances",
        "summary": "List all balances",
        "description": "Get a paginated list of all existing balances in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding either the `link.id` or the `account.id` filters in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "The `account.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding either the `link.id` or the `account.id` filters in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "account__in",
            "in": "query",
            "description": "Return balances only for these `account.id`s.",
            "schema": {
              "type": "string",
              "example": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509"
            }
          },
          {
            "name": "account__type",
            "in": "query",
            "description": "Return information only for accounts matching this account type, as designated by the institution.",
            "schema": {
              "type": "string",
              "example": "Cuentas de efectivo"
            }
          },
          {
            "name": "account__type__in",
            "in": "query",
            "description": "Return information only for accounts matching these account types, as designated by the institution.",
            "schema": {
              "type": "string",
              "example": "Cuentas de efectivo,Credito"
            }
          },
          {
            "name": "balance",
            "in": "query",
            "description": "Return balances matching exactly this value.",
            "schema": {
              "type": "string",
              "example": 530
            }
          },
          {
            "name": "balance__lt",
            "in": "query",
            "description": "Return balances less than this value.",
            "schema": {
              "type": "string",
              "example": 540
            }
          },
          {
            "name": "balance__lte",
            "in": "query",
            "description": "Return balances less than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 541
            }
          },
          {
            "name": "balance__gt",
            "in": "query",
            "description": "Return balances greater than this value.",
            "schema": {
              "type": "string",
              "example": 520
            }
          },
          {
            "name": "balance__gte",
            "in": "query",
            "description": "Return balances greater than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 519
            }
          },
          {
            "name": "balance__range",
            "in": "query",
            "description": "Return balances between these two values.",
            "schema": {
              "type": "string",
              "example": "519.00,541.00"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Return balances that are in this three-letter currency code.",
            "schema": {
              "type": "string",
              "example": "COP"
            }
          },
          {
            "name": "currency__in",
            "in": "query",
            "description": "Return balances that are in these three-letter currency codes.",
            "schema": {
              "type": "string",
              "example": "COP,MXN"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information only for this `balance.id`.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information only for these `balance.id`s.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e"
            }
          },
          {
            "name": "institution",
            "in": "query",
            "description": "Return balances only for this institution (use the Belvo-designated name, such as `erebor_mx_retail`).",
            "schema": {
              "type": "string",
              "example": "erebor_mx_retail"
            }
          },
          {
            "name": "institution__in",
            "in": "query",
            "description": "Return balances only for these institutions (use the Belvo-designated names, such as `erebor_mx_retail` and `gringotts_mx_retail`).",
            "schema": {
              "type": "string",
              "example": "erebor_mx_retail,gringotts_mx_retail"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return balances only for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          },
          {
            "name": "value_date",
            "in": "query",
            "description": "Return balances for exactly this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "value_date__gt",
            "in": "query",
            "description": "Return balances for after this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-06"
            }
          },
          {
            "name": "value_date__gte",
            "in": "query",
            "description": "Return balances for this date or later (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "value_date__lt",
            "in": "query",
            "description": "Return balances for before this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-02"
            }
          },
          {
            "name": "value_date__lte",
            "in": "query",
            "description": "Return balances for this date or earlier (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01"
            }
          },
          {
            "name": "value_date__range",
            "in": "query",
            "description": "Return balances for this date range (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01,2022-05-06"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalancesPaginatedResponse"
                },
                "examples": {
                  "BalancesExamplePaginated": {
                    "$ref": "#/components/examples/BalancesExamplePaginated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/balances/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List balances\nfor balance in client.Balances.list():\n    pprint(balance)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.balances.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.balances.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Balances"
        ],
        "operationId": "RetrieveBalances",
        "summary": "Retrieve balances for a link",
        "description": "Retrieve balances from one or more accounts for a specific link within a specified date range.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalancesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Balance"
                  }
                },
                "examples": {
                  "BalancesExamplePaginated": {
                    "$ref": "#/components/examples/BalancesExample"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Balance"
                  }
                },
                "examples": {
                  "BalancesExamplePaginated": {
                    "$ref": "#/components/examples/BalancesExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://sandbox.belvo.com/api/balances/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"\",\n    \"account\": \"\",\n    \"date_from\": \"\",\n    \"date_to\": \"\"\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve balances\nbalances = client.Balances.create(\n  \"link_id\",\n  \"2019-07-01\",\n  date_to=\"2019-07-31\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.balances.retrieve(\n  link: 'link-id',\n  date_from: '2019-07-01',\n  date_to: '2019-07-31'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.balances.retrieve('linkId', '2019-07-01', { 'dateTo': '2019-07-31' })\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Balances"
        ],
        "operationId": "PatchBalances",
        "summary": "Complete a balances request",
        "description": "Used to resume a Balance retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Balance"
                  }
                },
                "examples": {
                  "BalancesExamplePaginated": {
                    "$ref": "#/components/examples/BalancesExample"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Balance"
                  }
                },
                "examples": {
                  "BalancesExamplePaginated": {
                    "$ref": "#/components/examples/BalancesExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X PATCH \\\n  https://sandbox.belvo.com/api/balances/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n      \"session\": \"\",\n      \"token\": \"\",\n      \"link\": \"\"\n  }' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume balances\nbalances = client.Balances.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.balances.resume(\n  session: 'session-id',\n  token: 'token',\n  link: 'link-id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.balances.resume('sessionId', 'token', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/balances/{id}/": {
      "get": {
        "tags": [
          "Balances"
        ],
        "operationId": "DetailBalance",
        "summary": "Get a balance's details",
        "description": "Get the details of a specific balance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `balance.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balance"
                },
                "examples": {
                  "BalancesExamplePaginated": {
                    "$ref": "#/components/examples/BalancesExampleDetail"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/balances/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get a balance\nbalance = client.Balances.get(id=\"balance-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.balances.detail id: 'balance-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.balances.detail('balanceId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Balances"
        ],
        "operationId": "DestroyBalance",
        "summary": "Delete a balance",
        "description": "Delete a specific balance from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `balance.id` that you want to delete.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/balance/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete a balance\nclient.Balances.delete(\"balance-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.balances.delete id: 'balance-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.balances.delete('balanceId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/institutions/": {
      "get": {
        "tags": [
          "Institutions"
        ],
        "operationId": "ListInstitutions",
        "summary": "List all institutions",
        "description": "Get a paginated list of all the institutions currently supported by Belvo. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Return institutions only for this two-letter country code.",
            "schema": {
              "type": "string",
              "example": "MX"
            }
          },
          {
            "name": "country_code__in",
            "in": "query",
            "description": "Return institutions only for these two-letter country codes.",
            "schema": {
              "type": "string",
              "example": "CO,BR"
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "description": "Return institutions that partially match this display name.",
            "schema": {
              "type": "string",
              "example": "Erebor Bank"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name__in",
            "in": "query",
            "description": "Return institutions with one or more of these Belvo-designated names.",
            "schema": {
              "type": "string",
              "example": "erebor_br_retail,gotham_co_business"
            }
          },
          {
            "name": "resources__allin",
            "in": "query",
            "description": "Return institutions that support these resources.",
            "schema": {
              "type": "string",
              "example": "ACCOUNTS,OWNERS,TRANSACTIONS"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return institutions with the given status. You can choose between `healthy` or `down`.",
            "schema": {
              "type": "string",
              "example": "healthy"
            }
          },
          {
            "name": "status__in",
            "in": "query",
            "description": "Return institutions with one of the given statuses. You can choose between `healthy` or `down`.",
            "schema": {
              "type": "string",
              "example": "healthy,down"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Return institutions of this type. You can choose between `bank` or `fiscal`.",
            "schema": {
              "type": "string",
              "example": "fiscal"
            }
          },
          {
            "name": "type__in",
            "in": "query",
            "description": "Return institutions of one of these types. You can choose between `bank` or `fiscal`.",
            "schema": {
              "type": "string",
              "example": "fiscal,bank"
            }
          },
          {
            "name": "website",
            "in": "query",
            "description": "Return institutions with this website URL.",
            "schema": {
              "type": "string",
              "example": "https://www.erebor.mx"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionsPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/institutions/  \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List institutions\nfor institution in client.Institutions.list():\n    pprint(institution)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.institutions.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.institutions.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/institutions/{id}/": {
      "get": {
        "tags": [
          "Institutions"
        ],
        "operationId": "DetailInstitution",
        "summary": "Get an institution's details",
        "description": "Get the details of a specific institution.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The `institution.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "pattern": "[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Institution"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/institutions/{id}  \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get a institution\ninstitution = client.Institutions.get(id=\"institution_id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.institutions.detail id: 'institution-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.institutions.detail('institution_id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/owners/": {
      "get": {
        "tags": [
          "Owners"
        ],
        "operationId": "ListOwners",
        "summary": "List all owners",
        "description": "Get a paginated list of all existing owners in your Belvo account. We return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return owners that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return owners that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return owners that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return owners that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return owners that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "display_name__icontains",
            "in": "query",
            "description": "Return owners whose full display name partially matches your query. For example, `mar` will return results for Mark, Maria, Neymar, Remarque, and so on.",
            "schema": {
              "type": "string",
              "example": "Daniela"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Returns owners whose email address match your query.",
            "schema": {
              "type": "string",
              "example": "lopes.d@gmail.com"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information only for this `owner.id`.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information only for these `owner.id`s.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e"
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "Return information only for this `link.id`.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return balances only for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersPaginatedResponse"
                },
                "examples": {
                  "OwnerBankingAccountPaginated": {
                    "$ref": "#/components/examples/OwnerBankingAccountPaginated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/owners/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List owners\nfor owner in client.Owners.list():\n    pprint(owner)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.owners.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.owners.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Owners"
        ],
        "operationId": "RetrieveOwners",
        "summary": "Retrieve owners for a link",
        "description": "Retrieve owner information from a specific link.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StandardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Owner"
                  }
                },
                "examples": {
                  "OwnerBankingAccount": {
                    "$ref": "#/components/examples/OwnerBankingAccount"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Owner"
                  }
                },
                "examples": {
                  "OwnerBankingAccount": {
                    "$ref": "#/components/examples/OwnerBankingAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://sandbox.belvo.com/api/owners/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"\"\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve owners\nowners = client.Owners.create(\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.owners.retrieve(link: 'link-id')\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.owners.retrieve('linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Owners"
        ],
        "operationId": "PatchOwners",
        "summary": "Complete an owners request",
        "description": "Used to resume an Owner retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Owner"
                  }
                },
                "examples": {
                  "OwnerBankingAccount": {
                    "$ref": "#/components/examples/OwnerBankingAccount"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Owner"
                  }
                },
                "examples": {
                  "OwnerBankingAccount": {
                    "$ref": "#/components/examples/OwnerBankingAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X PATCH \\\n  https://sandbox.belvo.com/api/owners/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n      \"session\": \"\",\n      \"token\": \"\",\n      \"link\": \"\"\n  }' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume owners\nowners = client.Owners.resume(\n  session=\"session-id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.owners.resume(\n  session: 'session-id',\n  token: 'token',\n  link: 'link-id',\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.owners.resume('yourSessionId', 'yourOTPToken', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/owners/{id}/": {
      "get": {
        "tags": [
          "Owners"
        ],
        "operationId": "DetailOwner",
        "summary": "Get an owner's details",
        "description": "Get the details of a specific owner.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `owner.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/owners/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get a owner\nowner = client.Owners.get(id=\"owner-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.owners.detail id: 'owner-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.owners.detail('ownerId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                },
                "examples": {
                  "OwnerBankingAccount": {
                    "$ref": "#/components/examples/OwnerBankingAccountDetail"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "operationId": "DestroyOwner",
        "summary": "Delete an owner",
        "description": "Delete a specific owner from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `owner.id` that you want to delete.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/owners/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete a owner\nclient.Owners.delete(\"owner-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.owners.delete id: 'owner-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.owners.delete('ownerId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/invoices/": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "operationId": "ListInvoices",
        "description": "Get a paginated list of all existing invoices in your Belvo account. We return up to 100 results per page.",
        "summary": "List all invoices",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `link.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return invoices that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return invoices that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return invoices that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return invoices that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return invoices that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information only for this `invoice.id`.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information only for these `invoice.id`s.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e"
            }
          },
          {
            "name": "invoice_date",
            "in": "query",
            "description": "Return invoices issued exactly on this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "invoice_date__lt",
            "in": "query",
            "description": "Return balances issued before this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-02"
            }
          },
          {
            "name": "invoice_date__lte",
            "in": "query",
            "description": "Return balances issued on this date or earlier (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01"
            }
          },
          {
            "name": "invoice_date__gt",
            "in": "query",
            "description": "Return invoices issued after this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-06"
            }
          },
          {
            "name": "invoice_date__gte",
            "in": "query",
            "description": "Return invoices issued on this date or later (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "invoice_date__range",
            "in": "query",
            "description": "Return invoices issued within this date range (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01,2022-05-06"
            }
          },
          {
            "name": "invoice_identification",
            "in": "query",
            "description": "Return an invoice with this ID (as provided by the insitution).",
            "schema": {
              "type": "string",
              "example": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840"
            }
          },
          {
            "name": "invoice_identification__in",
            "in": "query",
            "description": "Return invoices with these IDs (as provided by the institution).",
            "schema": {
              "type": "string",
              "example": "862B9918-3K6H-4E0B-NAI9-2BE2D833B840,992B9918-3G6H-4E0B-DAI9-2BE2D833B833"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return invoices only for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return invoices with this status. Can be either `Vigente` (valid) or `Cancelado` (cancelled).",
            "schema": {
              "type": "string",
              "example": "Vigente"
            }
          },
          {
            "name": "status__in",
            "in": "query",
            "description": "Return invoices with these statuses. Can be either `Vigente` (valid) or `Cancelado` (cancelled).",
            "schema": {
              "type": "string",
              "example": "Vigente,Cancelado"
            }
          },
          {
            "name": "total_amount",
            "in": "query",
            "description": "Return invoices matching exactly this value.",
            "schema": {
              "type": "string",
              "example": 1000
            }
          },
          {
            "name": "total_amount__lt",
            "in": "query",
            "description": "Return invoices less than this value.",
            "schema": {
              "type": "string",
              "example": 540
            }
          },
          {
            "name": "total_amount__lte",
            "in": "query",
            "description": "Return invoices less than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 541
            }
          },
          {
            "name": "total_amount__gt",
            "in": "query",
            "description": "Return invoices greater than this value.",
            "schema": {
              "type": "string",
              "example": 520
            }
          },
          {
            "name": "total_amount__gte",
            "in": "query",
            "description": "Return invoices greater than or equal to this value.",
            "schema": {
              "type": "string",
              "example": 519
            }
          },
          {
            "name": "total_amount__range",
            "in": "query",
            "description": "Return invoices between these two values.",
            "schema": {
              "type": "string",
              "example": "519.00,541.00"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Return invoices of this type. Can be either `OUTFLOW` or `INFLOW`.",
            "schema": {
              "type": "string",
              "example": "OUTFLOW"
            }
          },
          {
            "name": "type__in",
            "in": "query",
            "description": "Return invoices of these types. Can be either `OUTFLOW` or `INFLOW`.",
            "schema": {
              "type": "string",
              "example": "OUTFLOW,INFLOW"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesResponsePaginatedResponse"
                },
                "examples": {
                  "InvoiceIngresso": {
                    "$ref": "#/components/examples/InvoiceIngresoPaginated"
                  },
                  "InvoicePago": {
                    "$ref": "#/components/examples/InvoicePagoPaginated"
                  },
                  "InvoiceNomina": {
                    "$ref": "#/components/examples/InvoiceNominaPaginated"
                  },
                  "InvoiceEgreso": {
                    "$ref": "#/components/examples/InvoiceEgresoPaginated"
                  },
                  "InvoiceTraslado": {
                    "$ref": "#/components/examples/InvoiceTrasladoPaginated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/invoices/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List Invoices\nfor invoice in client.Invoices.list():\n    pprint(invoice)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.invoices.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.invoices.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  });\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Invoices"
        ],
        "operationId": "RetrieveInvoices",
        "summary": "Retrieve invoices for a link",
        "description": "Retrieve invoice information from a specific fiscal link.\n<div style=\"background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px\"> <strong>Info: </strong> You can ask for up to **one** year (365 days) of invoices per request. If you need invoices for more than one year, just make another request. </div>\n",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceWithId"
                  }
                },
                "examples": {
                  "InvoiceIngresso": {
                    "$ref": "#/components/examples/InvoiceIngreso"
                  },
                  "InvoicePago": {
                    "$ref": "#/components/examples/InvoicePago"
                  },
                  "InvoiceNomina": {
                    "$ref": "#/components/examples/InvoiceNomina"
                  },
                  "InvoiceEgreso": {
                    "$ref": "#/components/examples/InvoiceEgreso"
                  },
                  "InvoiceTraslado": {
                    "$ref": "#/components/examples/InvoiceTraslado"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceWithId"
                  }
                },
                "examples": {
                  "InvoiceIngresso": {
                    "$ref": "#/components/examples/InvoiceIngreso"
                  },
                  "InvoicePago": {
                    "$ref": "#/components/examples/InvoicePago"
                  },
                  "InvoiceNomina": {
                    "$ref": "#/components/examples/InvoiceNomina"
                  },
                  "InvoiceEgreso": {
                    "$ref": "#/components/examples/InvoiceEgreso"
                  },
                  "InvoiceTraslado": {
                    "$ref": "#/components/examples/InvoiceTraslado"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://sandbox.belvo.com/api/invoices/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"\",\n    \"date_from\": \"YYYY-MM-DD\",\n    \"date_to\": \"YYYY-MM-DD\",\n    \"type\": \"OUTFLOW\"\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List Invoices\nfor invoice in client.Invoices.create('link-id', '2019-07-01', '2019-07-31', 'OUTFLOW'):\n    pprint(invoice)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.invoices.retrieve(\n  link: 'link-id',\n  date_from: '2019-07-01',\n  date_to: '2019-07-31',\n  type: 'OUTFLOW'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.invoices.retrieve('linkId', '2019-07-01', '2019-07-31', 'OUTFLOW')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  });\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Invoices"
        ],
        "operationId": "PatchInvoices",
        "summary": "Complete an invoices request",
        "description": "Used to resume an Invoice retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceWithId"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceWithId"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X PATCH \\\n  https://api.belvo.com/api/invoices/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: api.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n      \"session\": \"\",\n      \"token\": \"\",\n      \"link\": \"\"\n  }' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"https://api.belvo.com\")\n\n# Resume incomes\nincomes = client.Invoices.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n)\n\nclient.invoices.resume(\n  session: 'session_id',\n  token: 'token',\n  link: 'link_id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n);\n\nclient.connect()\n  .then(function () {\n    client.invoices.resume('sessionId', 'token', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n  \n"
            }
          ]
        }
      }
    },
    "/api/invoices/{id}/": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "operationId": "DetailInvoice",
        "summary": "Get an invoice's details",
        "description": "Get the details of a specific invoice.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `invoice.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/invoices/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\ninvoice = client.Invoices.detail('invoice-id'):\npprint(invoice)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.invoices.detail id: 'invoice-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.invoices.detail('invoiceId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  });\n"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceWithId"
                },
                "examples": {
                  "InvoiceIngresso": {
                    "$ref": "#/components/examples/InvoiceIngresoDetail"
                  },
                  "InvoicePago": {
                    "$ref": "#/components/examples/InvoicePagoDetail"
                  },
                  "InvoiceNomina": {
                    "$ref": "#/components/examples/InvoiceNominaDetail"
                  },
                  "InvoiceEgreso": {
                    "$ref": "#/components/examples/InvoiceEgresoDetail"
                  },
                  "InvoiceTraslado": {
                    "$ref": "#/components/examples/InvoiceTrasladoDetail"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoices"
        ],
        "operationId": "DestroyInvoice",
        "summary": "Delete an invoice",
        "description": "Delete a specific invoice from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `invoice.id` that you want to delete.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/invoices/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete Invoice\nclient.Invoices.delete('invoice-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.invoices.delete id: 'invoice-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.invoices.delete('invoiceId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  });\n"
            }
          ]
        }
      }
    },
    "/api/tax-returns/": {
      "get": {
        "tags": [
          "Tax returns"
        ],
        "operationId": "ListTaxReturns",
        "summary": "List all tax returns",
        "description": "Get a paginated list of all existing tax returns in your Belvo account. By default, we return up to 100 results per page. The results will include a mix of both monthly and yearly tax returns.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `link.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return tax returns that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return tax returns that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return tax returns that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return tax returns that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return tax returns that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information for this `tax-return.id`.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information for these `tax-return.id`s.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c"
            }
          },
          {
            "name": "informacion_general__ejercicio",
            "in": "query",
            "description": "Return tax returns for exactly this year (`YYYY`).",
            "schema": {
              "type": "string",
              "example": 2018
            }
          },
          {
            "name": "informacion_general__ejercicio__lt",
            "in": "query",
            "description": "Return tax returns for before this year (`YYYY`).",
            "schema": {
              "type": "string",
              "example": 2020
            }
          },
          {
            "name": "informacion_general__ejercicio__lte",
            "in": "query",
            "description": "Return tax returns for this year and earlier (`YYYY`).",
            "schema": {
              "type": "string",
              "example": 2021
            }
          },
          {
            "name": "informacion_general__ejercicio__gt",
            "in": "query",
            "description": "Return tax returns for after this year (`YYYY`).",
            "schema": {
              "type": "string",
              "example": 2019
            }
          },
          {
            "name": "informacion_general__ejercicio__gte",
            "in": "query",
            "description": "Return tax returns for this year or later (`YYYY`).",
            "schema": {
              "type": "string",
              "example": 2017
            }
          },
          {
            "name": "informacion_general__ejercicio__range",
            "in": "query",
            "description": "Return tax returns for this range of years (`YYYY`).",
            "schema": {
              "type": "string",
              "example": "2015,2021"
            }
          },
          {
            "name": "informacion_general__tipo_declaracion",
            "in": "query",
            "description": "Return tax returns with this declaration type.",
            "schema": {
              "type": "string",
              "example": "Normal"
            }
          },
          {
            "name": "informacion_general__tipo_declaracion__in",
            "in": "query",
            "description": "Return tax returns with these declaration types.",
            "schema": {
              "type": "string",
              "example": "Normal,Commercial"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return information for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxReturnsPersonalPaginated"
                    },
                    {
                      "$ref": "#/components/schemas/TaxReturnsPersonalMonthlyPaginated"
                    },
                    {
                      "$ref": "#/components/schemas/TaxReturnsBusinessPaginated"
                    },
                    {
                      "$ref": "#/components/schemas/TaxReturnsBusinessMonthlyPaginated"
                    }
                  ]
                },
                "examples": {
                  "TaxReturnPersonal": {
                    "$ref": "#/components/examples/TaxReturnPersonalListPaginated"
                  },
                  "TaxReturnPersonalMonthlyPFAE": {
                    "$ref": "#/components/examples/TaxReturnPersonalListMonthlyPaginatedPFAE"
                  },
                  "TaxReturnPersonalMonthlyPFAI": {
                    "$ref": "#/components/examples/TaxReturnPersonalListMonthlyPaginatedPFAI"
                  },
                  "TaxReturnBusiness": {
                    "$ref": "#/components/examples/TaxReturnBusinessListPaginated"
                  },
                  "TaxReturnBusinessMonthly": {
                    "$ref": "#/components/examples/TaxReturnBusinessListMonthlyPaginated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/tax-returns/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List tax returns\nfor tax_return in client.TaxReturns.list()\n  pprint(tax_return)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.tax_returns.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxReturns.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Tax returns"
        ],
        "operationId": "RetrieveTaxReturns",
        "summary": "Retrieve tax returns for a link",
        "description": "Retrieve tax return information for a specific fiscal link.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TaxReturnsMonthlyRequest"
                  },
                  {
                    "$ref": "#/components/schemas/TaxReturnsYearlyRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/TaxReturnPersonal"
                      },
                      {
                        "$ref": "#/components/schemas/TaxReturnPersonalMonthly"
                      },
                      {
                        "$ref": "#/components/schemas/TaxReturnBusiness"
                      },
                      {
                        "$ref": "#/components/schemas/TaxReturnBusinessMonthly"
                      }
                    ]
                  }
                },
                "examples": {
                  "TaxReturnPersonal": {
                    "$ref": "#/components/examples/TaxReturnPersonalList"
                  },
                  "TaxReturnPersonalMonthlyPFAE": {
                    "$ref": "#/components/examples/TaxReturnPersonalListMonthlyPFAE"
                  },
                  "TaxReturnPersonalMonthlyPFAI": {
                    "$ref": "#/components/examples/TaxReturnPersonalListMonthlyPFAI"
                  },
                  "TaxReturnBusiness": {
                    "$ref": "#/components/examples/TaxReturnBusinessList"
                  },
                  "TaxReturnBusinessMonthly": {
                    "$ref": "#/components/examples/TaxReturnBusinessListMonthly"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/TaxReturnPersonal"
                      },
                      {
                        "$ref": "#/components/schemas/TaxReturnPersonalMonthly"
                      },
                      {
                        "$ref": "#/components/schemas/TaxReturnBusiness"
                      },
                      {
                        "$ref": "#/components/schemas/TaxReturnBusinessMonthly"
                      }
                    ]
                  }
                },
                "examples": {
                  "TaxReturnPersonal": {
                    "$ref": "#/components/examples/TaxReturnPersonalList"
                  },
                  "TaxReturnPersonalMonthlyPFAE": {
                    "$ref": "#/components/examples/TaxReturnPersonalListMonthlyPFAE"
                  },
                  "TaxReturnPersonalMonthlyPFAI": {
                    "$ref": "#/components/examples/TaxReturnPersonalListMonthlyPFAI"
                  },
                  "TaxReturnBusiness": {
                    "$ref": "#/components/examples/TaxReturnBusinessList"
                  },
                  "TaxReturnBusinessMonthly": {
                    "$ref": "#/components/examples/TaxReturnBusinessListMonthly"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTimeoutError"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "### Yearly Tax Returns\ncurl -X POST \\\n  https://sandbox.belvo.com/api/tax-returns/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"\",\n    \"year_from\": YYYY,\n    \"year_to\": YYYY,\n    \"attach_pdf\": false\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n\n### Monthly Tax Returns\ncurl -X POST \\\n  https://sandbox.belvo.com/api/tax-returns/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"\",\n    \"date_from\": \"2019-01-01\",\n    \"date_to\": \"2019-04-01\",\n    \"type\": \"monthly\",\n    \"attach_pdf\": false\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Yearly Tax Returns\ntax_returns = client.TaxReturns.create(\n  link=\"link_id\",\n  year_from=\"2019\",\n  year_to=\"2020\",\n  attach_pdf=True\n)\n\n# Monthly Tax Returns\ntax_returns = client.TaxReturns.create(\n  link=\"link_id\",\n  date_from=\"2019-01-01\",\n  date_to=\"2019-04-01\",\n  attach_pdf=True,\n  type_=\"monthly\"\n)"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\n# Yearly Tax Returns\nsandbox.tax_returns.retrieve(\n  link: 'link-id',\n  year_from: \"2019\",\n  year_to: \"2020\"\n)\n\n# Monthly Tax Returns\nsandbox.tax_returns.retrieve(\n  link: 'some-link-uuid',\n  options: {\n    type: TaxReturnType::MONTHLY,\n    date_from: '2019-01-01',\n    date_to: '2019-04-01',\n  }\n      )\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\n// Yearly Tax Returns\nclient.connect()\n  .then(function () {\n    client.taxReturns.retrieve('linkID', \"2019\", \"2020\")\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n\n// Monthly Tax Returns\n\nclient.connect()\n  .then(function () {\n    client.taxReturns.retrieve('linkID', \"2019-01-01\", \"2019-04-01\", {type: 'monthly'})\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});"
            }
          ]
        }
      }
    },
    "/api/tax-returns/{id}/": {
      "get": {
        "tags": [
          "Tax returns"
        ],
        "operationId": "DetailTaxReturn",
        "summary": "Get a tax return's details",
        "description": "Get the details of a specific tax return.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `tax-return.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/tax-returns/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get a tax return\ntax_return = client.TaxReturns.get(id=\"tax-return-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.tax_returns.detail id: 'tax-return-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxReturns.detail('taxReturnId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TaxReturnPersonal"
                    },
                    {
                      "$ref": "#/components/schemas/TaxReturnPersonalMonthly"
                    },
                    {
                      "$ref": "#/components/schemas/TaxReturnBusiness"
                    },
                    {
                      "$ref": "#/components/schemas/TaxReturnBusinessMonthly"
                    }
                  ]
                },
                "examples": {
                  "TaxReturnPersonal": {
                    "$ref": "#/components/examples/TaxReturnPersonalListDetail"
                  },
                  "TaxReturnPersonalMonthlyPFAE": {
                    "$ref": "#/components/examples/TaxReturnPersonalListMonthlyPFAEDetail"
                  },
                  "TaxReturnPersonalMonthlyPFAI": {
                    "$ref": "#/components/examples/TaxReturnPersonalListMonthlyPFAIDetail"
                  },
                  "TaxReturnBusiness": {
                    "$ref": "#/components/examples/TaxReturnBusinessListDetail"
                  },
                  "TaxReturnBusinessMonthly": {
                    "$ref": "#/components/examples/TaxReturnBusinessListMonthlyDetail"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax returns"
        ],
        "operationId": "DestroyTaxReturn",
        "summary": "Delete a tax return",
        "description": "Delete a specific tax return from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the tax return you want to delete.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/tax-returns/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete a tax return\nclient.TaxReturns.delete(\"tax-return-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.tax_returns.delete id: 'tax-return-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxReturns.delete('taxReturnId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/tax-status/": {
      "get": {
        "tags": [
          "Tax status"
        ],
        "operationId": "ListTaxStatus",
        "summary": "List all tax statuses",
        "description": "Get a paginated list of all existing tax status in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `link.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return tax statuses that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return tax statuses that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return tax statuses that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return tax statuses that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return tax statuses that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information for this `tax-status.id`.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information for these `tax-status.id`s.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return information for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxStatusPaginatedResponse"
                },
                "examples": {
                  "TaxStatusPersonalListPaginated": {
                    "$ref": "#/components/examples/TaxStatusPersonalListPaginated"
                  },
                  "TaxStatusBusinessListPaginated": {
                    "$ref": "#/components/examples/TaxStatusBusinessListPaginated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/tax-status/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List tax status\nclient.TaxStatus.list()\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.tax_status.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxStatus.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Tax status"
        ],
        "operationId": "RetrieveTaxStatus",
        "summary": "Retrieve tax statuses for a link",
        "description": "Retrieve tax status information for a specific fiscal link.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxStatus"
                },
                "examples": {
                  "TaxStatusPersonal": {
                    "$ref": "#/components/examples/TaxStatusPersonalList"
                  },
                  "TaxStatusBusiness": {
                    "$ref": "#/components/examples/TaxStatusBusinessList"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxStatus"
                },
                "examples": {
                  "TaxStatusPersonal": {
                    "$ref": "#/components/examples/TaxStatusPersonalList"
                  },
                  "TaxStatusBusiness": {
                    "$ref": "#/components/examples/TaxStatusBusinessList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://sandbox.belvo.com/api/tax-status/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"link-id\",\n    \"attach_pdf\": false\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve tax status\nclient.TaxStatus.create('link-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.tax_status.retrieve(\n  link: 'link-id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxStatus.retrieve('linkID')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/tax-status/{id}/": {
      "get": {
        "tags": [
          "Tax status"
        ],
        "operationId": "DetailTaxStatus",
        "summary": "Get a tax status's details",
        "description": "Get the details of a specific tax status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `tax-status.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/tax-status/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get tax status\nclient.TaxStatus.get('tax-status-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.tax_status.detail id: 'tax-status-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxStatus.detail('taxStatusId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxStatus"
                },
                "examples": {
                  "TaxStatusPersonal": {
                    "$ref": "#/components/examples/TaxStatusPersonalList"
                  },
                  "TaxStatusBusiness": {
                    "$ref": "#/components/examples/TaxStatusBusinessList"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax status"
        ],
        "operationId": "DestroyTaxStatus",
        "summary": "Delete a tax status",
        "description": "Delete a specific tax status from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "the `tax-status.id` that you want to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/tax-status/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete tax status\nclient.TaxStatus.delete('tax-status-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.tax_status.delete id: 'tax-status-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxStatus.delete('taxStatusId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/tax-compliance-status/": {
      "get": {
        "tags": [
          "Tax compliance status"
        ],
        "operationId": "ListTaxComplianceStatus",
        "summary": "List all tax compliance statuses",
        "description": "Get a paginated list of all existing Tax compliance statuses in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `link.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return tax compliance statuses that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return tax compliance statuses that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return tax compliance statuses that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return tax compliance statuses that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return tax compliance statuses that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information for this `tax-compliance-status.id`.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information for these `tax-compliance-status.id`s.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return information for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxComplianceStatusPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/tax-compliance-status/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List Tax compliance status\nclient.TaxComplianceStatus.list()\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.tax_compliance_status.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxComplianceStatus.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Tax compliance status"
        ],
        "operationId": "RetrieveTaxComplianceStatus",
        "summary": "Retrieve tax compliance statuses for a link",
        "description": "Retrieve the Tax compliance status information for a specific fiscal link.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxComplianceStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxComplianceStatus"
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxComplianceStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://sandbox.belvo.com/api/tax-compliance-status/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"link-id\",\n    \"attach_pdf\": false\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve Tax compliance status\nclient.TaxComplianceStatus.create('link-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.tax_compliance_status.retrieve(\n  link: 'link-id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxComplianceStatus.retrieve('linkID')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/tax-compliance-status/{id}/": {
      "get": {
        "tags": [
          "Tax compliance status"
        ],
        "operationId": "DetailTaxComplianceStatus",
        "summary": "Get a tax compliance status's details",
        "description": "Get the details of a specific Tax compliance status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `tax-compliance-status.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxComplianceStatus"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://sandbox.belvo.com/api/tax-compliance-status/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get Tax compliance status\nclient.TaxComplianceStatus.get('tax-compliance-status-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.tax_status.detail id: 'tax-compliance-status-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxComplianceStatus.detail('taxComplianceStatusId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Tax compliance status"
        ],
        "operationId": "DestroyTaxComplianceStatus",
        "summary": "Delete a tax compliance status",
        "description": "Delete a specific Tax compliance status from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `tax-compliance-status.id` that you want to delete.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://sandbox.belvo.com/api/tax-compliance-status/{id}/ \\\n  -H 'Host: sandbox.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete Tax compliance status\nclient.TaxComplianceStatus.delete('tax-compliance-status-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.tax_compliance_status.delete id: 'tax-compliance-status-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.taxComplianceStatus.delete('taxComplianceStatusId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/incomes/": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "operationId": "ListIncomes",
        "summary": "List all incomes",
        "description": "Get a paginated list of all incomes in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "The `account.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `account.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "account__in",
            "in": "query",
            "description": "Return incomes for these `account.id`s.",
            "schema": {
              "type": "string",
              "example": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return incomes that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return incomes that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return incomes that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return incomes that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return incomes that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information only for this `income.id`.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information only for these `income.id`s.",
            "schema": {
              "type": "string",
              "example": "73694155-b871-41ec-94e3-37d17ff62b5d,40968d42-7d89-49e3-9931-78baa8e0544e"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomesPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://api.belvo.com/api/incomes/ \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"https://api.belvo.com\")\n\n# List incomes\nfor income in client.Incomes.list():\n    pprint(income)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n)\n\nclient.incomes.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n);\n\nclient.connect()\n  .then(function () {\n    client.incomes.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Incomes"
        ],
        "operationId": "RetrieveIncome",
        "summary": "Retrieve incomes for a link",
        "description": "Retrieve income insights for <b>checking and savings accounts</b> from a specific link. You can receive insights for a period of up to 365 days, depending on the transaction history available for each [bank](https://developers.belvo.com/docs/institution).",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Income"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Income"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidPeriodError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X POST \\\n  https://api.belvo.com/api/incomes/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: api.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"\"\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"https://api.belvo.com\")\n\n# Retrieve incomes\nincomes = client.Incomes.create(\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n)\n\nclient.incomes.retrieve link: 'link-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n);\n\nclient.connect()\n  .then(function () {\n    client.incomes.retrieve('link-id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Incomes"
        ],
        "operationId": "PatchIncomes",
        "summary": "Complete an incomes request",
        "description": "Used to resume an Income retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Income"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Income"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X PATCH \\\n  https://api.belvo.com/api/incomes/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: api.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n      \"session\": \"\",\n      \"token\": \"\",\n      \"link\": \"\"\n  }' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"https://api.belvo.com\")\n\n# Resume incomes\nincomes = client.Incomes.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n)\n\nclient.incomes.resume(\n  session: 'session_id',\n  token: 'token',\n  link: 'link_id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n);\n\nclient.connect()\n  .then(function () {\n    client.incomes.resume('sessionId', 'token', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/incomes/{id}/": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "operationId": "DetailIncome",
        "summary": "Get an income's details",
        "description": "Get the details of a specific income.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `income.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Income"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl https://api.belvo.com/api/incomes/{id} \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"https://api.belvo.com\")\n\n# Get an income\nincome = client.Incomes.get(id=\"income-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n)\n\nclient.incomes.detail id: 'income-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n);\n\nclient.connect()\n  .then(function () {\n    client.incomes.detail('incomeId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Incomes"
        ],
        "operationId": "DestroyIncomes",
        "summary": "Delete an income",
        "description": "Delete a specific income from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "the `income.id` that you want to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "cURL",
              "code": "curl -X DELETE \\\n  https://api.belvo.com/api/incomes/{id}/ \\\n  -H 'Host: api.belvo.com' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
            },
            {
              "language": "python",
              "code": "# check our python-client library on github\n# https://github.com/belvo-finance/belvo-python\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"https://api.belvo.com\")\n\n# Delete an income\nclient.Incomes.delete(\"income-id\")\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# check our Ruby gem on github\n# https://github.com/belvo-finance/belvo-ruby\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n)\n\nclient.incomes.delete id: 'income-id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// check our node package on github\n// https://github.com/belvo-finance/belvo-js\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'https://api.belvo.com'\n);\n\nclient.connect()\n  .then(function () {\n    client.incomes.delete('incomeId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/recurring-expenses/": {
      "get": {
        "tags": [
          "Recurring Expenses"
        ],
        "operationId": "ListRecurringExpenses",
        "summary": "List all recurring expenses",
        "description": "Get a paginated list of all recurring expenses in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding either the `link.id` or the `account.id` filters in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "The `account.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding either the `link.id` or the `account.id` filters in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "account_in",
            "in": "query",
            "description": "Return recurring expenses for these `accound.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,d3d941ab-4ca5-43c1-8b23-db329ee4cb7e"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information for this `recurring-expense.id`.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information for these `recurring-expense.id`s.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return information for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpensesPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List Recurring Expenses\nfor income in client.RecurringExpenses.list():\npprint(income)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.recurring_expenses.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.recurringExpenses.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Recurring Expenses"
        ],
        "operationId": "RetrieveRecurringExpenses",
        "summary": "Retrieve recurring expenses for a link",
        "description": "Retrieve recurring expense insights for <b>checking and savings accounts</b> from a specific link. You can receive insights for a period of up to 365 days, depending on the transaction history available for each [bank](https://developers.belvo.com/docs/institution).",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StandardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when save_data=false)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringExpenses"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when save_data=true)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringExpenses"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidPeriodError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve Recurring Expense\nclient.RecurringExpenses.create('link-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.recurring_expenses.retrieve(\n  link: 'link-id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.recurringExpenses.retrieve('linkID')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Recurring Expenses"
        ],
        "operationId": "PatchRecurringExpenses",
        "summary": "Complete a recurring expenses request",
        "description": "Used to resume an Recurring Expenses retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when save_data=false)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringExpenses"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when save_data=true)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringExpenses"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume Recurring Expenses\nincomes = client.RecurringExpenses.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.recurring_expenses.resume(\n  session: 'session_id',\n  token: 'token',\n  link: 'link_id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.recurringExpenses.resume('sessionId', 'token', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/api/recurring-expenses/{id}/": {
      "get": {
        "tags": [
          "Recurring Expenses"
        ],
        "operationId": "DetailRecurringExpense",
        "summary": "Get a recurring expense's details",
        "description": "Get the details of a specific recurring expense.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `recurring-expenses.id` you want to get detailed information about.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringExpenses"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get Recurring Expense\nclient.RecurringExpenses.get('recurring-expenses.id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.recurring_expenses.detail id: 'recurring-expenses.id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.recurringExpenses.detail('recurring-expenses.id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Recurring Expenses"
        ],
        "operationId": "DestroyRecurringExpense",
        "summary": "Delete a recurring expense",
        "description": "Delete a specific recurring expense from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `recurring-expenses.id` that you want to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete Tax compliance status\nclient.RecurringExpenses.delete('recurring-expenses.id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.recurring_expenses.delete id: 'recurring-expenses.id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.recurringExpenses.delete('recurring-expenses.id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/investments/portfolios/": {
      "get": {
        "tags": [
          "Investment Portfolios (BETA)"
        ],
        "operationId": "ListPortfolio",
        "description": "Get a paginated list of all the existing portfolios (and their instruments) in your Belvo account. By default, we return up to 100 results per page.",
        "summary": "List all portfolios",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `link.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsPortfoliosPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List Investment Portfolios\nfor portfolio in client.InvestmentsPortfolios.list():\npprint(portfolio)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.investments_portfolio.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsPortfolios.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Investment Portfolios (BETA)"
        ],
        "operationId": "RetrievePortfolio",
        "summary": "Retrieve portfolios for a link",
        "description": "Retrieve all portfolios for an existing link.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StandardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsPortfolio"
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsPortfolio"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve Investment Portfolios\nclient.InvestmentsPortfolios.create('link-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.investments_portfolio.retrieve(\n  link: 'link-id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsPortfolios.retrieve('linkID')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Investment Portfolios (BETA)"
        ],
        "operationId": "PatchPortfolio",
        "summary": "Complete a portfolios request",
        "description": "Used to resume a portfolio retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBodyWithoutSaveData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsPortfolio"
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsPortfolio"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume Investment Portfolios\ninvestments_portfolios = client.InvestmentsPortfolios.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.investments_portfolio.resume(\n  session: 'session_id',\n  token: 'token',\n  link: 'link_id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsPortfolios.resume('sessionId', 'token', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/investments/portfolios/{id}/": {
      "get": {
        "tags": [
          "Investment Portfolios (BETA)"
        ],
        "operationId": "DetailPortfolio",
        "summary": "Get a portfolio's details",
        "description": "Get the details of a specific portfolio.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `portfolio.id` you want to get detailed information about."
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsPortfolio"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get Investment Portfolio\nclient.InvestmentsPortfolios.get('investments-portfolios.id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.investments_portfolio.detail id: 'investments-portfolios.id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsPortfolios.detail('investments-portfolios.id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Investment Portfolios (BETA)"
        ],
        "operationId": "DestroyPortfolio",
        "summary": "Delete a portfolio",
        "description": "Delete a specific investment portfolio and all associated instruments, transactions, and owners from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `portfolio.id` that you want to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete Investment Portfolio\nclient.InvestmentsPortfolios.delete('investment-portfolio.id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.investments_portfolio.delete id: 'investment-portfolio.id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsPortfolios.delete('investment-portfolio.id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/investments/transactions/": {
      "get": {
        "tags": [
          "Investment Transactions (BETA)"
        ],
        "operationId": "ListInvestmentTransactions",
        "description": "Get a paginated list of all the existing transactions for an instrument in your Belvo account. By default, we return up to 100 results per page.",
        "summary": "List all investment transactions",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding either the `link.id` or the `portfolio.id` filters in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "portfolio",
            "in": "query",
            "description": "The `portfolio.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding either the `link.id` or the `portfolio.id` filters in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "d979df3a-5d0f-4cc9-9bd4-b75c28b45963"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "portfolio__in",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsTransactionsPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List Investment Transactions\nfor transaction in client.InvestmentsTransactions.list():\npprint(transaction)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.investments_transaction.list\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsTransactions.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "post": {
        "tags": [
          "Investment Transactions (BETA)"
        ],
        "operationId": "RetrieveInstrumentTransaction",
        "summary": "Retrieve investment transactions for a link",
        "description": "Retrieve all instrument transactions for an existing link.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstrumentTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsInstrumentTransaction"
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsInstrumentTransaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve Investment Transactions\nclient.InvestmentsTransactions.create('link-id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.investments_transaction.retrieve(\n  link: 'link-id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsTransactions.retrieve('linkID')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "patch": {
        "tags": [
          "Investment Transactions (BETA)"
        ],
        "operationId": "PatchInvestmentsTransactions",
        "summary": "Complete a investment transactions request",
        "description": "Used to resume a Investment retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBodyWithoutSaveData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsInstrumentTransaction"
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsInstrumentTransaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume Investment Transactions\ninvestments_transactions = client.InvestmentsTransactions.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nclient = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.investments_transaction.resume(\n  session: 'session_id',\n  token: 'token',\n  link: 'link_id'\n)\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsTransactions.resume('sessionId', 'token', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/investments/transactions/{id}/": {
      "get": {
        "tags": [
          "Investment Transactions (BETA)"
        ],
        "operationId": "DetailInvestmentTransaction",
        "summary": "Get an investment transaction's details",
        "description": "Get the details of a specific instrument's transaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `transaction.id` you want to get detailed information about."
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestmentsInstrumentTransaction"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get Investment Transaction\nclient.InvestmentsTransactions.get('investments-transactions.id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.investments_transaction.detail id: 'investments-transaction.id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsTransactions.detail('investments-transaction.id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      },
      "delete": {
        "tags": [
          "Investment Transactions (BETA)"
        ],
        "operationId": "DestroyInvestmentTransaction",
        "summary": "Delete an investment transaction",
        "description": "Delete a specific instrument transaction from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `transaction.id` that you want to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "name": "Belvo Python SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete Investment Portfolio\nclient.InvestmentsTransactions.delete('investment-transaction.id')\n"
            },
            {
              "language": "ruby",
              "name": "Belvo Ruby SDK",
              "code": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.investments_transaction.delete id: 'investment-transaction.id'\n"
            },
            {
              "language": "node",
              "name": "Belvo Node SDK",
              "code": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.investmentsTransactions.delete('investment-transaction.id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
            }
          ]
        }
      }
    },
    "/receivables/transactions/": {
      "get": {
        "tags": [
          "Receivable Transactions (BETA)"
        ],
        "operationId": "ListReceivableTransactions",
        "description": "Get a paginated list of all the existing receivable transactions in your Belvo account. We return up to 100 results per page.",
        "summary": "List all receivable transactions",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding either the `link.id` or the `account.id` filters in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "The `account.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding either the `link.id` or the `account.id` filters in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "d979df3a-5d0f-4cc9-9bd4-b75c28b45963"
            }
          },
          {
            "name": "account__in",
            "in": "query",
            "description": "Return receivable transactions only for these `account.id`s.",
            "schema": {
              "type": "string",
              "example": "24ccab1d-3a86-4136-a6eb-e04bf52b356f,beb2b197-3cf7-428d-bef3-f415c0d57509"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return receivable transactions that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return receivable transactions that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return receivable transactions that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return receivable transactions that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return receivable transactions that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return information for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          },
          {
            "name": "value_date",
            "in": "query",
            "description": "Return receivable transactions for exactly this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "value_date__gt",
            "in": "query",
            "description": "Return receivable transactions for after this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-06"
            }
          },
          {
            "name": "value_date__gte",
            "in": "query",
            "description": "Return receivable transactions for this date or later (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "value_date__lt",
            "in": "query",
            "description": "Return receivable transactions for before this date (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-02"
            }
          },
          {
            "name": "value_date__lte",
            "in": "query",
            "description": "Return receivable transactions for this date or earlier (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01"
            }
          },
          {
            "name": "value_date__range",
            "in": "query",
            "description": "Return receivable transactions for this date range (`YYYY-MM-DD` or full ISO-8601 timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-01,2022-05-06"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivablesTransactionsPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Receivable Transactions (BETA)"
        ],
        "operationId": "RetrieveReceivableTransactions",
        "summary": "Retrieve receivable transactions for a link",
        "description": "Retrieve all receivable transactions for an existing link.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceivableTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivablesTransaction"
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivablesTransaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/receivables/transactions/{id}/": {
      "get": {
        "tags": [
          "Receivable Transactions (BETA)"
        ],
        "operationId": "DetailReceivableTransaction",
        "summary": "Get a receivable transaction's details",
        "description": "Get the details of a specific receivable transaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `transaction.id` you want to get detailed information about."
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivablesTransaction"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Receivable Transactions (BETA)"
        ],
        "operationId": "DestroyReceivableTransaction",
        "summary": "Delete a receivable transaction",
        "description": "Delete a specific receivable transaction from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The `transaction.id` that you want to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/risk-insights/": {
      "get": {
        "tags": [
          "Risk Insights"
        ],
        "operationId": "ListRiskInsights",
        "summary": "List all risk insights",
        "description": "Get a paginated list of all risk insight analyses in your Belvo account. By default, we return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Indicates how many results to return per page. By default we return 100 results per page. \n\n‚ÑπÔ∏è The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000,
              "example": 100
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `link.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Return information for this `risk-insight.id`.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Return information for these `risk-insight.id`s.",
            "schema": {
              "type": "string",
              "example": "eb42c21c-2d9e-4dc1-89b8-9401d4beca73,82b3f18c-055b-4f82-9fae-d2201815ab0c"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return information for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskInsightsPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl https://sandbox.belvo.com/api/risk-insights/ \\\n-u [Secret Key ID]:[Secret Key PASSWORD]\n"
          },
          {
            "lang": "python",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom pprint import pprint\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# List Risk insights\nfor risk_insight in client.RiskInsights.list():\npprint(income)\n"
          },
          {
            "lang": "ruby",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.risk_insights.list\n"
          },
          {
            "lang": "javascript",
            "source": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.riskInsights.list()\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
          }
        ]
      },
      "post": {
        "tags": [
          "Risk Insights"
        ],
        "operationId": "RetrieveRiskInsights",
        "summary": "Retrieve risk insights for a link",
        "description": "Request the risk insights for a given link ID.\n\nIf you need to know the currency of the account, just do a GET Details to the accounts endpoint (using the ID you receive from the accounts response).",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StandardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when save_data=false)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskInsights"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when save_data=true)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskInsights"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidPeriodError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X POST \\\n  https://sandbox.belvo.com/api/risk-insights/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: sandbox.belvo.com' \\\n  -H 'cache-control: no-cache' \\\n  -d '{\n    \"link\": \"link_id\"\n}' \\\n  -u [Secret Key ID]:[Secret Key PASSWORD]\n"
          },
          {
            "lang": "python",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Retrieve Risk insights\nclient.RiskInsights.create('link-id')\n"
          },
          {
            "lang": "ruby",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nclient.risk_insights.retrieve(\n  link: 'link-id'\n)\n"
          },
          {
            "lang": "javascript",
            "source": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.riskInsights.retrieve('linkID')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
          }
        ]
      },
      "patch": {
        "tags": [
          "Risk Insights"
        ],
        "operationId": "PatchRiskInsights",
        "summary": "Complete a risk insights request",
        "description": "Used to resume an Risk insights retrieve session that was paused because an MFA token was required by the institution.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when save_data=false)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskInsights"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when save_data=true)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskInsights"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "428": {
            "description": "MFA Token Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenRequiredResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X PATCH \\\nhttps://sandbox.belvo.com/api/risk-insights/ \\\n-H 'Content-Type: application/json' \\\n-H 'Host: sandbox.belvo.com' \\\n-H 'cache-control: no-cache' \\\n-d '{\n    \"session\": \"\",\n    \"token\": \"\",\n    \"link\": \"\"\n}' \\\n-u [Secret Key ID]:[Secret Key PASSWORD]\n"
          },
          {
            "lang": "python",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Resume Risk insights\nrisk_insights = client.RiskInsights.resume(\n  session=\"session_id\",\n  token=\"token\",\n  link=\"link_id\"\n)\n"
          },
          {
            "lang": "ruby",
            "source": "# For more information about our SDKs go to:\n    # https://developers.belvo.com/docs/belvo-sdks\n\n    require 'belvo'\n\n    client = Belvo::Client.new(\n      'Secret Key ID',\n      'Secret Key PASSWORD',\n      'sandbox'\n    )\n\n    client.risk_insights.resume(\n      session: 'session_id',\n      token: 'token',\n      link: 'link_id'\n    )\n"
          },
          {
            "lang": "javascript",
            "source": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.riskInsights.resume('sessionId', 'token', 'linkId')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
          }
        ]
      }
    },
    "/api/risk-insights/{id}/": {
      "get": {
        "tags": [
          "Risk Insights"
        ],
        "operationId": "DetailRiskInsights",
        "summary": "Get a risk insight's details",
        "description": "Get the details of a specific risk insight.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `risk-insights.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskInsights"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl https://sandbox.belvo.com/api/risk-insights/{id} \\\n-u [Secret Key ID]:[Secret Key PASSWORD]\n"
          },
          {
            "lang": "python",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Get Risk insight\nclient.RiskInsights.get('risk-insights.id')\n"
          },
          {
            "lang": "ruby",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.risk_insights.detail id: 'risk-insights.id'\n"
          },
          {
            "lang": "javascript",
            "source": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.riskInsights.detail('risk-insights.id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
          }
        ]
      },
      "delete": {
        "tags": [
          "Risk Insights"
        ],
        "operationId": "DestroyRiskInsights",
        "summary": "Delete a risk insight",
        "description": "Delete a specific risk insight from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `risk-insights.id` that you want to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl -X DELETE \\\nhttps://sandbox.belvo.com/api/risk-insights/{id}/ \\\n-H 'Host: sandbox.belvo.com' \\\n-u [Secret Key ID]:[Secret Key PASSWORD]\n"
          },
          {
            "lang": "python",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nfrom belvo.client import Client\n\n# Login to Belvo API\nclient = Client(\"Secret Key ID\", \"Secret Key PASSWORD\", \"sandbox\")\n\n# Delete Risk insight\nclient.RiskInsights.delete('risk-insights.id')\n"
          },
          {
            "lang": "ruby",
            "source": "# For more information about our SDKs go to:\n# https://developers.belvo.com/docs/belvo-sdks\n\nrequire 'belvo'\n\nsandbox = Belvo::Client.new(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n)\n\nsandbox.risk_insights.delete id: 'risk-insights.id'\n"
          },
          {
            "lang": "javascript",
            "source": "// For more information about our SDKs go to:\n// https://developers.belvo.com/docs/belvo-sdks\n\nvar belvo = require('belvo').default;\n\nvar client = new belvo(\n  'Secret Key ID',\n  'Secret Key PASSWORD',\n  'sandbox'\n);\n\nclient.connect()\n  .then(function () {\n    client.riskInsights.delete('risk-insights.id')\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n});\n"
          }
        ]
      }
    },
    "/api/tax-retentions/": {
      "get": {
        "tags": [
          "Tax retentions"
        ],
        "operationId": "ListTaxRetentions",
        "summary": "List all tax retentions",
        "description": "Get a paginated list of all existing tax retentions in your Belvo account. We return up to 100 results per page.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The `link.id` you want to filter by.\n\n‚ÑπÔ∏è We highly recommend adding the `link.id` filter in order to improve your performance.\n",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4"
            }
          },
          {
            "name": "created_at__gt",
            "in": "query",
            "description": "Return tax retentions that were last updated in Belvo's database after this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-05"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "description": "Return tax retentions that were last updated in Belvo's database after or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-05-04"
            }
          },
          {
            "name": "created_at__lt",
            "in": "query",
            "description": "Return tax retentions that were last updated in Belvo's database before this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-04-01"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "description": "Return tax retentions that were last updated in Belvo's database before or on this date (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-30"
            }
          },
          {
            "name": "created_at__range",
            "in": "query",
            "description": "Return tax retentions that were last updated in Belvo's database between two dates (`YYYY-MM-DD` or full `ISO-8601` timestamp).",
            "schema": {
              "type": "string",
              "example": "2022-03-03,2022-05-04"
            }
          },
          {
            "name": "link__in",
            "in": "query",
            "description": "Return information for these `link.id`s.",
            "schema": {
              "type": "string",
              "example": "8848bd0c-9c7e-4f53-a732-ec896b11d4c4,cc2b13cf-336e-497c-9fad-e074b580df65"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRetentionsPaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tax retentions"
        ],
        "operationId": "RetrieveTaxRetentions",
        "summary": "Retrieve tax retentions for a link",
        "description": "Retrieve tax retention information from a specific link. The maximum number of tax retentions that can be returned for a period is 500.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRetentionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok (when `save_data=false`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxRetentions"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created (when `save_data=true`)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxRetentions"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/TooManySessionsError"
                      },
                      {
                        "$ref": "#/components/schemas/SessionExpiredError"
                      },
                      {
                        "$ref": "#/components/schemas/ValidationError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionDownError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionUnavailableError"
                      },
                      {
                        "$ref": "#/components/schemas/InstitutionInactiveError"
                      },
                      {
                        "$ref": "#/components/schemas/UnsupportedOperationError"
                      },
                      {
                        "$ref": "#/components/schemas/InvalidLinkError"
                      },
                      {
                        "$ref": "#/components/schemas/UnconfirmedLinkError"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Request Timeout",
                  "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/RequestTimeoutError"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "title": "Unexpected Error",
                  "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/UnexpectedError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tax-retentions/{id}/": {
      "get": {
        "tags": [
          "Tax retentions"
        ],
        "operationId": "DetailTaxRetentions",
        "summary": "Get a tax retention's details",
        "description": "Get the details of a specific tax retention.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `tax-retention.id` you want to get detailed information about.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRetentions"
                }
              }
            }
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax retentions"
        ],
        "operationId": "DestroyTaxRetention",
        "summary": "Delete a tax retention",
        "description": "Delete a specific tax retention from your Belvo account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The `tax-retention.id` that you want to delete.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Authentication to Belvo API failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
                  "items": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "You made a request where you:\n\n  - provided the wrong URL.\n  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.\n  ",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true,
    "samples-languages": [
      "curl",
      "node",
      "ruby",
      "python"
    ]
  }
}
